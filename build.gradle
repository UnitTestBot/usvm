plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.6.20'
    id 'application'
}

group 'org.example'
version '1.0-SNAPSHOT'

sourceCompatibility = '11' // Change this to your desired Java version
targetCompatibility = '11' // Change this to your desired Java version

repositories {
    mavenCentral()
    maven() {
        url "https://maven.pkg.jetbrains.space/kotlin/p/kotlin/bootstrap/"
    }
    maven() {
        url "https://dl.google.com/dl/android/maven2"
    }
    maven() {
        url 'https://jitpack.io'
    }
    maven() {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

ext {
    kotlin_version = '1.6.20'
    aetherVersion = '1.1.0'
}

dependencies {
    //Intellij core
    implementation group: 'com.android.tools.external.com-intellij', name: 'intellij-core', version: '30.1.0-alpha10'
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    //Kootstrap
    implementation group: 'org.apache.maven', name: 'maven-model-builder', version: '3.3.9'
    implementation "org.apache.maven:maven-aether-provider:3.3.3"
    implementation "org.eclipse.aether:aether-api:1.1.0"
    implementation "org.eclipse.aether:aether-util:1.1.0"
    implementation "org.eclipse.aether:aether-impl:${aetherVersion}"
    implementation group: 'org.eclipse.aether', name: 'aether-connector-basic', version: "${aetherVersion}"
    implementation "org.eclipse.aether:aether-transport-file:${aetherVersion}"
    implementation "org.eclipse.aether:aether-transport-http:${aetherVersion}"
    implementation "org.eclipse.aether:aether-transport-wagon:${aetherVersion}"
    implementation "org.apache.maven:maven-aether-provider:3.3.3"
    implementation "org.apache.commons:commons-exec:1.3"

    implementation group: 'commons-cli', name: 'commons-cli', version: '1.4'
    implementation "commons-io:commons-io:2.6"
    implementation 'com.jcraft:jsch:0.1.55'


    //Kotlin-libs
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-compiler', version: "${kotlin_version}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlin_version}"
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: "${kotlin_version}"
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-common', version: "${kotlin_version}"
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-compiler', version: "${kotlin_version}"
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-compiler-embeddable', version: "${kotlin_version}"
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-daemon-embeddable', version: "${kotlin_version}"
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-test', version: "${kotlin_version}"
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-test-common', version: "${kotlin_version}"
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-script-runtime', version: "${kotlin_version}"
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-test-annotations-common', version: "${kotlin_version}"
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-test-junit', version: "${kotlin_version}"
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: "${kotlin_version}"
}

test {
    useJUnitPlatform()
}

task(runFuzzer, dependsOn: 'classes', type: JavaExec) {
    main = 'com.spbpu.bbfinfrastructure.MainKt'
    classpath = sourceSets.main.runtimeClasspath
}

task(runInfFuzzer, dependsOn: 'classes', type: JavaExec) {
    main = 'com.spbpu.bbfinfrastructure.runner.MainKt'
    classpath = sourceSets.main.runtimeClasspath
}