if (~[ArrayList]~.size() > ~[int]~ || ~[int]~ == ~[int]~) {
       ~[String]~ = ~[String]~
}
---------
if (~[int]~ > 0 && ~[int]~ <= ~[int]~ || ~[int]~ < 0 && ~[int]~ <= ~[int]~) {
         while(true) {
            ++~[int]~;
            if (~[int]~ > 1) {
               throw new AssertionError("Loop should be executed once");
            }

            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
      }
---------
for(~[boolean[]]~ = new boolean[3]; ~[int]~ < 3; ++~[int]~) {
         ~[boolean[]]~[~[int]~] = ~[int]~ % 2 != 0;
      }
---------
for(~[byte[]]~ = new byte[3]; ~[int]~ < 3; ++~[int]~) {
         ~[byte[]]~[~[int]~] = (byte)(~[int]~ + 1);
      }
---------
for(~[short[]]~ = new short[3]; ~[int]~ < 3; ++~[int]~) {
         ~[short[]]~[~[int]~] = (short)(~[int]~ + 1);
      }
---------
for(~[char[]]~ = new char[3]; ~[int]~ < 3; ++~[int]~) {
         ~[char[]]~[~[int]~] = (char)(97 + ~[int]~);
      }
---------
for(~[int[]]~ = new int[3]; ~[int]~ < 3; ++~[int]~) {
         ~[int[]]~[~[int]~] = ~[int]~ + 1;
      }
---------
for(~[float[]]~ = new float[3]; ~[int]~ < 3; ++~[int]~) {
         ~[float[]]~[~[int]~] = (float)(~[int]~ + 1);
      }
---------
for(~[double[]]~ = new double[3]; ~[int]~ < 3; ++~[int]~) {
         ~[double[]]~[~[int]~] = (double)(~[int]~ + 1);
      }
---------
for(~[long[]]~ = new long[3]; ~[int]~ < 3; ++~[int]~) {
         ~[long[]]~[~[int]~] = (long)~[int]~ + 1L;
      }
---------
if ((~[int]~ & 2) != 0) {
         ~[boolean]~ = false;
      }
---------
if ((~[int]~ & 4) != 0) {
         ~[boolean]~ = false;
      }
---------
if ((~[int]~ & 8) != 0) {
         ~[boolean]~ = false;
      }
---------
if ((~[int]~ & 16) != 0) {
         ~[boolean]~ = false;
      }
---------
if ((~[int]~ & 32) != 0) {
         ~[boolean]~ = false;
      }
---------
if ((~[int]~ & 64) != 0) {
         ~[boolean]~ = false;
      }
---------
if ((~[int]~ & 128) != 0) {
         ~[boolean]~ = false;
      }
---------
if ((~[int]~ & 256) != 0) {
         ~[boolean]~ = false;
      }
---------
if ((~[int]~ & 512) != 0) {
         ~[boolean]~ = false;
      }
---------
for(int var8 = ~[boolean[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
            boolean element$iv = ~[boolean[]]~[~[int]~];
            int var10000 = ~[int]~++;
            boolean v = ~[boolean]~;
            boolean r = ~[boolean]~;
            int i = ~[int]~;
            int var13 = false;
            ~[boolean]~ = ~[boolean]~ && ~[boolean[]]~[~[int]~] == ~[boolean]~;
         }
---------
for(int var8 = ~[byte[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
            byte element$iv = ~[byte[]]~[~[int]~];
            int var10000 = ~[int]~++;
            byte v = ~[byte]~;
            boolean r = ~[boolean]~;
            int i = ~[int]~;
            int var13 = false;
            ~[boolean]~ = ~[boolean]~ && ~[byte[]]~[~[int]~] == ~[byte]~;
         }
---------
for(int var8 = ~[short[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
            short element$iv = ~[short[]]~[~[int]~];
            int var10000 = ~[int]~++;
            short v = ~[short]~;
            boolean r = ~[boolean]~;
            int i = ~[int]~;
            int var13 = false;
            ~[boolean]~ = ~[boolean]~ && ~[short[]]~[~[int]~] == ~[short]~;
         }
---------
for(int var8 = ~[char[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
            char element$iv = ~[char[]]~[~[int]~];
            int var10000 = ~[int]~++;
            char v = ~[char]~;
            boolean r = ~[boolean]~;
            int i = ~[int]~;
            int var13 = false;
            ~[boolean]~ = ~[boolean]~ && ~[char[]]~[~[int]~] == ~[char]~;
         }
---------
for(int var8 = ~[int[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
            int element$iv = ~[int[]]~[~[int]~];
            int var10000 = ~[int]~++;
            int v = ~[int]~;
            boolean r = ~[boolean]~;
            int i = ~[int]~;
            int var13 = false;
            ~[boolean]~ = ~[boolean]~ && ~[int[]]~[~[int]~] == ~[int]~;
         }
---------
for(int var8 = ~[long[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
            long element$iv = ~[long[]]~[~[int]~];
            int var10000 = ~[int]~++;
            long v = ~[long]~;
            boolean r = ~[boolean]~;
            int i = ~[int]~;
            int var15 = false;
            ~[boolean]~ = ~[boolean]~ && ~[long[]]~[~[int]~] == ~[long]~;
         }
---------
for(int var8 = ~[float[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
            float element$iv = ~[float[]]~[~[int]~];
            int var10000 = ~[int]~++;
            float v = ~[float]~;
            boolean r = ~[boolean]~;
            int i = ~[int]~;
            int var13 = false;
            ~[boolean]~ = ~[boolean]~ && ~[float[]]~[~[int]~] == ~[float]~;
         }
---------
for(int var8 = ~[double[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
            double element$iv = ~[double[]]~[~[int]~];
            int var10000 = ~[int]~++;
            double v = ~[double]~;
            boolean r = ~[boolean]~;
            int i = ~[int]~;
            int var15 = false;
            ~[boolean]~ = ~[boolean]~ && ~[double[]]~[~[int]~] == ~[double]~;
         }
---------
if (~[Object]~ instanceof List) {
         int i = 0;

         for(int var3 = ((List)~[Object]~).size(); ~[int]~ < ~[int]~; ++~[int]~) {
            ~[int]~ = ~[int]~ * 10 + ~[int]~;
         }
      }
---------
for(int var3 = ((List)~[Object]~).size(); ~[int]~ < ~[int]~; ++~[int]~) {
            ~[int]~ = ~[int]~ * 10 + ~[int]~;
         }
---------
for(int var2 = 0; ~[int]~ < ~[StringBuilder]~.length(); ++~[int]~) {
         int index = ~[int]~;
         char x = ~[StringBuilder]~.charAt(~[int]~);
         ~[StringBuilder]~.append("" + ~[int]~ + ":" + ~[char]~ + ";");
         ~[StringBuilder]~.setLength(0);
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            Integer var6 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ -= 2;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var11 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += -2L;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var10 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + -2);
         }
      }
---------
while(true) {
            Integer var6 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ -= 2;
         }
---------
while(true) {
            Long var11 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += -2L;
         }
---------
while(true) {
            Character var10 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + -2);
         }
---------
if (~[char]~ == ~[char]~) {
               break;
            }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var22 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ += ~[char]~;
         }
      }
---------
while(true) {
            Character var22 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ += ~[char]~;
         }
---------
if (~[Object]~ == null) {
         int var1 = false;
         ~[Object]~ = 3;
      }
---------
for(~[Integer[]]~ = new Integer[3]; ~[int]~ < 3; ++~[int]~) {
         ~[Integer[]]~[~[int]~] = ~[int]~;
      }
---------
if (!~[boolean]~) {
         throw new AssertionError("Fail");
      }
---------
if (~[int]~ > 0 && ~[int]~ <= ~[int]~ || ~[int]~ < 0 && ~[int]~ <= ~[int]~) {
         while(true) {
            Integer var9 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
      }
---------
if (~[long]~ > 0L && ~[long]~ <= ~[long]~ || ~[long]~ < 0L && ~[long]~ <= ~[long]~) {
         while(true) {
            Long var15 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += ~[long]~;
         }
      }
---------
if (~[char]~ > 0 && ~[char]~ <= ~[char]~ || ~[char]~ < 0 && ~[char]~ <= ~[char]~) {
         while(true) {
            Character var28 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[char]~);
         }
      }
---------
while(true) {
            Integer var9 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
---------
while(true) {
            Long var15 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += ~[long]~;
         }
---------
while(true) {
            Character var28 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[char]~);
         }
---------
if (~[int]~ > 0 && ~[int]~ <= ~[int]~ || ~[int]~ < 0 && ~[int]~ <= ~[int]~) {
         while(true) {
            ~[ArrayList]~.add(~[int]~);
            if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
      }
---------
while(true) {
            ~[ArrayList]~.add(~[int]~);
            if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
---------
if (~[int]~ > 0 && ~[int]~ <= ~[int]~ || ~[int]~ < 0 && ~[int]~ <= ~[int]~) {
            while(true) {
               ~[ArrayList]~.add(~[int]~);
               if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                  break;
               }

               ~[int]~ += ~[int]~;
            }
         }
---------
while(true) {
               ~[ArrayList]~.add(~[int]~);
               if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                  break;
               }

               ~[int]~ += ~[int]~;
            }
---------
if (~[int]~ > 0 && ~[int]~ <= ~[int]~ || ~[int]~ < 0 && ~[int]~ <= ~[int]~) {
               while(true) {
                  ~[ArrayList]~.add(~[int]~);
                  if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                     break;
                  }

                  ~[int]~ += ~[int]~;
               }
            }
---------
while(true) {
                  ~[ArrayList]~.add(~[int]~);
                  if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                     break;
                  }

                  ~[int]~ += ~[int]~;
               }
---------
if (~[long]~ > 0L && ~[long]~ <= ~[long]~ || ~[long]~ < 0L && ~[long]~ <= ~[long]~) {
                  while(true) {
                     ~[ArrayList]~.add(~[long]~);
                     if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                        break;
                     }

                     ~[long]~ += ~[long]~;
                  }
               }
---------
while(true) {
                     ~[ArrayList]~.add(~[long]~);
                     if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                        break;
                     }

                     ~[long]~ += ~[long]~;
                  }
---------
if (~[int]~ > 0 && ~[char]~ <= ~[char]~ || ~[int]~ < 0 && ~[char]~ <= ~[char]~) {
                     while(true) {
                        ~[ArrayList]~.add(~[char]~);
                        if (~[ArrayList]~.size() > 23 || ~[char]~ == ~[char]~) {
                           break;
                        }

                        ~[char]~ = (char)(~[char]~ + ~[int]~);
                     }
                  }
---------
while(true) {
                        ~[ArrayList]~.add(~[char]~);
                        if (~[ArrayList]~.size() > 23 || ~[char]~ == ~[char]~) {
                           break;
                        }

                        ~[char]~ = (char)(~[char]~ + ~[int]~);
                     }
---------
if (~[ArrayList]~.size() > 23 || ~[char]~ == ~[char]~) {
                           break;
                        }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            Integer var8 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += 2;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var14 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += 2L;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var28 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + 2);
         }
      }
---------
while(true) {
            Integer var8 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += 2;
         }
---------
while(true) {
            Long var14 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += 2L;
         }
---------
while(true) {
            Character var28 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + 2);
         }
---------
for(~[int]~ = ~[String[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         ~[String]~ = ~[String[]]~[~[int]~];
         if (~[Object]~ == null) {
            ~[Object]~ = new A();
         }

         ~[String]~ = ~[String]~ + ~[Object]~.foo().invoke();
      }
---------
if (~[Object]~ == null) {
            ~[Object]~ = new A();
         }
---------
for(~[int]~ = ~[String[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
            ~[String]~ = ~[String[]]~[~[int]~];
            if (~[Object]~ == null) {
               ~[Object]~ = new B(~[String]~);
            }

            ~[String]~ = ~[String]~ + ~[Object]~.foo().invoke();
         }
---------
if (~[Object]~ == null) {
               ~[Object]~ = new B(~[String]~);
            }
---------
if (~[int]~ > 0 && ~[int]~ <= ~[int]~ || ~[int]~ < 0 && ~[int]~ <= ~[int]~) {
         while(true) {
            Integer var8 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
      }
---------
if (~[int]~ > 0 && ~[char]~ <= ~[char]~ || ~[int]~ < 0 && ~[char]~ <= ~[char]~) {
         while(true) {
            Character var12 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
      }
---------
while(true) {
            Integer var8 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
---------
while(true) {
            Character var12 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
---------
if (~[PrintStream]~ != null) {
         ~[PrintStream]~.println((String)~[ObjectRef]~.element);
      }
---------
if (~[PrintStream]~ != null) {
         ~[PrintStream]~.println(~[IntRef]~.element);
      }
---------
if (~[PrintStream]~ != null) {
         ~[PrintStream]~.println(~[FloatRef]~.element);
      }
---------
if (~[PrintStream]~ != null) {
         ~[PrintStream]~.println(~[DoubleRef]~.element);
      }
---------
if (~[PrintStream]~ != null) {
         ~[PrintStream]~.println(~[ByteRef]~.element);
      }
---------
if (~[PrintStream]~ != null) {
         ~[PrintStream]~.println(~[CharRef]~.element);
      }
---------
for(~[int]~ = ~[int]~; ~[int]~ < 100; ++~[int]~) {
      }
---------
while(~[IntRef]~.element < 100) {
         ~[Function0]~.invoke();
      }
---------
while(~[Iterator]~.hasNext()) {
         long item$iv$iv = ((LongIterator)~[Iterator]~).nextLong();
         long it = ~[long]~;
         int var11 = false;
         ~[Collection]~.add(~[long]~ * 40L);
      }
---------
if (~[int]~ > 0 && ~[int]~ <= ~[int]~ || ~[int]~ < 0 && ~[int]~ <= ~[int]~) {
            while(true) {
               ~[int]~ = ~[int]~ * 10 + ~[int]~;
               if (~[int]~ == ~[int]~) {
                  break;
               }

               ~[int]~ += ~[int]~;
            }
         }
---------
while(true) {
               ~[int]~ = ~[int]~ * 10 + ~[int]~;
               if (~[int]~ == ~[int]~) {
                  break;
               }

               ~[int]~ += ~[int]~;
            }
---------
while(~[Iterator]~.hasNext()) {
         ++~[int]~;
         String x = (String)~[Iterator]~.next();
         ~[StringBuilder]~.append(~[String]~ + ";");
      }
---------
if (~[Serializable]~ instanceof Exception) {
         throw (Throwable)~[Serializable]~;
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            Integer var5 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ++~[int]~;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var8 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ++~[long]~;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var17 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ++~[char]~;
         }
      }
---------
while(true) {
            Integer var5 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ++~[int]~;
         }
---------
while(true) {
            Long var8 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ++~[long]~;
         }
---------
while(true) {
            Character var17 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ++~[char]~;
         }
---------
for(~[int]~ = 0; ~[int]~ != 0; ~[int]~ /= 10) {
         ~[int]~ += ~[int]~ % 10;
      }
---------
for(int var3 = ~[String[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         int index = ~[int]~;
         String x = ~[String[]]~[~[int]~];
         if (~[int]~ != 0) {
            if (~[int]~ == 3) {
               break;
            }

            ~[StringBuilder]~.append("" + ~[int]~ + ":" + ~[String]~ + ";");
         }
      }
---------
if (~[int]~ != 0) {
            if (~[int]~ == 3) {
               break;
            }

            ~[StringBuilder]~.append("" + ~[int]~ + ":" + ~[String]~ + ";");
         }
---------
if (~[int]~ == 3) {
               break;
            }
---------
if ((~[int]~ & 1) != 0) {
         ~[String]~ = "foo";
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            ~[int]~ = ~[int]~ * 10 + ~[int]~ + ~[int[]]~[~[int]~];
            if (~[int]~ == ~[int]~) {
               break;
            }

            ++~[int]~;
         }
      }
---------
while(true) {
            ~[int]~ = ~[int]~ * 10 + ~[int]~ + ~[int[]]~[~[int]~];
            if (~[int]~ == ~[int]~) {
               break;
            }

            ++~[int]~;
         }
---------
if (~[int]~ <= ~[int]~) {
            while(~[int]~ != ~[int]~) {
               ~[int]~ += ~[int]~;
            }
         }
---------
if (~[long]~ <= ~[long]~) {
            while(~[long]~ != ~[long]~) {
               ~[long]~ += ~[long]~;
            }
         }
---------
if (~[char]~ <= ~[char]~) {
            while(~[char]~ != ~[char]~) {
               ~[char]~ = (char)(~[char]~ + ~[int]~);
            }
         }
---------
while(~[int]~ != ~[int]~) {
               ~[int]~ += ~[int]~;
            }
---------
while(~[long]~ != ~[long]~) {
               ~[long]~ += ~[long]~;
            }
---------
while(~[char]~ != ~[char]~) {
               ~[char]~ = (char)(~[char]~ + ~[int]~);
            }
---------
while(~[Iterator]~.hasNext()) {
         int i = ~[int]~++;
         ~[Iterator]~.next();
         ~[StringBuilder]~.append("" + ~[int]~ + ";");
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            Integer var4 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ++~[int]~;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var6 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ++~[long]~;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var15 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ++~[char]~;
         }
      }
---------
while(true) {
            Integer var4 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ++~[int]~;
         }
---------
while(true) {
            Long var6 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ++~[long]~;
         }
---------
while(true) {
            Character var15 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ++~[char]~;
         }
---------
if (((Number)~[Object]~).intValue() != 2) {
               throw new AssertionError("Fail");
            }
---------
if (!~[Iterator]~.hasNext()) {
                  throw new NoSuchElementException("Collection contains no element matching the predicate.");
               }
---------
if (3 <= ~[int]~) {
         do {
            int i = ~[int]~;
            ~[int]~ -= 2;
            ~[ArrayList]~.add(~[int]~);
         } while(~[ArrayList]~.size() <= 23 && 3 <= ~[int]~);
      }
---------
if (~[byte]~ <= ~[int]~) {
            while(true) {
               ~[ArrayList]~.add(~[int]~);
               if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[byte]~) {
                  break;
               }

               ~[int]~ -= 2;
            }
         }
---------
while(true) {
               ~[ArrayList]~.add(~[int]~);
               if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[byte]~) {
                  break;
               }

               ~[int]~ -= 2;
            }
---------
if (~[byte]~ <= ~[int]~) {
               while(true) {
                  ~[ArrayList]~.add(~[int]~);
                  if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[byte]~) {
                     break;
                  }

                  ~[int]~ -= 2;
               }
            }
---------
if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[byte]~) {
                  break;
               }
---------
while(true) {
                  ~[ArrayList]~.add(~[int]~);
                  if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[byte]~) {
                     break;
                  }

                  ~[int]~ -= 2;
               }
---------
if (3L <= ~[long]~) {
                  do {
                     long i = ~[long]~;
                     ~[long]~ += -2L;
                     ~[ArrayList]~.add(~[long]~);
                  } while(~[ArrayList]~.size() <= 23 && 3L <= ~[long]~);
               }
---------
if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[byte]~) {
                     break;
                  }
---------
if ('c' <= ~[char]~) {
                     do {
                        char i = ~[char]~;
                        ~[char]~ = (char)(~[char]~ + -2);
                        ~[ArrayList]~.add(~[char]~);
                     } while(~[ArrayList]~.size() <= 23 && 'c' <= ~[char]~);
                  }
---------
if ((~[int]~ & 4) != 0) {
         ~[String]~ = "5";
      }
---------
if ((~[int]~ & 8) != 0) {
         ~[String]~ = "4";
      }
---------
if ((~[int]~ & 4) != 0) {
         String[] var5 = new String[]{"2"};
         ~[CharSequence[]]~ = (CharSequence[])~[String[]]~;
      }
---------
if (~[int]~ >= 2) {
               break;
            }
---------
while(~[Iterator]~.hasNext()) {
         Integer v = (Integer)~[Iterator]~.next();
         ((Collection)~[List]~).add(~[Integer]~);
      }
---------
for(int i = 0; ~[int]~ < 2; ++~[int]~) {
      }
---------
if (~[int]~ > 0 && ~[char]~ <= ~[char]~ || ~[int]~ < 0 && ~[char]~ <= ~[char]~) {
         while(true) {
            Character var28 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
      }
---------
while(true) {
            Character var28 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
---------
for(int var3 = 0; ~[int]~ < 8; ++~[int]~) {
         int i = ~[int]~++;
         int v = ~[int]~;
         Integer var6 = ~[int]~;
         ((Collection)~[List]~).add(~[Integer]~);
         ~[Integer]~ = ~[int]~;
         ((Collection)~[List]~).add(~[Integer]~);
      }
---------
if ((~[int]~ & 1) != 0) {
         String p$iv = "OK";
         int $i$f$test = false;
         ~[String]~ = ~[String]~;
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            Integer var8 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += 3;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var14 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += 3L;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var28 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + 3);
         }
      }
---------
while(true) {
            Integer var8 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += 3;
         }
---------
while(true) {
            Long var14 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += 3L;
         }
---------
while(true) {
            Character var28 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + 3);
         }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var8 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ += ~[char]~;
         }
      }
---------
while(true) {
            Character var8 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ += ~[char]~;
         }
---------
while(~[Iterator]~.hasNext()) {
         int index = ~[int]~++;
         String x = (String)~[Iterator]~.next();
         ~[StringBuilder]~.append("" + ~[int]~ + ":" + ~[String]~ + ";");
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            Integer var5 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += 3;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var8 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += 3L;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var7 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + 3);
         }
      }
---------
while(true) {
            Integer var5 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += 3;
         }
---------
while(true) {
            Long var8 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += 3L;
         }
---------
while(true) {
            Character var7 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + 3);
         }
---------
if (~[long]~ == ~[long]~) {
                     break;
                  }
---------
if (~[int]~ > 0 && ~[int]~ <= ~[int]~ || ~[int]~ < 0 && ~[int]~ <= ~[int]~) {
         while(true) {
            ~[int]~ = ~[int]~ * 10 + ~[int]~;
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
      }
---------
if (~[long]~ > 0L && ~[long]~ <= ~[long]~ || ~[long]~ < 0L && ~[long]~ <= ~[long]~) {
         while(true) {
            ~[long]~ = ~[long]~ * (long)10 + ~[long]~;
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += ~[long]~;
         }
      }
---------
if (~[int]~ > 0 && ~[char]~ <= ~[char]~ || ~[int]~ < 0 && ~[char]~ <= ~[char]~) {
         while(true) {
            ~[int]~ = ~[int]~ * 10 + ~[char]~ - 48;
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
      }
---------
while(true) {
            ~[int]~ = ~[int]~ * 10 + ~[int]~;
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
---------
while(true) {
            ~[long]~ = ~[long]~ * (long)10 + ~[long]~;
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += ~[long]~;
         }
---------
while(true) {
            ~[int]~ = ~[int]~ * 10 + ~[char]~ - 48;
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            int i = ~[int]~++;
            int v = ~[int]~;
            Integer var7 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            ~[Integer]~ = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += 2;
         }
      }
---------
while(true) {
            int i = ~[int]~++;
            int v = ~[int]~;
            Integer var7 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            ~[Integer]~ = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += 2;
         }
---------
if (~[Object]~ == null) {
            throw new NullPointerException("null cannot be cast to non-null type kotlin.Function0<*>");
         }
---------
if (~[Object]~ == null) {
               throw new NullPointerException("null cannot be cast to non-null type kotlin.Function0<*>");
            }
---------
if (~[Object]~ == null) {
                  throw new NullPointerException("null cannot be cast to non-null type kotlin.Function1<*, *>");
               }
---------
if (0 <= ~[int]~) {
            do {
               ~[int]~ = ~[int]~--;
               ~[int]~ = ((Number)~[Integer[]]~[~[int]~]).intValue();
               ~[boolean]~ = false;
               if (~[int]~ == 4) {
                  ~[int]~ = ~[int]~;
                  break label98;
               }
            } while(0 <= ~[int]~);
         }
---------
if (0 <= ~[int]~) {
            do {
               ~[int]~ = ~[int]~--;
               ~[int]~ = ((Number)~[Integer[]]~[~[int]~]).intValue();
               ~[boolean]~ = false;
               if (~[int]~ == 1) {
                  ~[int]~ = ~[int]~;
                  break label88;
               }
            } while(0 <= ~[int]~);
         }
---------
if (0 <= ~[int]~) {
            do {
               ~[int]~ = ~[int]~--;
               ~[int]~ = ((Number)~[Integer[]]~[~[int]~]).intValue();
               ~[boolean]~ = false;
               if (~[int]~ == 2) {
                  ~[int]~ = ~[int]~;
                  break label78;
               }
            } while(0 <= ~[int]~);
         }
---------
if (0 <= ~[int]~) {
            do {
               ~[int]~ = ~[int]~--;
               ~[int]~ = ((Number)~[Integer[]]~[~[int]~]).intValue();
               ~[boolean]~ = false;
               if (~[int]~ == 3) {
                  ~[int]~ = ~[int]~;
                  break label68;
               }
            } while(0 <= ~[int]~);
         }
---------
if (0 <= ~[int]~) {
            do {
               ~[int]~ = ~[int]~--;
               ~[int]~ = ((Number)~[Integer[]]~[~[int]~]).intValue();
               ~[boolean]~ = false;
               if (~[int]~ == 0) {
                  ~[int]~ = ~[int]~;
                  break label58;
               }
            } while(0 <= ~[int]~);
         }
---------
if (~[int]~ == 4) {
                  ~[int]~ = ~[int]~;
                  break label98;
               }
---------
if (~[int]~ == 1) {
                  ~[int]~ = ~[int]~;
                  break label88;
               }
---------
if (~[int]~ == 2) {
                  ~[int]~ = ~[int]~;
                  break label78;
               }
---------
if (~[int]~ == 3) {
                  ~[int]~ = ~[int]~;
                  break label68;
               }
---------
if (~[int]~ == 0) {
                  ~[int]~ = ~[int]~;
                  break label58;
               }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            ~[String]~ = ~[String]~ + "LOL ";
            if (~[int]~ == ~[int]~) {
               break;
            }

            ++~[int]~;
         }
      }
---------
while(true) {
            ~[String]~ = ~[String]~ + "LOL ";
            if (~[int]~ == ~[int]~) {
               break;
            }

            ++~[int]~;
         }
---------
while(true) {
                  if (~[int]~ >= 6) {
                     continue label33;
                  }

                  switch (~[int]~) {
                     case 2:
                        ~[boolean]~ = true;
                        continue label33;
                     default:
                        ~[boolean]~ = false;
                     case 1:
                        ++~[int]~;
                  }
               }
---------
if (~[int]~ >= 6) {
                     continue label33;
                  }
---------
switch (~[int]~) {
                     case 2:
                        ~[boolean]~ = true;
                        continue label33;
                     default:
                        ~[boolean]~ = false;
                     case 1:
                        ++~[int]~;
                  }
---------
for(int i = 0; ~[int]~ < 11; ++~[int]~) {
         if (~[int]~ % 2 != 0) {
            ~[int]~ += ~[int]~;
         }
      }
---------
if (~[int]~ % 2 != 0) {
            ~[int]~ += ~[int]~;
         }
---------
for(int var3 = ~[String[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         String x = ~[String[]]~[~[int]~];
         ~[StringBuilder]~.append(~[String]~ + ";");
      }
---------
if ((~[int]~ & 2) != 0) {
         ~[String]~ = "OK";
      }
---------
if (1L <= ~[long]~) {
         do {
            long i = ~[long]~;
            ~[long]~ += -1L;
            ~[long]~ = ~[long]~ * (long)10 + ~[long]~;
         } while(1L <= ~[long]~);
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            ~[ArrayList]~.add(~[int]~);
            if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
               break;
            }

            ++~[int]~;
         }
      }
---------
while(true) {
            ~[ArrayList]~.add(~[int]~);
            if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
               break;
            }

            ++~[int]~;
         }
---------
if (~[int]~ <= ~[int]~) {
            while(true) {
               ~[ArrayList]~.add(~[int]~);
               if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                  break;
               }

               ++~[int]~;
            }
         }
---------
while(true) {
               ~[ArrayList]~.add(~[int]~);
               if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                  break;
               }

               ++~[int]~;
            }
---------
if (~[int]~ <= ~[int]~) {
               while(true) {
                  ~[ArrayList]~.add(~[int]~);
                  if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                     break;
                  }

                  ++~[int]~;
               }
            }
---------
while(true) {
                  ~[ArrayList]~.add(~[int]~);
                  if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                     break;
                  }

                  ++~[int]~;
               }
---------
if (~[long]~ <= ~[long]~) {
                  while(true) {
                     ~[ArrayList]~.add(~[long]~);
                     if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                        break;
                     }

                     ++~[long]~;
                  }
               }
---------
while(true) {
                     ~[ArrayList]~.add(~[long]~);
                     if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                        break;
                     }

                     ++~[long]~;
                  }
---------
if (~[char]~ <= ~[char]~) {
                     while(true) {
                        ~[ArrayList]~.add(~[char]~);
                        if (~[ArrayList]~.size() > 23 || ~[char]~ == ~[char]~) {
                           break;
                        }

                        ++~[char]~;
                     }
                  }
---------
while(true) {
                        ~[ArrayList]~.add(~[char]~);
                        if (~[ArrayList]~.size() > 23 || ~[char]~ == ~[char]~) {
                           break;
                        }

                        ++~[char]~;
                     }
---------
if (~[int]~ <= ~[int]~) {
            while(true) {
               ~[int]~ = ~[int]~ * 10 + ~[int]~;
               if (~[int]~ == ~[int]~) {
                  break;
               }

               ~[int]~ += ~[int]~;
            }
         }
---------
if (~[Number]~ != null) {
         ~[Number]~.intValue();
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            Integer var7 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += 2;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var12 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += 2L;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var11 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + 2);
         }
      }
---------
while(true) {
            Integer var7 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += 2;
         }
---------
while(true) {
            Long var12 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += 2L;
         }
---------
while(true) {
            Character var11 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + 2);
         }
---------
if ((~[int]~ & 2) != 0) {
         ~[Function0]~ = (Function0)null.INSTANCE;
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            Integer var7 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ++~[int]~;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var13 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ++~[long]~;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var12 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ++~[char]~;
         }
      }
---------
while(true) {
            Integer var7 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ++~[int]~;
         }
---------
while(true) {
            Long var13 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ++~[long]~;
         }
---------
while(true) {
            Character var12 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ++~[char]~;
         }
---------
for(int var4 = ~[int...]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         int a = ~[int...]~[~[int]~];
         ~[int]~ += ~[int]~;
      }
---------
for(int var5 = ~[int[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         int a = ~[int[]]~[~[int]~];
         ~[int]~ += ((Number)~[Function1]~.invoke(~[int]~)).intValue();
      }
---------
for(int var3 = ~[int...]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         int a = ~[int...]~[~[int]~];
         ~[String]~ = ~[String]~ + ~[int]~;
      }
---------
for(~[int]~ = 1; ~[int]~ < ~[int]~; ~[int]~ *= ~[int]~) {
         ++~[int]~;
      }
---------
if ((~[int]~ & 1) != 0) {
         ~[String]~ = "O";
      }
---------
if ((~[int]~ & 1) != 0) {
                  ~[double]~ = -1.0;
               }
---------
for(int var3 = ~[CharSequence]~.length(); ~[int]~ < ~[int]~; ++~[int]~) {
         ~[int]~ = ~[int]~ * 10 + ~[int]~ + 1;
      }
---------
for(int i = 1; ~[int]~ < 4; ++~[int]~) {
         if (~[int]~ < 2) {
            ~[String]~ = ~[String]~ + "";
         }
      }
---------
if (~[int]~ < 2) {
            ~[String]~ = ~[String]~ + "";
         }
---------
for(int var4 = ~[String[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         final String t = ~[String[]]~[~[int]~];
         if (~[Object]~ == null) {
            ~[Object]~ = new C();
         }

         ~[String]~ = ~[String]~ + (~[Object]~.new D()).foo();
      }
---------
if (~[Object]~ == null) {
            ~[Object]~ = new C();
         }
---------
if ((~[int]~ & 2) != 0) {
         ~[String]~ = ~[String]~;
      }
---------
if (~[Integer]~ != null) {
            if (~[Integer]~ == ~[int]~) {
               ~[boolean]~ = true;
               break label189;
            }
         }
---------
if (~[Integer]~ == ~[int]~) {
               ~[boolean]~ = true;
               break label189;
            }
---------
if (~[Integer]~ != null) {
               if (~[Integer]~ == ~[int]~) {
                  ~[boolean]~ = true;
                  break label181;
               }
            }
---------
if (~[Integer]~ == ~[int]~) {
                  ~[boolean]~ = true;
                  break label181;
               }
---------
if (~[Integer]~ != null) {
                  if (~[Integer]~ == ~[int]~) {
                     ~[boolean]~ = false;
                     break label173;
                  }
               }
---------
if (~[Integer]~ == ~[int]~) {
                     ~[boolean]~ = false;
                     break label173;
                  }
---------
if (~[Integer]~ != null) {
                     if (~[Integer]~ == ~[int]~) {
                        ~[boolean]~ = false;
                        break label165;
                     }
                  }
---------
if (~[Integer]~ == ~[int]~) {
                        ~[boolean]~ = false;
                        break label165;
                     }
---------
if (~[Integer]~ != null) {
                        if (~[Integer]~ == ~[int]~) {
                           ~[boolean]~ = false;
                           break label157;
                        }
                     }
---------
if (~[Integer]~ == ~[int]~) {
                           ~[boolean]~ = false;
                           break label157;
                        }
---------
if (~[Integer]~ != null) {
                           if (~[Integer]~ == ~[int]~) {
                              ~[boolean]~ = false;
                              break label149;
                           }
                        }
---------
if (~[Integer]~ == ~[int]~) {
                              ~[boolean]~ = false;
                              break label149;
                           }
---------
if (~[Integer]~ != null) {
                              if (~[Integer]~ == ~[int]~) {
                                 ~[boolean]~ = true;
                                 break label141;
                              }
                           }
---------
if (~[Integer]~ == ~[int]~) {
                                 ~[boolean]~ = true;
                                 break label141;
                              }
---------
if (~[Integer]~ != null) {
                                 if (~[Integer]~ == ~[int]~) {
                                    ~[boolean]~ = true;
                                    break label133;
                                 }
                              }
---------
if (~[Integer]~ == ~[int]~) {
                                    ~[boolean]~ = true;
                                    break label133;
                                 }
---------
if (~[String]~ == null) {
         ~[String]~ = "Default";
      }
---------
if (~[long]~ > 0L && ~[long]~ <= ~[long]~ || ~[long]~ < 0L && ~[long]~ <= ~[long]~) {
         while(true) {
            Long var16 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += ~[long]~;
         }
      }
---------
if (~[int]~ <= 0) {
         ~[int]~ = -~[int]~;
      }
---------
if (~[int]~ > 0 && ~[char]~ <= ~[char]~ || ~[int]~ < 0 && ~[char]~ <= ~[char]~) {
         while(true) {
            Character var30 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
      }
---------
while(true) {
            Long var16 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += ~[long]~;
         }
---------
while(true) {
            Character var30 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
---------
for(int var3 = ~[Collection]~.size(); ~[int]~ < ~[int]~; ++~[int]~) {
         ~[int]~ += ~[int]~;
      }
---------
for(~[String[][]]~ = new String[4][]; ~[int]~ < 4; ++~[int]~) {
         String[] var4 = new String[]{"x" + ~[int]~};
         ~[String[][]]~[~[int]~] = ~[String[]]~;
      }
---------
if (~[int]~ > 1) {
            throw new AssertionError("Loop should be executed once");
         }
---------
if (~[long]~ <= 5L) {
                              do {
                                 long i = ~[long]~++;
                                 ~[ArrayList]~.add(~[long]~);
                              } while(~[ArrayList]~.size() <= 23 && ~[long]~ <= 5L);
                           }
---------
for(int var5 = ~[int[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         int i = ~[int[]]~[~[int]~];
         ~[int[]]~[~[int]~--] = 0;
         ~[int]~ = ~[int]~ * 10 + ~[int]~;
      }
---------
if (~[long]~ <= 4L) {
         do {
            long i = ~[long]~++;
            Long var7 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
         } while(~[long]~ <= 4L);
      }
---------
while(~[Iterator]~.hasNext()) {
         IndexedValue var3 = (IndexedValue)~[Iterator]~.next();
         int i = ~[IndexedValue]~.component1();
         int v = ((Number)~[IndexedValue]~.component2()).intValue();
         Integer var6 = ~[int]~;
         ((Collection)~[List]~).add(~[Integer]~);
         ~[Integer]~ = ~[int]~;
         ((Collection)~[List]~).add(~[Integer]~);
      }
---------
if ((~[int]~ & 2) != 0) {
         ~[StringBuilder]~ = new StringBuilder();
      }
---------
if (~[Object[]]~ == null) {
         int $i$f$emptyArray = false;
         ~[Object[]]~ = new Object[0];
      }
---------
while(~[BufferedReader]~.readLine() != null) {
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            Integer var4 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ -= 2;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var7 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += -2L;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var6 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + -2);
         }
      }
---------
while(true) {
            Integer var4 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ -= 2;
         }
---------
while(true) {
            Long var7 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += -2L;
         }
---------
while(true) {
            Character var6 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + -2);
         }
---------
if (~[int]~ == 6) {
         if (~[int]~ == 6) {
            ~[String]~ = "a";
         } else {
            ~[String]~ = "b";
         }
      } else {
         ~[String]~ = "c";
      }
---------
if (~[int]~ == 6) {
            ~[String]~ = "a";
         } else {
            ~[String]~ = "b";
         }
---------
for(int var3 = 0; 3 < ~[int]~; --~[int]~) {
         int i = ~[int]~++;
         int v = ~[int]~;
         Integer var6 = ~[int]~;
         ((Collection)~[List]~).add(~[Integer]~);
         ~[Integer]~ = ~[int]~;
         ((Collection)~[List]~).add(~[Integer]~);
      }
---------
if (0 <= ~[int]~) {
         do {
            int i = ~[int]~--;
            ~[int]~ = ~[int]~ * 10 + ~[int]~ + ((Number)~[List]~.get(~[int]~)).intValue();
         } while(0 <= ~[int]~);
      }
---------
while(~[int]~++ < 5) {
      }
---------
while(~[int]~++ <= 100 && ~[int]~ < 10) {
         }
---------
while(~[int]~++ < 10) {
            }
---------
while(~[Iterator]~.hasNext()) {
         Object t = ~[Iterator]~.next();
         if ((Boolean)~[Function1]~.invoke(~[Object]~)) {
            ~[ArrayList]~.add(~[Object]~);
         }
      }
---------
if ((Boolean)~[Function1]~.invoke(~[Object]~)) {
            ~[ArrayList]~.add(~[Object]~);
         }
---------
if (~[int]~ == ~[byte]~) {
               break;
            }
---------
if (~[int]~ == ~[byte]~) {
      }
---------
if (7 == ~[int]~) {
      }
---------
if (~[int]~ == ~[int]~) {
      }
---------
for(int var2 = ~[String[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         ~[int]~ += ~[int]~;
      }
---------
if (~[Function1]~ == null) {
         ~[Function1]~ = (Function1)null.INSTANCE;
      }
---------
if (~[KFunction]~ == null) {
         ~[KFunction]~ = (KFunction)null.INSTANCE;
      }
---------
switch (~[int]~) {
         case 10:
            ~[KFunction]~ = (KFunction)null.INSTANCE;
            break;
         case 20:
            ~[KFunction]~ = (KFunction)null.INSTANCE;
            break;
         default:
            ~[KFunction]~ = (KFunction)null.INSTANCE;
      }
---------
for(int var4 = ~[int[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         int x = ~[int[]]~[~[int]~];
         ~[int]~ = ~[int]~ * 10 + ~[int]~;
         int[] var6 = new int[]{4, 5};
      }
---------
while(~[Iterator]~.hasNext()) {
         int index = ~[int]~++;
         Object x = ~[Iterator]~.next();
         ~[StringBuilder]~.append("" + ~[int]~ + ":" + ~[Object]~ + ";");
      }
---------
for(int i = 5; ~[int]~ < 6; ++~[int]~) {
         ~[ArrayList]~.add(~[int]~);
         if (~[ArrayList]~.size() > 23) {
            break;
         }
      }
---------
if (~[ArrayList]~.size() > 23) {
            break;
         }
---------
for(long i = 5L; ~[long]~ < 6L; ++~[long]~) {
                              ~[ArrayList]~.add(~[long]~);
                              if (~[ArrayList]~.size() > 23) {
                                 break;
                              }
                           }
---------
if (~[ArrayList]~.size() > 23) {
                                 break;
                              }
---------
for(char i = 'k'; ~[char]~ < 'l'; ++~[char]~) {
                                 ~[ArrayList]~.add(~[char]~);
                                 if (~[ArrayList]~.size() > 23) {
                                    break;
                                 }
                              }
---------
if (~[ArrayList]~.size() > 23) {
                                    break;
                                 }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            ~[int]~ = ~[int]~ * 10 + ~[int]~;
            if (~[int]~ == ~[int]~) {
               break;
            }

            --~[int]~;
         }
      }
---------
while(true) {
            ~[int]~ = ~[int]~ * 10 + ~[int]~;
            if (~[int]~ == ~[int]~) {
               break;
            }

            --~[int]~;
         }
---------
if (!(~[Object]~ instanceof String)) {
            throw new IllegalStateException(("Unexpected value of type Char: " + ~[Object]~).toString());
         }
---------
if (~[long]~ == 2L) {
               break;
            }
---------
if (~[int]~ > 0 && ~[int]~ <= ~[int]~ || ~[int]~ < 0 && ~[int]~ <= ~[int]~) {
         while(true) {
            Integer var6 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
      }
---------
if (~[long]~ > 0L && ~[long]~ <= ~[long]~ || ~[long]~ < 0L && ~[long]~ <= ~[long]~) {
         while(true) {
            Long var9 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += ~[long]~;
         }
      }
---------
if (~[int]~ > 0 && ~[char]~ <= ~[char]~ || ~[int]~ < 0 && ~[char]~ <= ~[char]~) {
         while(true) {
            Character var8 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
      }
---------
while(true) {
            Integer var6 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
---------
while(true) {
            Long var9 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += ~[long]~;
         }
---------
while(true) {
            Character var8 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
---------
for(int var7 = ~[Object[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         Object item$iv = ~[Object[]]~[~[int]~];
         ~[Collection]~.add(~[Function1]~.invoke(~[Object]~));
      }
---------
for(int var3 = ~[int]~; ~[int]~ != 0; ~[int]~ = ~[int]~) {
         ~[int]~ = ~[int]~ - 1;
         boolean var2 = true;
      }
---------
if (~[int]~ > 0 && ~[int]~ <= ~[int]~ || ~[int]~ < 0 && ~[int]~ <= ~[int]~) {
         while(true) {
            Integer var12 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
      }
---------
if (~[long]~ > 0L && ~[long]~ <= ~[long]~ || ~[long]~ < 0L && ~[long]~ <= ~[long]~) {
         while(true) {
            Long var21 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += ~[long]~;
         }
      }
---------
if (~[int]~ > 0 && ~[char]~ <= ~[char]~ || ~[int]~ < 0 && ~[char]~ <= ~[char]~) {
         while(true) {
            Character var34 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
      }
---------
while(true) {
            Integer var12 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
---------
while(true) {
            Long var21 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += ~[long]~;
         }
---------
while(true) {
            Character var34 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            Integer var5 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            --~[int]~;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var8 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += -1L;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var7 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + -1);
         }
      }
---------
while(true) {
            Integer var5 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            --~[int]~;
         }
---------
while(true) {
            Long var8 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += -1L;
         }
---------
while(true) {
            Character var7 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + -1);
         }
---------
if (~[Object]~ instanceof String) {
                  --~[int]~;
                  ~[Object]~ = "is String";
               } else {
                  if (!(~[Object]~ instanceof Number)) {
                     throw new IllegalStateException();
                  }

                  ~[int]~ = ~[int]~;
                  ~[Object]~ = "is Number";
               }
---------
if (!(~[Object]~ instanceof Number)) {
                     throw new IllegalStateException();
                  }
---------
while(~[int]~ > 0) {
         Function1 u = (Function1)null.INSTANCE;
         ~[Function1]~.invoke(~[int]~--);
      }
---------
for(int var3 = ~[int]~; ~[int]~ > 1; ~[int]~ = ~[int]~) {
         --~[int]~;
      }
---------
for(~[Object[]]~ = new Object[~[int]~]; ~[int]~ < ~[int]~; ++~[int]~) {
         ~[Object[]]~[~[int]~] = ((Pair)~[Function0]~.invoke()).getFirst();
      }
---------
for(~[Object[]]~ = ~[Object[]]~; ~[int]~ < ~[int]~; ++~[int]~) {
         ~[Object[]]~[~[int]~] = ((Pair)~[Function0]~.invoke()).getSecond();
      }
---------
for(~[Object[]]~ = new Object[~[int]~]; ~[int]~ < ~[int]~; ++~[int]~) {
         int var7 = false;
         ~[Pair]~ = new Pair(~[Function0]~.invoke(), ~[Function0]~.invoke());
         ~[Object[]]~[~[int]~] = ((Pair)~[Pair]~).getFirst();
      }
---------
for(~[Object[]]~ = ~[Object[]]~; ~[int]~ < ~[int]~; ++~[int]~) {
         int var8 = false;
         ~[Pair]~ = new Pair(~[Function0]~.invoke(), ~[Function0]~.invoke());
         ~[Object[]]~[~[int]~] = ((Pair)~[Pair]~).getSecond();
      }
---------
for(~[Integer[]]~ = new Integer[~[int]~]; ~[int]~ < ~[int]~; ++~[int]~) {
         ~[boolean]~ = false;
         ~[Pair]~ = new Pair(1, "test");
         ~[Integer[]]~[~[int]~] = (Integer)~[Pair]~.getFirst();
      }
---------
for(~[String[]]~ = new String[~[int]~]; ~[int]~ < ~[int]~; ++~[int]~) {
         int var9 = false;
         ~[Pair]~ = new Pair(1, "test");
         ~[String[]]~[~[int]~] = (String)~[Pair]~.getSecond();
      }
---------
for(~[String[]]~ = new String[~[int]~]; ~[int]~ < ~[int]~; ++~[int]~) {
         int var12 = false;
         int var13 = false;
         ~[String]~ = "abc";
         ~[int]~ = false;
         String var21 = "abc";
         ~[Pair]~ = new Pair(~[String]~, ~[String]~);
         ~[String[]]~[~[int]~] = (String)~[Pair]~.getFirst();
      }
---------
for(~[String[]]~ = ~[String[]]~; ~[int]~ < ~[int]~; ++~[int]~) {
         int var14 = false;
         int var15 = false;
         ~[String]~ = "abc";
         ~[int]~ = false;
         String var23 = "abc";
         ~[Pair]~ = new Pair(~[String]~, ~[String]~);
         ~[String[]]~[~[int]~] = (String)~[Pair]~.getSecond();
      }
---------
while(true) {
         if (~[int]~ >= ~[int]~) {
            ~[boolean]~ = true;
            break;
         }

         ~[Object]~ = ~[Object[]]~[~[int]~];
         int it = ((Number)~[Object]~).intValue();
         ~[boolean]~ = false;
         if (~[int]~ != 1) {
            ~[boolean]~ = false;
            break;
         }

         ++~[int]~;
      }
---------
if (~[int]~ >= ~[int]~) {
            ~[boolean]~ = true;
            break;
         }
---------
if (~[int]~ != 1) {
            ~[boolean]~ = false;
            break;
         }
---------
if (~[int]~ >= ~[int]~) {
               ~[boolean]~ = true;
               break;
            }
---------
if (~[int]~ >= ~[int]~) {
                  ~[boolean]~ = true;
                  break;
               }
---------
if (~[int]~ >= ~[int]~) {
                     ~[boolean]~ = true;
                     break;
                  }
---------
if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                  break;
               }
---------
if (~[int]~ <= ~[int]~) {
               while(true) {
                  ~[int]~ = ~[int]~ * 10 + ~[int]~;
                  if (~[int]~ == ~[int]~) {
                     break;
                  }

                  ~[int]~ += ~[int]~;
               }
            }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            ~[ArrayList]~.add(~[int]~);
            if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += 2;
         }
      }
---------
while(true) {
            ~[ArrayList]~.add(~[int]~);
            if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += 2;
         }
---------
if (~[int]~ <= ~[int]~) {
            while(true) {
               ~[ArrayList]~.add(~[int]~);
               if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                  break;
               }

               ~[int]~ += 2;
            }
         }
---------
while(true) {
               ~[ArrayList]~.add(~[int]~);
               if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                  break;
               }

               ~[int]~ += 2;
            }
---------
if (~[int]~ <= ~[int]~) {
               while(true) {
                  ~[ArrayList]~.add(~[int]~);
                  if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                     break;
                  }

                  ~[int]~ += 2;
               }
            }
---------
while(true) {
                  ~[ArrayList]~.add(~[int]~);
                  if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                     break;
                  }

                  ~[int]~ += 2;
               }
---------
if (~[long]~ <= ~[long]~) {
                  while(true) {
                     ~[ArrayList]~.add(~[long]~);
                     if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                        break;
                     }

                     ~[long]~ += 2L;
                  }
               }
---------
while(true) {
                     ~[ArrayList]~.add(~[long]~);
                     if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                        break;
                     }

                     ~[long]~ += 2L;
                  }
---------
if (~[char]~ <= ~[char]~) {
                     while(true) {
                        ~[ArrayList]~.add(~[char]~);
                        if (~[ArrayList]~.size() > 23 || ~[char]~ == ~[char]~) {
                           break;
                        }

                        ~[char]~ = (char)(~[char]~ + 2);
                     }
                  }
---------
while(true) {
                        ~[ArrayList]~.add(~[char]~);
                        if (~[ArrayList]~.size() > 23 || ~[char]~ == ~[char]~) {
                           break;
                        }

                        ~[char]~ = (char)(~[char]~ + 2);
                     }
---------
for(int var3 = ~[String]~.length(); ~[int]~ < ~[int]~; ++~[int]~) {
         char x = ~[String]~.charAt(~[int]~);
         ~[StringBuilder]~.append("" + ~[char]~ + ";");
      }
---------
if (((Object[])~[Object]~)[0] == null) {
                  throw new NullPointerException("null cannot be cast to non-null type kotlin.Array<*>");
               }
---------
if (((Object[])~[Object]~)[0] == null) {
                        throw new NullPointerException("null cannot be cast to non-null type kotlin.Array<*>");
                     }
---------
if (((Object[])~[Object]~)[0] == null) {
                                 throw new NullPointerException("null cannot be cast to non-null type kotlin.Array<*>");
                              }
---------
if (((Object[])~[Object]~)[0] == null) {
                                       throw new NullPointerException("null cannot be cast to non-null type kotlin.Array<*>");
                                    }
---------
if (~[int]~ <= ~[short]~) {
               while(true) {
                  ~[ArrayList]~.add(~[int]~);
                  if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[short]~) {
                     break;
                  }

                  ++~[int]~;
               }
            }
---------
while(true) {
                  ~[ArrayList]~.add(~[int]~);
                  if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[short]~) {
                     break;
                  }

                  ++~[int]~;
               }
---------
if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[short]~) {
                     break;
                  }
---------
for(~[String[]]~ = new String[~[int]~]; ~[int]~ < ~[int]~; ++~[int]~) {
         ~[String[]]~[~[int]~] = (String)~[Function1]~.invoke(~[int]~);
      }
---------
if ((~[int]~ & 1) != 0) {
         ~[int]~ = 1;
      }
---------
if (~[int]~ > 0 && ~[int]~ <= ~[int]~ || ~[int]~ < 0 && ~[int]~ <= ~[int]~) {
         while(true) {
            Integer var11 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
      }
---------
if (~[long]~ > 0L && ~[long]~ <= ~[long]~ || ~[long]~ < 0L && ~[long]~ <= ~[long]~) {
         while(true) {
            Long var20 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += ~[long]~;
         }
      }
---------
if (~[int]~ > 0 && ~[char]~ <= ~[char]~ || ~[int]~ < 0 && ~[char]~ <= ~[char]~) {
         while(true) {
            Character var15 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
      }
---------
while(true) {
            Integer var11 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
---------
while(true) {
            Long var20 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += ~[long]~;
         }
---------
while(true) {
            Character var15 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
---------
for(int var3 = ~[List]~.size(); ~[int]~ < ~[int]~; ++~[int]~) {
         if (~[int]~ % 2 != 0) {
            ~[String]~ = ~[String]~ + ~[List]~.get(~[int]~);
         }
      }
---------
if (~[int]~ % 2 != 0) {
            ~[String]~ = ~[String]~ + ~[List]~.get(~[int]~);
         }
---------
while(~[int]~ < 10) {
         try {
            ++~[int]~;
         } finally {
            ++~[int]~;
         }
      }
---------
if (!~[Iterator]~.hasNext()) {
         ~[Object]~ = null;
      } else {
         Object minElem$iv = ~[Iterator]~.next();
         if (!~[Iterator]~.hasNext()) {
            ~[Object]~ = ~[Object]~;
         } else {
            int minValue$iv = ((Number)~[Object]~).intValue();
            int var8 = false;
            ~[int]~ = ~[int]~;

            do {
               ~[Object]~ = ~[Iterator]~.next();
               int v$iv = ((Number)~[Object]~).intValue();
               int var10 = false;
               ~[int]~ = ~[int]~;
               if (~[int]~ > ~[int]~) {
                  ~[Object]~ = ~[Object]~;
                  ~[int]~ = ~[int]~;
               }
            } while(~[Iterator]~.hasNext());

            ~[Object]~ = ~[Object]~;
         }
      }
---------
if (!~[Iterator]~.hasNext()) {
            ~[Object]~ = ~[Object]~;
         } else {
            int minValue$iv = ((Number)~[Object]~).intValue();
            int var8 = false;
            ~[int]~ = ~[int]~;

            do {
               ~[Object]~ = ~[Iterator]~.next();
               int v$iv = ((Number)~[Object]~).intValue();
               int var10 = false;
               ~[int]~ = ~[int]~;
               if (~[int]~ > ~[int]~) {
                  ~[Object]~ = ~[Object]~;
                  ~[int]~ = ~[int]~;
               }
            } while(~[Iterator]~.hasNext());

            ~[Object]~ = ~[Object]~;
         }
---------
if (!~[Iterator]~.hasNext()) {
               ~[Object]~ = null;
            } else {
               Object maxElem$iv = ~[Iterator]~.next();
               if (!~[Iterator]~.hasNext()) {
                  ~[Object]~ = ~[Object]~;
               } else {
                  int maxValue$iv = ((Number)~[Object]~).intValue();
                  int var41 = false;
                  ~[int]~ = ~[int]~;

                  do {
                     ~[Object]~ = ~[Iterator]~.next();
                     int v$iv = ((Number)~[Object]~).intValue();
                     ~[boolean]~ = false;
                     ~[int]~ = ~[int]~;
                     if (~[int]~ < ~[int]~) {
                        ~[Object]~ = ~[Object]~;
                        ~[int]~ = ~[int]~;
                     }
                  } while(~[Iterator]~.hasNext());

                  ~[Object]~ = ~[Object]~;
               }
            }
---------
if (~[int]~ > ~[int]~) {
                  ~[Object]~ = ~[Object]~;
                  ~[int]~ = ~[int]~;
               }
---------
if (!~[Iterator]~.hasNext()) {
                  ~[Object]~ = ~[Object]~;
               } else {
                  int maxValue$iv = ((Number)~[Object]~).intValue();
                  int var41 = false;
                  ~[int]~ = ~[int]~;

                  do {
                     ~[Object]~ = ~[Iterator]~.next();
                     int v$iv = ((Number)~[Object]~).intValue();
                     ~[boolean]~ = false;
                     ~[int]~ = ~[int]~;
                     if (~[int]~ < ~[int]~) {
                        ~[Object]~ = ~[Object]~;
                        ~[int]~ = ~[int]~;
                     }
                  } while(~[Iterator]~.hasNext());

                  ~[Object]~ = ~[Object]~;
               }
---------
if (!~[Iterator]~.hasNext()) {
                     ~[Object]~ = null;
                  } else {
                     ~[Object]~ = ~[Iterator]~.next();
                     if (!~[Iterator]~.hasNext()) {
                        ~[Object]~ = ~[Object]~;
                     } else {
                        long it = ((Number)~[Object]~).longValue();
                        ~[boolean]~ = false;
                        ~[long]~ = ~[long]~;

                        do {
                           Object e$iv = ~[Iterator]~.next();
                           long it = ((Number)~[Object]~).longValue();
                           int var19 = false;
                           long v$iv = ~[long]~;
                           if (~[long]~ > ~[long]~) {
                              ~[Object]~ = ~[Object]~;
                              ~[long]~ = ~[long]~;
                           }
                        } while(~[Iterator]~.hasNext());

                        ~[Object]~ = ~[Object]~;
                     }
                  }
---------
if (~[int]~ < ~[int]~) {
                        ~[Object]~ = ~[Object]~;
                        ~[int]~ = ~[int]~;
                     }
---------
if (!~[Iterator]~.hasNext()) {
                        ~[Object]~ = ~[Object]~;
                     } else {
                        long it = ((Number)~[Object]~).longValue();
                        ~[boolean]~ = false;
                        ~[long]~ = ~[long]~;

                        do {
                           Object e$iv = ~[Iterator]~.next();
                           long it = ((Number)~[Object]~).longValue();
                           int var19 = false;
                           long v$iv = ~[long]~;
                           if (~[long]~ > ~[long]~) {
                              ~[Object]~ = ~[Object]~;
                              ~[long]~ = ~[long]~;
                           }
                        } while(~[Iterator]~.hasNext());

                        ~[Object]~ = ~[Object]~;
                     }
---------
if (!~[Iterator]~.hasNext()) {
                           ~[Object]~ = null;
                        } else {
                           ~[Object]~ = ~[Iterator]~.next();
                           if (!~[Iterator]~.hasNext()) {
                              ~[Object]~ = ~[Object]~;
                           } else {
                              long it = ((Number)~[Object]~).longValue();
                              int var48 = false;
                              long maxValue$iv = ~[long]~;

                              do {
                                 Object e$iv = ~[Iterator]~.next();
                                 long it = ((Number)~[Object]~).longValue();
                                 int var20 = false;
                                 ~[long]~ = ~[long]~;
                                 if (~[long]~ < ~[long]~) {
                                    ~[Object]~ = ~[Object]~;
                                    ~[long]~ = ~[long]~;
                                 }
                              } while(~[Iterator]~.hasNext());

                              ~[Object]~ = ~[Object]~;
                           }
                        }
---------
if (~[long]~ > ~[long]~) {
                              ~[Object]~ = ~[Object]~;
                              ~[long]~ = ~[long]~;
                           }
---------
if (!~[Iterator]~.hasNext()) {
                              ~[Object]~ = ~[Object]~;
                           } else {
                              long it = ((Number)~[Object]~).longValue();
                              int var48 = false;
                              long maxValue$iv = ~[long]~;

                              do {
                                 Object e$iv = ~[Iterator]~.next();
                                 long it = ((Number)~[Object]~).longValue();
                                 int var20 = false;
                                 ~[long]~ = ~[long]~;
                                 if (~[long]~ < ~[long]~) {
                                    ~[Object]~ = ~[Object]~;
                                    ~[long]~ = ~[long]~;
                                 }
                              } while(~[Iterator]~.hasNext());

                              ~[Object]~ = ~[Object]~;
                           }
---------
if (~[long]~ < ~[long]~) {
                                    ~[Object]~ = ~[Object]~;
                                    ~[long]~ = ~[long]~;
                                 }
---------
switch (~[int]~) {
         case 1:
            ~[byte]~ = 5;
            break;
         case 2:
            ~[byte]~ = 6;
            break;
         case 3:
            ~[byte]~ = 7;
            break;
         default:
            ~[byte]~ = 8;
      }
---------
for(int var4 = ~[short[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
            int index = ~[int]~;
            short x = ~[short[]]~[~[int]~];
            ~[StringBuilder]~.append("" + ~[int]~ + ":" + ~[short]~ + ";");
         }
---------
if (~[String]~ != null) {
         String p0 = ~[String]~;
         int var6 = false;
         ~[List]~.add(~[String]~);
      }
---------
for(int var4 = ~[String]~.length(); ~[int]~ < ~[int]~; ++~[int]~) {
         char ch = ~[String]~.charAt(~[int]~);
         ~[String]~ = ~[String]~ + ~[char]~;
         ~[String]~ = "zzz";
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            Integer var5 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += 2;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var8 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += 2L;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var7 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + 2);
         }
      }
---------
while(true) {
            Integer var5 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += 2;
         }
---------
while(true) {
            Long var8 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += 2L;
         }
---------
while(true) {
            Character var7 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + 2);
         }
---------
for(int var2 = 0; ~[int]~ < ~[CharSequence]~.length(); ++~[int]~) {
         int index = ~[int]~;
         char x = ~[CharSequence]~.charAt(~[int]~);
         ~[StringBuilder]~.append("" + ~[int]~ + ":" + ~[char]~ + ";");
      }
---------
if (~[int]~ <= ~[int]~) {
            while(true) {
               Integer var6 = ~[int]~;
               ((Collection)~[List]~).add(~[Integer]~);
               if (~[int]~ == ~[int]~) {
                  break;
               }

               ~[int]~ += ~[int]~;
            }
         }
---------
while(true) {
               Integer var6 = ~[int]~;
               ((Collection)~[List]~).add(~[Integer]~);
               if (~[int]~ == ~[int]~) {
                  break;
               }

               ~[int]~ += ~[int]~;
            }
---------
if (~[long]~ <= ~[long]~) {
               while(true) {
                  Long var10 = ~[long]~;
                  ((Collection)~[List]~).add(~[Long]~);
                  if (~[long]~ == ~[long]~) {
                     break;
                  }

                  ~[long]~ += ~[long]~;
               }
            }
---------
while(true) {
                  Long var10 = ~[long]~;
                  ((Collection)~[List]~).add(~[Long]~);
                  if (~[long]~ == ~[long]~) {
                     break;
                  }

                  ~[long]~ += ~[long]~;
               }
---------
if (~[char]~ <= ~[char]~) {
                  while(true) {
                     Character var21 = ~[char]~;
                     ((Collection)~[List]~).add(~[Character]~);
                     if (~[char]~ == ~[char]~) {
                        break;
                     }

                     ~[char]~ = (char)(~[char]~ + ~[int]~);
                  }
               }
---------
while(true) {
                     Character var21 = ~[char]~;
                     ((Collection)~[List]~).add(~[Character]~);
                     if (~[char]~ == ~[char]~) {
                        break;
                     }

                     ~[char]~ = (char)(~[char]~ + ~[int]~);
                  }
---------
if (~[char]~ == ~[char]~) {
                        break;
                     }
---------
if (~[boolean]~ && ~[boolean]~) {
         ~[String]~ = ~[String]~;
         ~[String]~ = "def";
         ~[boolean]~ = false;
         ~[String]~ = ~[String]~;
         ~[String]~ = ~[String]~;
      } else {
         ~[String]~ = ~[Object]~;
         ~[String]~ = "def";
         ~[boolean]~ = false;
         ~[String]~ = ~[String]~;
         ~[String]~ = ~[String]~;
      }
---------
if (~[float]~ > 0.0F) {
         ++~[float]~;
      }
---------
for(int var5 = ~[int[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         int i = ~[int[]]~[~[int]~];
         ~[int[]]~[~[int]~++] = 0;
         ~[int]~ = ~[int]~ * 10 + ~[int]~;
      }
---------
if (~[ArrayList]~.size() > 0) {
         throw new AssertionError("Wrong elements for MaxUI..MinUI: " + ~[ArrayList]~);
      }
---------
while(true) {
            int i = ~[int]~;
            ~[int]~ = ~[int]~ * 10 + ~[int]~;
            if (~[int]~ == ~[byte]~) {
               break;
            }

            ++~[int]~;
         }
---------
while(true) {
            long i = ~[long]~;
            ~[int]~ = ~[int]~ * 10 + (int)~[long]~;
            if (~[long]~ == ~[long]~) {
               break;
            }

            ++~[long]~;
         }
---------
if (~[ArrayList]~.size() > 23 || ~[int]~ == 0) {
               break;
            }
---------
if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
               break;
            }
---------
if (~[ArrayList]~.size() > 3 || ~[long]~ == ~[long]~) {
               break;
            }
---------
if (~[ArrayList]~.size() > 3 || ~[int]~ == ~[int]~) {
               break;
            }
---------
for(int var3 = ~[Number[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         int index = ~[int]~;
         Number x = ~[Number[]]~[~[int]~];
         ~[StringBuilder]~.append("" + ~[int]~ + ":" + ~[Number]~ + ";");
      }
---------
for(int var2 = 0; ~[int]~ < ~[CharSequence]~.length(); ++~[int]~) {
         int index = ~[int]~;
         char x = ~[CharSequence]~.charAt(~[int]~);
         if (~[int]~ != 0) {
            if (~[int]~ == 3) {
               break;
            }

            ~[StringBuilder]~.append("" + ~[int]~ + ":" + ~[char]~ + ";");
         }
      }
---------
if (~[int]~ != 0) {
            if (~[int]~ == 3) {
               break;
            }

            ~[StringBuilder]~.append("" + ~[int]~ + ":" + ~[char]~ + ";");
         }
---------
if (((Object[])~[Object]~).length > 0) {
            Object var10000 = ((Object[])~[Object]~)[0];
         }
---------
if ((~[int]~ & 2) != 0) {
               ~[String]~ = "OK";
            }
---------
switch (~[int]~) {
         case 1:
         case 2:
         case 3:
            ~[byte]~ = 1;
            break;
         case 4:
         case 5:
         case 6:
            ~[byte]~ = 2;
            break;
         case 7:
         case 8:
         case 9:
            ~[byte]~ = 3;
            break;
         default:
            ~[byte]~ = 4;
      }
---------
if ((~[int]~ & 1) != 0) {
         ~[String]~ = "";
      }
---------
for(int var3 = ~[Integer[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         int index = ~[int]~;
         int x = ~[Integer[]]~[~[int]~];
         ~[StringBuilder]~.append("" + ~[int]~ + ":" + ~[int]~ + ";");
      }
---------
if ((~[int]~ & 1) != 0) {
               ~[int]~ = ~[A]~.x;
            }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            Integer var4 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ -= 3;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var6 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += -3L;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var15 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + -3);
         }
      }
---------
while(true) {
            Integer var4 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ -= 3;
         }
---------
while(true) {
            Long var6 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += -3L;
         }
---------
while(true) {
            Character var15 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + -3);
         }
---------
if (~[int]~ <= ~[int]~) {
            while(true) {
               Integer var9 = ~[int]~;
               ((Collection)~[List]~).add(~[Integer]~);
               if (~[int]~ == ~[int]~) {
                  break;
               }

               ~[int]~ += ~[int]~;
            }
         }
---------
while(true) {
               Integer var9 = ~[int]~;
               ((Collection)~[List]~).add(~[Integer]~);
               if (~[int]~ == ~[int]~) {
                  break;
               }

               ~[int]~ += ~[int]~;
            }
---------
if (~[long]~ <= ~[long]~) {
               while(true) {
                  Long var16 = ~[long]~;
                  ((Collection)~[List]~).add(~[Long]~);
                  if (~[long]~ == ~[long]~) {
                     break;
                  }

                  ~[long]~ += ~[long]~;
               }
            }
---------
while(true) {
                  Long var16 = ~[long]~;
                  ((Collection)~[List]~).add(~[Long]~);
                  if (~[long]~ == ~[long]~) {
                     break;
                  }

                  ~[long]~ += ~[long]~;
               }
---------
if (~[char]~ <= ~[char]~) {
                  while(true) {
                     Character var13 = ~[char]~;
                     ((Collection)~[List]~).add(~[Character]~);
                     if (~[char]~ == ~[char]~) {
                        break;
                     }

                     ~[char]~ = (char)(~[char]~ + ~[int]~);
                  }
               }
---------
while(true) {
                     Character var13 = ~[char]~;
                     ((Collection)~[List]~).add(~[Character]~);
                     if (~[char]~ == ~[char]~) {
                        break;
                     }

                     ~[char]~ = (char)(~[char]~ + ~[int]~);
                  }
---------
while(~[Iterator]~.hasNext()) {
         int outer = ~[int]~++;
         IndexedValue iv = (IndexedValue)~[Iterator]~.next();
         Integer var8 = ~[int]~;
         ((Collection)~[List]~).add(~[Integer]~);
         int inner = ~[IndexedValue]~.component1();
         int v = ((Number)~[IndexedValue]~.component2()).intValue();
         Integer var9 = ~[int]~;
         ((Collection)~[List]~).add(~[Integer]~);
         ~[Integer]~ = ~[int]~;
         ((Collection)~[List]~).add(~[Integer]~);
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            Integer var4 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += 7;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var7 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += 7L;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var6 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + 7);
         }
      }
---------
while(true) {
            Integer var4 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += 7;
         }
---------
while(true) {
            Long var7 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += 7L;
         }
---------
while(true) {
            Character var6 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + 7);
         }
---------
if (~[int]~ > 0 && ~[int]~ <= ~[int]~ || ~[int]~ < 0 && ~[int]~ <= ~[int]~) {
            while(~[int]~ != ~[int]~) {
               ~[int]~ += ~[int]~;
            }
         }
---------
if (~[long]~ <= 0L) {
            ~[long]~ = -~[long]~;
         }
---------
if (~[long]~ > 0L && ~[long]~ <= ~[long]~ || ~[long]~ < 0L && ~[long]~ <= ~[long]~) {
            while(~[long]~ != ~[long]~) {
               ~[long]~ += ~[long]~;
            }
         }
---------
if (~[int]~ > 0 && ~[char]~ <= ~[char]~ || ~[int]~ < 0 && ~[char]~ <= ~[char]~) {
            while(~[char]~ != ~[char]~) {
               ~[char]~ = (char)(~[char]~ + ~[int]~);
            }
         }
---------
for(int sum = false; ~[int]~ < 5; ~[Integer[]]~[~[int]~] = ~[int]~++) {
      }
---------
for(int var4 = ~[Integer[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         Integer el = ~[Integer[]]~[~[int]~];
         ~[int]~ += ~[Integer]~ != null ? ~[Integer]~ : 0;
      }
---------
if (~[int]~ != ~[int]~) {
         throw new AssertionError(~[String]~ + ": " + ~[int]~ + " != " + ~[int]~);
      }
---------
while(~[Iterator]~.hasNext()) {
         Map.Entry entry = (Map.Entry)~[Iterator]~.next();
         ~[Entry]~.setValue(2);
      }
---------
if (~[Object]~ == null) {
         throw new NullPointerException("null cannot be cast to non-null type kotlin.String");
      } else {
         String var10000 = (String)~[Object]~;
      }
---------
if ((~[int]~ & 1) != 0) {
         ~[String]~ = null;
      }
---------
while(~[Iterator]~.hasNext()) {
         Object item$iv$iv = ~[Iterator]~.next();
         int it = ((Number)~[Object]~).intValue();
         int var11 = false;
         ~[Collection]~.add(new Local());
      }
---------
for(int i = 10; ~[int]~ < 6; ++~[int]~) {
         ~[ArrayList]~.add(~[int]~);
         if (~[ArrayList]~.size() > 23) {
            break;
         }
      }
---------
for(long i = 10L; ~[long]~ < -4L; ++~[long]~) {
                  ~[ArrayList]~.add(~[long]~);
                  if (~[ArrayList]~.size() > 23) {
                     break;
                  }
               }
---------
if (~[ArrayList]~.size() > 23) {
                     break;
                  }
---------
for(char i = 'z'; ~[char]~ < 'b'; ++~[char]~) {
                     ~[ArrayList]~.add(~[char]~);
                     if (~[ArrayList]~.size() > 23) {
                        break;
                     }
                  }
---------
if (~[ArrayList]~.size() > 23) {
                        break;
                     }
---------
for(~[int[][]]~ = new int[0][]; ~[int]~ < 0; ++~[int]~) {
         ~[int[][]]~[~[int]~] = new int[0];
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            Integer var4 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += -2147483647;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var7 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ++~[long]~;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var8 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
      }
---------
while(true) {
            Integer var4 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += -2147483647;
         }
---------
while(true) {
            Long var7 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ++~[long]~;
         }
---------
for(~[boolean[][]]~ = new boolean[1][]; ~[int]~ < 1; ++~[int]~) {
         ~[boolean[][]]~[~[int]~] = new boolean[1];
      }
---------
for(~[boolean[][]]~ = new boolean[1][]; ~[int]~ < 1; ++~[int]~) {
         ~[boolean[][]]~[~[int]~] = ~[boolean[][]]~[~[int]~];
      }
---------
switch (~[int]~) {
         case 1:
            ~[String]~ = "OK";
            break;
         case 2:
            ~[String]~ = "2";
            break;
         default:
            ~[String]~ = "other " + ~[int]~;
      }
---------
switch (~[int]~) {
         case 100:
            ~[int]~ = 1;
            break;
         case 200:
            ~[int]~ = ~[int]~ / 100;
            break;
         case 300:
            ~[int]~ = 3;
            break;
         default:
            ~[int]~ = 4;
      }
---------
while(true) {
            int i = ~[int]~;
            ~[int]~ = ~[int]~ * 10 + ~[int]~;
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
---------
while(true) {
            long i = ~[long]~;
            ~[int]~ = ~[int]~ * 10 + (int)~[long]~;
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += ~[long]~;
         }
---------
for(int i = 4; 0 < ~[int]~; --~[int]~) {
         ~[int]~ = ~[int]~ * 10 + ~[int]~;
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            ~[int]~ = ~[int]~ * 10 + ~[int]~;
            if (~[int]~ == ~[int]~) {
               break;
            }

            ++~[int]~;
         }
      }
---------
while(true) {
            ~[int]~ = ~[int]~ * 10 + ~[int]~;
            if (~[int]~ == ~[int]~) {
               break;
            }

            ++~[int]~;
         }
---------
while(~[Iterator]~.hasNext()) {
         Object item$iv$iv = ~[Iterator]~.next();
         KParameter it = (KParameter)~[Object]~;
         int var11 = false;
         KClassifier var10000 = ~[KParameter]~.getType().getClassifier();
         if (~[KClassifier]~ == null) {
            throw new NullPointerException("null cannot be cast to non-null type kotlin.reflect.KClass<*>");
         }

         ~[Collection]~.add((KClass)~[KClassifier]~);
      }
---------
if (~[KClassifier]~ == null) {
            throw new NullPointerException("null cannot be cast to non-null type kotlin.reflect.KClass<*>");
         }
---------
if (~[long]~ <= 3L) {
                  do {
                     long i = ~[long]~++;
                     ~[ArrayList]~.add(~[long]~);
                  } while(~[ArrayList]~.size() <= 23 && ~[long]~ <= 3L);
               }
---------
for(int i = 9; 2 < ~[int]~; --~[int]~) {
         ~[ArrayList]~.add(~[int]~);
         if (~[ArrayList]~.size() > 23) {
            break;
         }
      }
---------
for(long i = 9L; 2L < ~[long]~; ~[long]~ += -1L) {
                              ~[ArrayList]~.add(~[long]~);
                              if (~[ArrayList]~.size() > 23) {
                                 break;
                              }
                           }
---------
for(char i = 'g'; 'b' < ~[char]~; ~[char]~ = (char)(~[char]~ + -1)) {
                                 ~[ArrayList]~.add(~[char]~);
                                 if (~[ArrayList]~.size() > 23) {
                                    break;
                                 }
                              }
---------
for(~[Integer[]]~ = new Integer[5]; ~[int]~ < 5; ++~[int]~) {
         ~[Integer[]]~[~[int]~] = ~[int]~;
      }
---------
if (1 <= ~[int]~) {
         do {
            int i = ~[int]~;
            ~[int]~ -= 2;
            Integer var4 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
         } while(1 <= ~[int]~);
      }
---------
if (1L <= ~[long]~) {
         do {
            long i = ~[long]~;
            ~[long]~ += -2L;
            Long var7 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
         } while(1L <= ~[long]~);
      }
---------
if ('a' <= ~[char]~) {
         do {
            char i = ~[char]~;
            ~[char]~ = (char)(~[char]~ + -2);
            Character var6 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
         } while('a' <= ~[char]~);
      }
---------
for(~[Long[]]~ = new Long[3]; ~[int]~ < 3; ++~[int]~) {
         ~[Long[]]~[~[int]~] = (long)~[int]~;
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            Integer var4 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ -= 7;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var7 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += -7L;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var6 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + -7);
         }
      }
---------
while(true) {
            Integer var4 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ -= 7;
         }
---------
while(true) {
            Long var7 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += -7L;
         }
---------
while(true) {
            Character var6 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + -7);
         }
---------
if (!~[Iterator]~.hasNext()) {
               ~[boolean]~ = false;
               break;
            }
---------
if ((~[int]~ & 1) != 0) {
         ~[int]~ = 0;
      }
---------
for(Iterator var4 = ~[Iterable]~.iterator(); ~[Iterator]~.hasNext(); ~[Object]~ = ~[String]~ + ~[Object]~) {
         Object element$iv = ~[Iterator]~.next();
         ~[Object]~ = ~[Object]~;
         ~[String]~ = ~[Object]~;
         int var8 = false;
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            Integer var5 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ -= 3;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var8 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += -3L;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var7 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + -3);
         }
      }
---------
while(true) {
            Integer var5 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ -= 3;
         }
---------
while(true) {
            Long var8 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += -3L;
         }
---------
while(true) {
            Character var7 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + -3);
         }
---------
while(~[Iterator]~.hasNext()) {
         IndexedValue iv = (IndexedValue)~[Iterator]~.next();
         int i = ~[IndexedValue]~.component1();
         int v = ((Number)~[IndexedValue]~.component2()).intValue();
         Integer var6 = ~[int]~;
         ((Collection)~[List]~).add(~[Integer]~);
         ~[Integer]~ = ~[int]~;
         ((Collection)~[List]~).add(~[Integer]~);
      }
---------
if ((~[int]~ & 1) != 0) {
                  ~[String]~ = "OK";
               }
---------
if ((~[int]~ & 2) != 0) {
         ~[int]~ = ~[int]~;
      }
---------
if ((~[int]~ & 1) != 0) {
         ~[String]~ = "kotlin";
      }
---------
for(int el = 0; ~[int]~ < 5; ++~[int]~) {
         ~[Integer[]]~[~[int]~] = ~[int]~++;
      }
---------
for(int var5 = ~[Integer[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         int el = ~[Integer[]]~[~[int]~];
         ~[int]~ += ~[int]~;
      }
---------
while(~[Iterator]~.hasNext()) {
            Object item$iv$iv = ~[Iterator]~.next();
            Pair var9 = (Pair)~[Object]~;
            int var10 = false;
            String x = (String)~[Pair]~.component1();
            String y = (String)~[Pair]~.component2();
            ~[Collection]~.add(~[String]~ + ~[String]~);
         }
---------
if (~[String]~ == null) {
         ~[String]~ = "null";
      } else {
         String it = ~[String]~;
         int var3 = false;
         ~[String]~ = ~[String]~;
      }
---------
if (~[double]~ > 0.0) {
         ++~[double]~;
      }
---------
for(int var1 = ~[int]~; ~[int]~ > 0; --~[int]~) {
      }
---------
if (~[int]~ <= 0) {
         while(true) {
            ~[ArrayList]~.add(~[int]~);
            if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ -= 3;
         }
      }
---------
while(true) {
            ~[ArrayList]~.add(~[int]~);
            if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ -= 3;
         }
---------
if (~[long]~ <= ~[long]~) {
            while(true) {
               ~[ArrayList]~.add(~[long]~);
               if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                  break;
               }

               ~[long]~ += -3L;
            }
         }
---------
while(true) {
               ~[ArrayList]~.add(~[long]~);
               if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                  break;
               }

               ~[long]~ += -3L;
            }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            Integer var5 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ -= 2;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var8 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += -2L;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var7 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + -2);
         }
      }
---------
while(true) {
            Integer var5 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ -= 2;
         }
---------
while(true) {
            Long var8 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += -2L;
         }
---------
while(true) {
            Character var7 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + -2);
         }
---------
if ((~[int]~ & 1) != 0) {
         ~[String]~ = "b";
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            Integer var4 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += 2;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var6 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += 2L;
         }
      }
---------
while(true) {
            Integer var4 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += 2;
         }
---------
while(true) {
            Long var6 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += 2L;
         }
---------
for(~[Object[]]~ = new Object[~[int]~]; ~[int]~ < ~[int]~; ++~[int]~) {
         ~[Object[]]~[~[int]~] = ~[Function0]~.invoke();
      }
---------
for(~[Object[]]~ = new Object[~[int]~]; ~[int]~ < ~[int]~; ++~[int]~) {
         int var7 = false;
         Object var10 = ~[Function0]~.invoke();
         ~[Object[]]~[~[int]~] = ~[Object]~;
      }
---------
for(~[String[]]~ = new String[~[int]~]; ~[int]~ < ~[int]~; ++~[int]~) {
         int var9 = false;
         int var10 = false;
         String var16 = "abc";
         ~[String[]]~[~[int]~] = ~[String]~;
      }
---------
if (~[char]~ == 'F') {
         ~[KFunction]~ = (KFunction)null.INSTANCE;
      } else if (~[char]~ == 'B') {
         ~[KFunction]~ = (KFunction)null.INSTANCE;
      } else {
         if (~[char]~ != 'I') {
            throw new IllegalArgumentException("Unexpected value prefix: " + ~[String]~.charAt(0));
         }

         ~[KFunction]~ = (KFunction)null.INSTANCE;
      }
---------
if (~[char]~ == 'B') {
         ~[KFunction]~ = (KFunction)null.INSTANCE;
      } else {
         if (~[char]~ != 'I') {
            throw new IllegalArgumentException("Unexpected value prefix: " + ~[String]~.charAt(0));
         }

         ~[KFunction]~ = (KFunction)null.INSTANCE;
      }
---------
if (~[char]~ != 'I') {
            throw new IllegalArgumentException("Unexpected value prefix: " + ~[String]~.charAt(0));
         }
---------
if (~[Integer]~ == ~[int]~) {
               break;
            }
---------
for(~[int]~ = 0; ~[int]~ < 5; ++~[int]~) {
         ~[int[]]~[2 * ~[int]~] = 2 * ~[int]~;
         ~[int[]]~[2 * ~[int]~ + 1] = -2 * ~[int]~ - 1;
      }
---------
while(~[int[]]~[~[int]~] < ~[int]~) {
            ++~[int]~;
         }
---------
while(~[int[]]~[~[int]~] > ~[int]~) {
            --~[int]~;
         }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var7 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += 2L;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var6 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + 2);
         }
      }
---------
while(true) {
            Long var7 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += 2L;
         }
---------
while(true) {
            Character var6 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + 2);
         }
---------
if (~[long]~ > 0L && ~[long]~ <= ~[long]~ || ~[long]~ < 0L && ~[long]~ <= ~[long]~) {
         while(true) {
            Long var22 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += ~[long]~;
         }
      }
---------
if (~[int]~ > 0 && ~[char]~ <= ~[char]~ || ~[int]~ < 0 && ~[char]~ <= ~[char]~) {
         while(true) {
            Character var17 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
      }
---------
while(true) {
            Long var22 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += ~[long]~;
         }
---------
while(true) {
            Character var17 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
---------
for(int var1 = ~[int]~; ~[int]~ != 0; --~[int]~) {
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            Integer var7 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += 7;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var12 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += 7L;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var11 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + 7);
         }
      }
---------
while(true) {
            Integer var7 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += 7;
         }
---------
while(true) {
            Long var12 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += 7L;
         }
---------
while(true) {
            Character var11 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + 7);
         }
---------
if ((~[int]~ & 2) != 0) {
         ~[String]~ = "";
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            Integer var7 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var12 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += ~[long]~;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var11 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
      }
---------
while(true) {
            Integer var7 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
---------
while(true) {
            Long var12 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += ~[long]~;
         }
---------
while(true) {
            Character var11 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
---------
while(~[Iterator]~.hasNext()) {
         int index = ~[int]~++;
         String x = (String)~[Iterator]~.next();
         if (~[int]~ != 0) {
            if (~[int]~ == 3) {
               break;
            }

            ~[StringBuilder]~.append("" + ~[int]~ + ":" + ~[String]~ + ";");
         }
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            int i = ~[int]~++;
            int v = ~[int]~;
            if (~[int]~ != 0) {
               if (~[int]~ == 3) {
                  break;
               }

               Integer var7 = ~[int]~;
               ((Collection)~[List]~).add(~[Integer]~);
               ~[Integer]~ = ~[int]~;
               ((Collection)~[List]~).add(~[Integer]~);
            }

            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += 2;
         }
      }
---------
while(true) {
            int i = ~[int]~++;
            int v = ~[int]~;
            if (~[int]~ != 0) {
               if (~[int]~ == 3) {
                  break;
               }

               Integer var7 = ~[int]~;
               ((Collection)~[List]~).add(~[Integer]~);
               ~[Integer]~ = ~[int]~;
               ((Collection)~[List]~).add(~[Integer]~);
            }

            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += 2;
         }
---------
if (~[int]~ != 0) {
               if (~[int]~ == 3) {
                  break;
               }

               Integer var7 = ~[int]~;
               ((Collection)~[List]~).add(~[Integer]~);
               ~[Integer]~ = ~[int]~;
               ((Collection)~[List]~).add(~[Integer]~);
            }
---------
if (~[int]~ == 3) {
                  break;
               }
---------
for(~[Integer[]]~ = new Integer[~[int]~]; ~[int]~ < ~[int]~; ++~[int]~) {
         int var6 = false;
         Integer var10 = 3;
         ~[Integer[]]~[~[int]~] = ~[Integer]~;
      }
---------
while(true) {
         if (~[int]~ >= ~[int]~) {
            ~[boolean]~ = true;
            break;
         }

         Object element$iv = ~[Object[]]~[~[int]~];
         int it = ((Number)~[Object]~).intValue();
         int var7 = false;
         if (~[int]~ != 3) {
            ~[boolean]~ = false;
            break;
         }

         ++~[int]~;
      }
---------
if (~[int]~ != 3) {
            ~[boolean]~ = false;
            break;
         }
---------
for(char ch = '1'; ~[char]~ < '5'; ++~[char]~) {
         ~[String]~ = ~[String]~ + ~[char]~;
      }
---------
for(char var1 = '1'; ~[char]~ < '5'; ++~[char]~) {
         char ch = ~[char]~;
         ~[String]~ = ~[String]~ + ~[char]~;
      }
---------
for(int i = 1; ~[int]~ < 5; ++~[int]~) {
         ~[ArrayList]~.add(~[int]~);
         if (~[ArrayList]~.size() > 23) {
            break;
         }
      }
---------
for(int i = 1; ~[int]~ < 5; ++~[int]~) {
            ~[ArrayList]~.add(~[int]~);
            if (~[ArrayList]~.size() > 23) {
               break;
            }
         }
---------
if (~[ArrayList]~.size() > 23) {
               break;
            }
---------
for(int i = 1; ~[int]~ < 5; ++~[int]~) {
               ~[ArrayList]~.add(~[int]~);
               if (~[ArrayList]~.size() > 23) {
                  break;
               }
            }
---------
if (~[ArrayList]~.size() > 23) {
                  break;
               }
---------
for(long i = 1L; ~[long]~ < 5L; ++~[long]~) {
                  ~[ArrayList]~.add(~[long]~);
                  if (~[ArrayList]~.size() > 23) {
                     break;
                  }
               }
---------
for(char i = 'a'; ~[char]~ < 'd'; ++~[char]~) {
                     ~[ArrayList]~.add(~[char]~);
                     if (~[ArrayList]~.size() > 23) {
                        break;
                     }
                  }
---------
for(~[int[]]~ = new int[10]; ~[int]~ < 10; ~[int[]]~[~[int]~] = ~[int]~++) {
      }
---------
for(int var4 = ~[int[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         int var10000 = ~[int[]]~[~[int]~];
         ++~[int]~;
         if (~[int]~ <= 2) {
            ~[String]~ = ~[String]~ + ~[int]~ + ";";
         }
      }
---------
while(~[int]~ < 10) {
         ++~[int]~;
         if (~[int]~ <= 2) {
            ~[String]~ = ~[String]~ + ~[int]~ + ";";
         }
      }
---------
if (~[int]~ <= 2) {
            ~[String]~ = ~[String]~ + ~[int]~ + ";";
         }
---------
if ((~[int]~ & 2) != 0) {
         ~[long]~ = 1L;
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            Integer var8 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var14 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += ~[long]~;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var13 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
      }
---------
while(true) {
            Long var14 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += ~[long]~;
         }
---------
while(true) {
            Character var13 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
---------
if (~[int]~ == 1) {
            ;
         }
---------
for(~[String[]]~ = new String[1]; ~[int]~ < 1; ++~[int]~) {
         ~[String[]]~[~[int]~] = "";
      }
---------
for(~[String[][][]]~ = new String[1][][]; ~[int]~ < 1; ++~[int]~) {
         ~[int]~ = ~[int]~;
         ~[int]~ = 0;

         String[][] var6;
         for(~[String[][]]~ = new String[1][]; ~[int]~ < 1; ++~[int]~) {
            int var9 = ~[int]~;
            ~[int]~ = 0;

            String[] var11;
            for(~[String[]]~ = new String[1]; ~[int]~ < 1; ++~[int]~) {
               int z = ~[int]~;
               ~[int]~ = ~[int]~;
               ~[int]~ = ~[int]~;
               int var18 = false;
               String var24 = "" + ~[int]~ + "-" + ~[int]~ + "-" + ~[int]~;
               ~[String[]]~[~[int]~] = ~[String]~;
            }

            ~[String[][]]~[~[int]~] = ~[String[]]~;
         }

         ~[String[][][]]~[~[int]~] = ~[String[][]]~;
      }
---------
for(~[String[][]]~ = new String[1][]; ~[int]~ < 1; ++~[int]~) {
            int var9 = ~[int]~;
            ~[int]~ = 0;

            String[] var11;
            for(~[String[]]~ = new String[1]; ~[int]~ < 1; ++~[int]~) {
               int z = ~[int]~;
               ~[int]~ = ~[int]~;
               ~[int]~ = ~[int]~;
               int var18 = false;
               String var24 = "" + ~[int]~ + "-" + ~[int]~ + "-" + ~[int]~;
               ~[String[]]~[~[int]~] = ~[String]~;
            }

            ~[String[][]]~[~[int]~] = ~[String[]]~;
         }
---------
for(~[String[][][][]]~ = new String[1][][][]; ~[int]~ < 1; ++~[int]~) {
            ~[int]~ = ~[int]~;
            ~[int]~ = 0;

            String[][][] var7;
            for(~[String[][][]]~ = new String[1][][]; ~[int]~ < 1; ++~[int]~) {
               ~[int]~ = ~[int]~;
               ~[int]~ = 0;

               String[][] var12;
               for(~[String[][]]~ = new String[1][]; ~[int]~ < 1; ++~[int]~) {
                  ~[int]~ = ~[int]~;
                  ~[int]~ = ~[int]~;
                  int var19 = false;
                  String[] var20 = new String[]{"" + ~[int]~ + "-" + ~[int]~ + "-" + ~[int]~};
                  ~[String[][]]~[~[int]~] = ~[String[]]~;
               }

               ~[String[][][]]~[~[int]~] = ~[String[][]]~;
            }

            ~[String[][][][]]~[~[int]~] = ~[String[][][]]~;
         }
---------
for(~[Object[]]~ = new Object[1]; ~[int]~ < 1; ++~[int]~) {
               ~[Object[]]~[~[int]~] = ~[Function3]~.invoke(~[int]~, ~[int]~, ~[int]~);
            }
---------
for(~[String[]]~ = new String[1]; ~[int]~ < 1; ++~[int]~) {
               int z = ~[int]~;
               ~[int]~ = ~[int]~;
               ~[int]~ = ~[int]~;
               int var18 = false;
               String var24 = "" + ~[int]~ + "-" + ~[int]~ + "-" + ~[int]~;
               ~[String[]]~[~[int]~] = ~[String]~;
            }
---------
for(~[String[][][]]~ = new String[1][][]; ~[int]~ < 1; ++~[int]~) {
               ~[int]~ = ~[int]~;
               ~[int]~ = 0;

               String[][] var12;
               for(~[String[][]]~ = new String[1][]; ~[int]~ < 1; ++~[int]~) {
                  ~[int]~ = ~[int]~;
                  ~[int]~ = ~[int]~;
                  int var19 = false;
                  String[] var20 = new String[]{"" + ~[int]~ + "-" + ~[int]~ + "-" + ~[int]~};
                  ~[String[][]]~[~[int]~] = ~[String[]]~;
               }

               ~[String[][][]]~[~[int]~] = ~[String[][]]~;
            }
---------
for(~[int[][][][]]~ = new int[1][][][]; ~[int]~ < 1; ++~[int]~) {
               ~[int]~ = ~[int]~;
               int var33 = 0;

               int[][][] var8;
               for(~[int[][][]]~ = new int[1][][]; ~[int]~ < 1; ++~[int]~) {
                  ~[int]~ = ~[int]~;
                  int var35 = 0;

                  int[][] var13;
                  for(~[int[][]]~ = new int[1][]; ~[int]~ < 1; ++~[int]~) {
                     ~[int]~ = ~[int]~;
                     int var38 = false;
                     int[] var21 = new int[]{~[int]~ + ~[int]~ + ~[int]~ + 1};
                     ~[int[][]]~[~[int]~] = ~[int[]]~;
                  }

                  ~[int[][][]]~[~[int]~] = ~[int[][]]~;
               }

               ~[int[][][][]]~[~[int]~] = ~[int[][][]]~;
            }
---------
for(~[String[][]]~ = new String[1][]; ~[int]~ < 1; ++~[int]~) {
                  ~[int]~ = ~[int]~;
                  ~[int]~ = ~[int]~;
                  int var19 = false;
                  String[] var20 = new String[]{"" + ~[int]~ + "-" + ~[int]~ + "-" + ~[int]~};
                  ~[String[][]]~[~[int]~] = ~[String[]]~;
               }
---------
for(~[int[][][]]~ = new int[1][][]; ~[int]~ < 1; ++~[int]~) {
                  ~[int]~ = ~[int]~;
                  int var35 = 0;

                  int[][] var13;
                  for(~[int[][]]~ = new int[1][]; ~[int]~ < 1; ++~[int]~) {
                     ~[int]~ = ~[int]~;
                     int var38 = false;
                     int[] var21 = new int[]{~[int]~ + ~[int]~ + ~[int]~ + 1};
                     ~[int[][]]~[~[int]~] = ~[int[]]~;
                  }

                  ~[int[][][]]~[~[int]~] = ~[int[][]]~;
               }
---------
for(~[int[][]]~ = new int[1][]; ~[int]~ < 1; ++~[int]~) {
                     ~[int]~ = ~[int]~;
                     int var38 = false;
                     int[] var21 = new int[]{~[int]~ + ~[int]~ + ~[int]~ + 1};
                     ~[int[][]]~[~[int]~] = ~[int[]]~;
                  }
---------
for(Iterator var3 = ~[Iterable]~.iterator(); ~[Iterator]~.hasNext(); ~[int[]]~ = new int[]{10, 20}) {
         IndexedValue var4 = (IndexedValue)~[Iterator]~.next();
         int i = ~[IndexedValue]~.component1();
         int x = ((Number)~[IndexedValue]~.component2()).intValue();
         ~[StringBuilder]~.append("" + ~[int]~ + ":" + ~[int]~ + ";");
      }
---------
for(int var5 = ~[int[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         int i = ~[int]~;
         int x = ~[int[]]~[~[int]~];
         ~[StringBuilder]~.append("" + ~[int]~ + ":" + ~[int]~ + ";");
         int[] var8 = new int[]{10, 20};
      }
---------
if (~[long]~ > 0L && ~[long]~ <= ~[long]~ || ~[long]~ < 0L && ~[long]~ <= ~[long]~) {
            while(true) {
               ~[ArrayList]~.add(~[long]~);
               if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                  break;
               }

               ~[long]~ += ~[long]~;
            }
         }
---------
while(true) {
               ~[ArrayList]~.add(~[long]~);
               if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                  break;
               }

               ~[long]~ += ~[long]~;
            }
---------
if (~[Number]~ == null) {
         ~[Number]~ = (Number)42;
      }
---------
for(int var2 = 0; ~[int]~ < 8; ++~[int]~) {
         ++~[int]~;
         ++~[int]~;
      }
---------
if ((~[int]~ & 2) != 0) {
         ~[String]~ = "b";
      }
---------
if ((~[int]~ & 8) != 0) {
         ~[String]~ = "d";
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            Integer var8 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ -= 3;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var14 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += -3L;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var28 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + -3);
         }
      }
---------
while(true) {
            Integer var8 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ -= 3;
         }
---------
while(true) {
            Long var14 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += -3L;
         }
---------
while(true) {
            Character var28 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + -3);
         }
---------
for(Function2 var5 = ~[Function2]~; ~[Iterator]~.hasNext(); ~[Function2]~ = ~[Function2]~) {
         Object var9 = ~[Function2]~.invoke(~[Iterator]~.next(), ~[Object]~);
         ~[Iterator]~ = ~[Iterator]~;
         ~[Object]~ = ~[Object]~;
      }
---------
for(byte var3 = ~[int]~; ~[int]~ < ~[byte]~; ++~[int]~) {
         ~[int]~ = ~[int]~ * 10 + ~[int]~;
      }
---------
for(Iterator var4 = ~[Iterable]~.iterator(); ~[Iterator]~.hasNext(); ~[boolean]~ = false) {
         int element$iv = ((IntIterator)~[Iterator]~).nextInt();
      }
---------
if (~[Object]~ instanceof String) {
         int i = 0;

         for(int var3 = ((String)~[Object]~).length(); ~[int]~ < ~[int]~; ++~[int]~) {
            ~[int]~ = ~[int]~ * 10 + ~[int]~;
         }
      }
---------
for(int var3 = ((String)~[Object]~).length(); ~[int]~ < ~[int]~; ++~[int]~) {
            ~[int]~ = ~[int]~ * 10 + ~[int]~;
         }
---------
if (~[long]~ > 0L) {
         ++~[long]~;
      }
---------
for(int var4 = ~[byte[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
            int index = ~[int]~;
            byte x = ~[byte[]]~[~[int]~];
            ~[StringBuilder]~.append("" + ~[int]~ + ":" + ~[byte]~ + ";");
         }
---------
if (~[Void]~ != null) {
         ((Number)~[Void]~).intValue();
      } else {
         ~[boolean]~ = false;
      }
---------
for(~[double[][]]~ = new double[2][]; ~[int]~ < 2; ++~[int]~) {
            ~[double[][]]~[~[int]~] = new double[~[int]~];
         }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            ~[ArrayList]~.add(~[int]~);
            if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ -= 3;
         }
      }
---------
if (~[int]~ <= ~[int]~) {
            while(true) {
               ~[ArrayList]~.add(~[int]~);
               if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                  break;
               }

               ~[int]~ -= 3;
            }
         }
---------
while(true) {
               ~[ArrayList]~.add(~[int]~);
               if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                  break;
               }

               ~[int]~ -= 3;
            }
---------
if (~[int]~ <= ~[int]~) {
               while(true) {
                  ~[ArrayList]~.add(~[int]~);
                  if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                     break;
                  }

                  ~[int]~ -= 3;
               }
            }
---------
while(true) {
                  ~[ArrayList]~.add(~[int]~);
                  if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                     break;
                  }

                  ~[int]~ -= 3;
               }
---------
if (~[long]~ <= ~[long]~) {
                  while(true) {
                     ~[ArrayList]~.add(~[long]~);
                     if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                        break;
                     }

                     ~[long]~ += -3L;
                  }
               }
---------
while(true) {
                     ~[ArrayList]~.add(~[long]~);
                     if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                        break;
                     }

                     ~[long]~ += -3L;
                  }
---------
if (~[char]~ <= ~[char]~) {
                     while(true) {
                        ~[ArrayList]~.add(~[char]~);
                        if (~[ArrayList]~.size() > 23 || ~[char]~ == ~[char]~) {
                           break;
                        }

                        ~[char]~ = (char)(~[char]~ + -3);
                     }
                  }
---------
while(true) {
                        ~[ArrayList]~.add(~[char]~);
                        if (~[ArrayList]~.size() > 23 || ~[char]~ == ~[char]~) {
                           break;
                        }

                        ~[char]~ = (char)(~[char]~ + -3);
                     }
---------
if ((~[int]~ & 4) != 0) {
         String[] var5 = new String[]{"Aaa"};
         ~[CharSequence[]]~ = (CharSequence[])~[String[]]~;
      }
---------
if (~[int]~ >= ~[int]~) {
            ~[String]~ = ~[String]~;
            break;
         }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var25 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ += ~[char]~;
         }
      }
---------
while(true) {
            Character var25 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ += ~[char]~;
         }
---------
for(~[int]~ = 99; ~[int]~ > 0; --~[int]~) {
         --~[int]~;
      }
---------
if (~[double]~ <= 1.0) {
      }
---------
for(Iterator var5 = ~[Iterable]~.iterator(); ~[Iterator]~.hasNext(); ~[Object]~ = ~[String]~ + ~[String]~) {
         Object element$iv = ~[Iterator]~.next();
         ~[String]~ = (String)~[Object]~;
         ~[String]~ = ~[Object]~;
         int var9 = false;
      }
---------
for(~[int[][]]~ = new int[4][]; ~[int]~ < 4; ++~[int]~) {
         int[] var4 = new int[]{~[int]~};
         ~[int[][]]~[~[int]~] = ~[int[]]~;
      }
---------
for(int var3 = ((Object[])~[int[][]]~).length; ~[int]~ < ~[int]~; ++~[int]~) {
         int[] iarr = ~[int[][]]~[~[int]~];
         ~[int]~ += ~[int]~ * ~[int[]]~[0];
      }
---------
for(int var4 = ~[Object[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
            int index = ~[int]~;
            Object x = ~[Object[]]~[~[int]~];
            ~[StringBuilder]~.append("" + ~[int]~ + ":" + ~[Object]~ + ";");
         }
---------
switch (~[int]~) {
         case -4:
            ~[int]~ = 9;
            break;
         case -3:
         case -2:
         case 2:
         case 3:
         default:
            ~[int]~ = 19;
            break;
         case -1:
            ~[int]~ = 10;
            break;
         case 0:
            ~[int]~ = ~[int]~ + 11;
            break;
         case 1:
            ~[int]~ = 12;
            break;
         case 4:
            ~[int]~ = 13;
            break;
         case 5:
            ~[int]~ = 14;
            break;
         case 6:
            ~[int]~ = 15;
            break;
         case 7:
            ~[int]~ = 16;
            break;
         case 8:
            ~[int]~ = 17;
            break;
         case 9:
            ~[int]~ = ~[int]~ + 9;
      }
---------
if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                           break;
                        }
---------
if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                              break;
                           }
---------
if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                                 break;
                              }
---------
if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                                    break;
                                 }
---------
for(int i = 0; ~[int]~ < 5; ++~[int]~) {
         ~[long[]]~[~[int]~] = (long)(~[int]~ + 1);
      }
---------
for(int var6 = ~[long[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         long element$iv = ~[long[]]~[~[int]~];
         long x = ((Number)~[Object]~).longValue();
         int var13 = false;
         ~[Object]~ = ~[long]~ + ~[long]~;
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            ~[Function1]~.invoke(~[int]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ++~[int]~;
         }
      }
---------
while(true) {
            ~[Function1]~.invoke(~[int]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ++~[int]~;
         }
---------
for(~[Double[]]~ = new Double[3]; ~[int]~ < 3; ++~[int]~) {
         ~[Double[]]~[~[int]~] = (double)~[int]~ + 0.1;
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            ~[ArrayList]~.add(~[int]~);
            if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ -= 2;
         }
      }
---------
while(true) {
            ~[ArrayList]~.add(~[int]~);
            if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ -= 2;
         }
---------
if (~[int]~ <= ~[int]~) {
            while(true) {
               ~[ArrayList]~.add(~[int]~);
               if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                  break;
               }

               ~[int]~ -= 2;
            }
         }
---------
while(true) {
               ~[ArrayList]~.add(~[int]~);
               if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                  break;
               }

               ~[int]~ -= 2;
            }
---------
if (~[int]~ <= ~[int]~) {
               while(true) {
                  ~[ArrayList]~.add(~[int]~);
                  if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                     break;
                  }

                  ~[int]~ -= 2;
               }
            }
---------
while(true) {
                  ~[ArrayList]~.add(~[int]~);
                  if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                     break;
                  }

                  ~[int]~ -= 2;
               }
---------
if (~[long]~ <= ~[long]~) {
                  while(true) {
                     ~[ArrayList]~.add(~[long]~);
                     if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                        break;
                     }

                     ~[long]~ += -2L;
                  }
               }
---------
while(true) {
                     ~[ArrayList]~.add(~[long]~);
                     if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                        break;
                     }

                     ~[long]~ += -2L;
                  }
---------
if (~[char]~ <= ~[char]~) {
                     while(true) {
                        ~[ArrayList]~.add(~[char]~);
                        if (~[ArrayList]~.size() > 23 || ~[char]~ == ~[char]~) {
                           break;
                        }

                        ~[char]~ = (char)(~[char]~ + -2);
                     }
                  }
---------
while(true) {
                        ~[ArrayList]~.add(~[char]~);
                        if (~[ArrayList]~.size() > 23 || ~[char]~ == ~[char]~) {
                           break;
                        }

                        ~[char]~ = (char)(~[char]~ + -2);
                     }
---------
if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[byte]~) {
               break;
            }
---------
if ((~[int]~ & 1) != 0) {
         ~[double]~ = 1.0;
      }
---------
for(~[long]~ = ~[long]~; ~[long]~ != 0L; ~[long]~ = ~[long]~) {
         long var12 = ~[long]~ - 1L;
         ~[long]~ = ~[long]~ + ~[long]~;
         ~[long]~ = ~[long]~;
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            ~[String]~ = ~[String]~ + ~[long]~;
            if (~[long]~ == ~[long]~) {
               break;
            }

            ++~[long]~;
         }
      }
---------
while(true) {
            ~[String]~ = ~[String]~ + ~[long]~;
            if (~[long]~ == ~[long]~) {
               break;
            }

            ++~[long]~;
         }
---------
if (1L <= ~[long]~) {
         do {
            long i = ~[long]~;
            ~[long]~ += -1L;
            Long var7 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
         } while(1L <= ~[long]~);
      }
---------
if (~[int]~ <= 8) {
         while(true) {
            ~[ArrayList]~.add(~[int]~);
            if (~[ArrayList]~.size() > 23 || ~[int]~ == 8) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
      }
---------
while(true) {
            ~[ArrayList]~.add(~[int]~);
            if (~[ArrayList]~.size() > 23 || ~[int]~ == 8) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
---------
if (~[int]~ <= ~[byte]~) {
            while(true) {
               ~[ArrayList]~.add(~[int]~);
               if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[byte]~) {
                  break;
               }

               ~[int]~ += ~[int]~;
            }
         }
---------
if (~[ArrayList]~.size() > 23 || ~[int]~ == 8) {
               break;
            }
---------
while(true) {
               ~[ArrayList]~.add(~[int]~);
               if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[byte]~) {
                  break;
               }

               ~[int]~ += ~[int]~;
            }
---------
if (~[int]~ <= ~[byte]~) {
               while(true) {
                  ~[ArrayList]~.add(~[int]~);
                  if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[byte]~) {
                     break;
                  }

                  ~[int]~ += ~[int]~;
               }
            }
---------
while(true) {
                  ~[ArrayList]~.add(~[int]~);
                  if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[byte]~) {
                     break;
                  }

                  ~[int]~ += ~[int]~;
               }
---------
if (~[long]~ <= 8L) {
                  while(true) {
                     ~[ArrayList]~.add(~[long]~);
                     if (~[ArrayList]~.size() > 23 || ~[long]~ == 8L) {
                        break;
                     }

                     ~[long]~ += ~[long]~;
                  }
               }
---------
while(true) {
                     ~[ArrayList]~.add(~[long]~);
                     if (~[ArrayList]~.size() > 23 || ~[long]~ == 8L) {
                        break;
                     }

                     ~[long]~ += ~[long]~;
                  }
---------
if (~[char]~ <= 'd') {
                     while(true) {
                        ~[ArrayList]~.add(~[char]~);
                        if (~[ArrayList]~.size() > 23 || ~[char]~ == 'd') {
                           break;
                        }

                        ~[char]~ = (char)(~[char]~ + ~[int]~);
                     }
                  }
---------
if (~[ArrayList]~.size() > 23 || ~[long]~ == 8L) {
                        break;
                     }
---------
while(true) {
                        ~[ArrayList]~.add(~[char]~);
                        if (~[ArrayList]~.size() > 23 || ~[char]~ == 'd') {
                           break;
                        }

                        ~[char]~ = (char)(~[char]~ + ~[int]~);
                     }
---------
if (~[ArrayList]~.size() > 23 || ~[char]~ == 'd') {
                           break;
                        }
---------
if ((~[int]~ & 2) != 0) {
         ~[int]~ = 42;
      }
---------
for(int count = ~[int]~; ~[int]~ > 0; --~[int]~) {
         ~[Function0]~.invoke();
      }
---------
if ((~[int]~ & 2) != 0) {
         ~[String]~ = "K";
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            int i = ~[int]~++;
            int v = ~[int]~;
            Integer var7 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            ~[Integer]~ = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ -= 2;
         }
      }
---------
while(true) {
            int i = ~[int]~++;
            int v = ~[int]~;
            Integer var7 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            ~[Integer]~ = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ -= 2;
         }
---------
for(int var3 = ~[int...]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         int i = ~[int...]~[~[int]~];
         ~[String]~ = ~[String]~ + ~[int]~;
      }
---------
for(int var3 = ~[String...]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         String i = ~[String...]~[~[int]~];
         ~[String]~ = ~[String]~ + ~[String]~;
      }
---------
for(int var3 = ~[Object...]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         Object i = ~[Object...]~[~[int]~];
         ~[String]~ = ~[String]~ + ~[Object]~;
      }
---------
for(int var3 = ~[String[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         int i = ~[int]~;
         ~[String]~ = ~[String[]]~[~[int]~];
         ~[StringBuilder]~.append("" + ~[int]~ + ";");
      }
---------
if ((~[int]~ & 1) != 0) {
         ~[String]~ = ~[String]~;
      }
---------
for(int i = 1; ~[int]~ < 5; ++~[int]~) {
         ~[int]~ = ~[int]~ * 10 + ~[int]~;
      }
---------
for(int var1 = 1; ~[int]~ < 5; ++~[int]~) {
         int i = ~[int]~;
         ~[int]~ = ~[int]~ * 10 + ~[int]~;
      }
---------
for(int var3 = ~[int[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         int var10000 = ~[int[]]~[~[int]~];
         if (~[int]~ > 2) {
            break;
         }

         ++~[int]~;
      }
---------
if (~[int]~ != 3) {
         throw new AssertionError();
      }
---------
for(~[int]~ = 0; ~[int]~ < 10 && ~[int]~ <= 2; ++~[int]~) {
      }
---------
while(~[int]~ <= 2) {
         ++~[int]~;
         if (~[int]~ >= 10) {
            break;
         }
      }
---------
if (~[int]~ > 2) {
            break;
         }
---------
if (~[int]~ >= 10) {
            break;
         }
---------
if (~[char]~ > 0 && ~[char]~ <= ~[char]~ || ~[char]~ < 0 && ~[char]~ <= ~[char]~) {
         while(true) {
            Character var13 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[char]~);
         }
      }
---------
while(true) {
            Character var13 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[char]~);
         }
---------
for(Iterator var1 = ((Map)~[HashMap]~).entrySet().iterator(); ~[Iterator]~.hasNext(); ~[int]~ = ((Number)~[Entry]~.getValue()).intValue()) {
         ~[Entry]~ = (Map.Entry)~[Iterator]~.next();
         String key = (String)~[Entry]~.getKey();
      }
---------
while(~[int]~++ < 3) {
      }
---------
if (~[int]~ > 1) {
            throw new AssertionError("Should be executed once");
         }
---------
if (~[int]~ != 1) {
               throw new AssertionError("Should be executed once");
            }
---------
if (~[Object]~ instanceof int[]) {
         int i = 0;

         for(int var3 = ((int[])~[Object]~).length; ~[int]~ < ~[int]~; ++~[int]~) {
            ~[int]~ = ~[int]~ * 10 + ~[int]~;
         }
      }
---------
for(int var3 = ((int[])~[Object]~).length; ~[int]~ < ~[int]~; ++~[int]~) {
            ~[int]~ = ~[int]~ * 10 + ~[int]~;
         }
---------
while(~[Iterator]~.hasNext()) {
         String str = (String)~[Iterator]~.next();
         if (~[String]~ != null) {
            ~[String]~ = ~[String]~ + ~[String]~;
         }
      }
---------
if (~[String]~ != null) {
            ~[String]~ = ~[String]~ + ~[String]~;
         }
---------
for(int var3 = ~[String]~.length(); ~[int]~ < ~[int]~; ++~[int]~) {
         ~[String]~.charAt(~[int]~);
         ++~[int]~;
      }
---------
for(int var2 = 0; ~[int]~ < ~[StringBuilder]~.length(); ++~[int]~) {
         char c = ~[StringBuilder]~.charAt(~[int]~);
         ~[String]~ = ~[String]~ + ~[char]~;
      }
---------
for(int var3 = ~[String[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         int index = ~[int]~;
         String x = ~[String[]]~[~[int]~];
         ~[StringBuilder]~.append("" + ~[int]~ + ":" + ~[String]~ + ";");
      }
---------
if (~[Object]~ == null) {
         int var6 = false;
         Object answer$iv = "Foo";
         ~[Map]~.put(~[Object]~, ~[Object]~);
         ~[Object]~ = ~[Object]~;
      } else {
         ~[Object]~ = ~[Object]~;
      }
---------
for(int var4 = 0; ~[int]~ < 8; ++~[int]~) {
         int i = ~[int]~++;
         int v = ~[int]~;
         Pair var7 = new Pair(~[int]~, ~[int]~);
         int v2 = ((Number)~[Pair]~.component1()).intValue();
         int i2 = ((Number)~[Pair]~.component2()).intValue();
         Integer var10 = ~[int]~;
         ((Collection)~[List]~).add(~[Integer]~);
         ~[Integer]~ = ~[int]~;
         ((Collection)~[List]~).add(~[Integer]~);
         ~[Integer]~ = ~[int]~;
         ((Collection)~[List]~).add(~[Integer]~);
         ~[Integer]~ = ~[int]~;
         ((Collection)~[List]~).add(~[Integer]~);
      }
---------
while(true) {
         if (~[int]~ >= ~[int]~) {
            ~[boolean]~ = false;
            break;
         }

         Object element$iv = ~[Object[]]~[~[int]~];
         boolean it = ~[Object]~;
         int var6 = false;
         if (!~[boolean]~) {
            ~[boolean]~ = true;
            break;
         }

         ++~[int]~;
      }
---------
if (~[int]~ >= ~[int]~) {
            ~[boolean]~ = false;
            break;
         }
---------
if (!~[boolean]~) {
            ~[boolean]~ = true;
            break;
         }
---------
if ((~[int]~ & 1) != 0) {
               ~[Object]~ = ~[Pair]~.first;
            }
---------
if ((~[int]~ & 2) != 0) {
               ~[Object]~ = ~[Pair]~.second;
            }
---------
for(~[Boolean[][]]~ = new Boolean[3][]; ~[int]~ < 3; ++~[int]~) {
         ~[int]~ = 0;

         Boolean[] var5;
         for(~[Boolean[]]~ = new Boolean[4]; ~[int]~ < 4; ++~[int]~) {
            ~[Boolean[]]~[~[int]~] = false;
         }

         ~[Boolean[][]]~[~[int]~] = ~[Boolean[]]~;
      }
---------
for(~[Boolean[]]~ = new Boolean[4]; ~[int]~ < 4; ++~[int]~) {
            ~[Boolean[]]~[~[int]~] = false;
         }
---------
for(~[String[][]]~ = new String[3][]; ~[int]~ < 3; ++~[int]~) {
         int var2 = ~[int]~;
         int var3 = 0;

         String[] var4;
         for(~[String[]]~ = new String[3]; ~[int]~ < 3; ++~[int]~) {
            ~[String[]]~[~[int]~] = "" + ~[int]~ + "-" + ~[int]~;
         }

         ~[String[][]]~[~[int]~] = ~[String[]]~;
      }
---------
for(~[String[][]]~ = new String[3][]; ~[int]~ < 3; ++~[int]~) {
         int var2 = ~[int]~;
         String[][] var10000 = ~[String[][]]~;
         int var10001 = ~[int]~;
         String[] var10002;
         if (~[int]~ != 1) {
            ~[String[]]~ = new String[3];
         } else {
            int var3 = 0;

            String[] var4;
            for(~[String[]]~ = new String[3]; ~[int]~ < 3; ++~[int]~) {
               ~[String[]]~[~[int]~] = "" + ~[int]~ + "-" + ~[int]~;
            }

            ~[String[][]]~ = ~[String[][]]~;
            ~[int]~ = ~[int]~;
            ~[String[]]~ = ~[String[]]~;
         }

         ~[String[][]]~[~[int]~] = ~[String[]]~;
      }
---------
for(~[String[]]~ = new String[3]; ~[int]~ < 3; ++~[int]~) {
            ~[String[]]~[~[int]~] = "" + ~[int]~ + "-" + ~[int]~;
         }
---------
if (~[int]~ != 1) {
            ~[String[]]~ = new String[3];
         } else {
            int var3 = 0;

            String[] var4;
            for(~[String[]]~ = new String[3]; ~[int]~ < 3; ++~[int]~) {
               ~[String[]]~[~[int]~] = "" + ~[int]~ + "-" + ~[int]~;
            }

            ~[String[][]]~ = ~[String[][]]~;
            ~[int]~ = ~[int]~;
            ~[String[]]~ = ~[String[]]~;
         }
---------
for(~[String[]]~ = new String[3]; ~[int]~ < 3; ++~[int]~) {
               ~[String[]]~[~[int]~] = "" + ~[int]~ + "-" + ~[int]~;
            }
---------
if ((~[int]~ & 2) != 0) {
         ~[int]~ = 2;
      }
---------
if ((~[int]~ & 4) != 0) {
         ~[int]~ = 3;
      }
---------
if ((~[int]~ & 8) != 0) {
         ~[int]~ = 4;
      }
---------
if ((~[int]~ & 16) != 0) {
         ~[int]~ = 5;
      }
---------
if ((~[int]~ & 32) != 0) {
         ~[int]~ = 6;
      }
---------
if ((~[int]~ & 64) != 0) {
         ~[int]~ = 7;
      }
---------
if ((~[int]~ & 128) != 0) {
         ~[int]~ = 8;
      }
---------
if ((~[int]~ & 256) != 0) {
         ~[int]~ = 9;
      }
---------
if ((~[int]~ & 512) != 0) {
         ~[int]~ = 10;
      }
---------
if ((~[int]~ & 1024) != 0) {
         ~[int]~ = 11;
      }
---------
if ((~[int]~ & 2048) != 0) {
         ~[int]~ = 12;
      }
---------
if ((~[int]~ & 4096) != 0) {
         ~[int]~ = 13;
      }
---------
if ((~[int]~ & 8192) != 0) {
         ~[int]~ = 14;
      }
---------
if ((~[int]~ & 16384) != 0) {
         ~[int]~ = 15;
      }
---------
if ((~[int]~ & '耀') != 0) {
         ~[int]~ = 16;
      }
---------
if ((~[int]~ & 65536) != 0) {
         ~[int]~ = 17;
      }
---------
if ((~[int]~ & 131072) != 0) {
         ~[int]~ = 18;
      }
---------
if ((~[int]~ & 262144) != 0) {
         ~[int]~ = 19;
      }
---------
if ((~[int]~ & 524288) != 0) {
         ~[int]~ = 20;
      }
---------
if ((~[int]~ & 1048576) != 0) {
         ~[int]~ = 21;
      }
---------
if ((~[int]~ & 2097152) != 0) {
         ~[int]~ = 22;
      }
---------
if ((~[int]~ & 4194304) != 0) {
         ~[int]~ = 23;
      }
---------
if ((~[int]~ & 8388608) != 0) {
         ~[int]~ = 24;
      }
---------
if ((~[int]~ & 16777216) != 0) {
         ~[int]~ = 25;
      }
---------
if ((~[int]~ & 33554432) != 0) {
         ~[int]~ = 26;
      }
---------
if ((~[int]~ & 67108864) != 0) {
         ~[int]~ = 27;
      }
---------
if ((~[int]~ & 134217728) != 0) {
         ~[int]~ = 28;
      }
---------
if ((~[int]~ & 268435456) != 0) {
         ~[int]~ = 29;
      }
---------
if ((~[int]~ & 536870912) != 0) {
         ~[int]~ = 30;
      }
---------
if ((~[int]~ & 1073741824) != 0) {
         ~[int]~ = 31;
      }
---------
if ((~[int]~ & 1) != 0) {
         ~[int]~ = 33;
      }
---------
if ((~[int]~ & 2) != 0) {
         ~[int]~ = 34;
      }
---------
if ((~[int]~ & 4) != 0) {
         ~[int]~ = 35;
      }
---------
if ((~[int]~ & 8) != 0) {
         ~[int]~ = 36;
      }
---------
if ((~[int]~ & 16) != 0) {
         ~[int]~ = 37;
      }
---------
if ((~[int]~ & 32) != 0) {
         ~[int]~ = 38;
      }
---------
if ((~[int]~ & 64) != 0) {
         ~[int]~ = 39;
      }
---------
if ((~[int]~ & 128) != 0) {
         ~[int]~ = 40;
      }
---------
if ((~[int]~ & 256) != 0) {
         ~[int]~ = 41;
      }
---------
if ((~[int]~ & 512) != 0) {
         ~[int]~ = 42;
      }
---------
if ((~[int]~ & 1024) != 0) {
         ~[int]~ = 43;
      }
---------
if ((~[int]~ & 2048) != 0) {
         ~[int]~ = 44;
      }
---------
if ((~[int]~ & 4096) != 0) {
         ~[int]~ = 45;
      }
---------
if ((~[int]~ & 8192) != 0) {
         ~[int]~ = 46;
      }
---------
if ((~[int]~ & 16384) != 0) {
         ~[int]~ = 47;
      }
---------
if ((~[int]~ & '耀') != 0) {
         ~[int]~ = 48;
      }
---------
if ((~[int]~ & 65536) != 0) {
         ~[int]~ = 49;
      }
---------
if ((~[int]~ & 131072) != 0) {
         ~[int]~ = 50;
      }
---------
if ((~[int]~ & 262144) != 0) {
         ~[int]~ = 51;
      }
---------
if ((~[int]~ & 524288) != 0) {
         ~[int]~ = 52;
      }
---------
if ((~[int]~ & 1048576) != 0) {
         ~[int]~ = 53;
      }
---------
if ((~[int]~ & 2097152) != 0) {
         ~[int]~ = 54;
      }
---------
if ((~[int]~ & 4194304) != 0) {
         ~[int]~ = 55;
      }
---------
if ((~[int]~ & 8388608) != 0) {
         ~[int]~ = 56;
      }
---------
if ((~[int]~ & 16777216) != 0) {
         ~[int]~ = 57;
      }
---------
if ((~[int]~ & 33554432) != 0) {
         ~[int]~ = 58;
      }
---------
if ((~[int]~ & 67108864) != 0) {
         ~[int]~ = 59;
      }
---------
if ((~[int]~ & 134217728) != 0) {
         ~[int]~ = 60;
      }
---------
if ((~[int]~ & 268435456) != 0) {
         ~[int]~ = 61;
      }
---------
if ((~[int]~ & 536870912) != 0) {
         ~[int]~ = 62;
      }
---------
if ((~[int]~ & 1073741824) != 0) {
         ~[int]~ = 63;
      }
---------
if ((~[int]~ & 1) != 0) {
         ~[int]~ = 65;
      }
---------
if ((~[int]~ & 2) != 0) {
         ~[int]~ = 66;
      }
---------
if ((~[int]~ & 4) != 0) {
         ~[int]~ = 67;
      }
---------
if ((~[int]~ & 8) != 0) {
         ~[int]~ = 68;
      }
---------
if ((~[int]~ & 16) != 0) {
         ~[int]~ = 69;
      }
---------
if ((~[int]~ & 32) != 0) {
         ~[int]~ = 70;
      }
---------
for(int var1 = 4; 0 < ~[int]~; --~[int]~) {
         int i = ~[int]~;
         ~[int]~ = ~[int]~ * 10 + ~[int]~;
      }
---------
for(int var2 = "abcd".length(); ~[int]~ < ~[int]~; ++~[int]~) {
         int index = ~[int]~;
         char x = "abcd".charAt(~[int]~);
         ~[StringBuilder]~.append("" + ~[int]~ + ":" + ~[char]~ + ";");
      }
---------
for(int i = 1; ~[int]~ < 11; ++~[int]~) {
         if (~[int]~ < 5) {
            ++~[int]~;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            if (~[int]~ < 5) {
               ++~[int]~;
            }

            if (~[long]~ == ~[long]~) {
               break;
            }

            ++~[long]~;
         }
      }
---------
while(~[Iterator]~.hasNext()) {
         Integer i = (Integer)~[Iterator]~.next();
         if (~[int]~ < 5) {
            ++~[int]~;
         }
      }
---------
while(~[Iterator]~.hasNext()) {
         Byte i = (Byte)~[Iterator]~.next();
         if (~[int]~ < 5) {
            ++~[int]~;
         }
      }
---------
while(~[Iterator]~.hasNext()) {
         Long i = (Long)~[Iterator]~.next();
         if (~[int]~ < 5) {
            ++~[int]~;
         }
      }
---------
while(~[Iterator]~.hasNext()) {
         Double i = (Double)~[Iterator]~.next();
         if (~[int]~ < 5) {
            ++~[int]~;
         }
      }
---------
while(~[Iterator]~.hasNext()) {
         Object i = ~[Iterator]~.next();
         if (~[int]~ < 5) {
            ++~[int]~;
         }
      }
---------
for(int var3 = ~[String[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         String var10000 = ~[String[]]~[~[int]~];
         if (~[int]~ < 5) {
            ++~[int]~;
         }
      }
---------
for(int var3 = ~[int[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         int var10000 = ~[int[]]~[~[int]~];
         if (~[int]~ < 5) {
            ++~[int]~;
         }
      }
---------
if (~[int]~ < 5) {
            ++~[int]~;
         }
---------
while(true) {
            if (~[int]~ < 5) {
               ++~[int]~;
            }

            if (~[long]~ == ~[long]~) {
               break;
            }

            ++~[long]~;
         }
---------
if (~[int]~ < 5) {
               ++~[int]~;
            }
---------
switch (~[String]~) {
               case "abc":
               case "cde":
               case "efg":
               case "ghi":
            }
---------
if (~[int]~ <= ~[int]~) {
               while(true) {
                  ~[int]~ += ~[int]~;
                  if (~[int]~ == ~[int]~) {
                     break;
                  }

                  ++~[int]~;
               }
            }
---------
while(true) {
                  ~[int]~ += ~[int]~;
                  if (~[int]~ == ~[int]~) {
                     break;
                  }

                  ++~[int]~;
               }
---------
for(int i = 0; ~[int]~ < 11 && ~[int]~ != 6; ++~[int]~) {
         ~[int]~ += ~[int]~;
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            Integer var7 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ -= 2;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var12 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += -2L;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            Character var11 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + -2);
         }
      }
---------
while(true) {
            Integer var7 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ -= 2;
         }
---------
while(true) {
            Long var12 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += -2L;
         }
---------
while(true) {
            Character var11 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + -2);
         }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            ~[ArrayList]~.add(~[int]~);
            if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
               break;
            }

            --~[int]~;
         }
      }
---------
while(true) {
            ~[ArrayList]~.add(~[int]~);
            if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
               break;
            }

            --~[int]~;
         }
---------
if (~[int]~ <= ~[int]~) {
            while(true) {
               ~[ArrayList]~.add(~[int]~);
               if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                  break;
               }

               --~[int]~;
            }
         }
---------
while(true) {
               ~[ArrayList]~.add(~[int]~);
               if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                  break;
               }

               --~[int]~;
            }
---------
if (~[short]~ <= ~[int]~) {
               while(true) {
                  ~[ArrayList]~.add(~[int]~);
                  if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[short]~) {
                     break;
                  }

                  --~[int]~;
               }
            }
---------
while(true) {
                  ~[ArrayList]~.add(~[int]~);
                  if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[short]~) {
                     break;
                  }

                  --~[int]~;
               }
---------
if (~[long]~ <= ~[long]~) {
                  while(true) {
                     ~[ArrayList]~.add(~[long]~);
                     if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                        break;
                     }

                     ~[long]~ += -1L;
                  }
               }
---------
while(true) {
                     ~[ArrayList]~.add(~[long]~);
                     if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                        break;
                     }

                     ~[long]~ += -1L;
                  }
---------
if (~[char]~ <= ~[char]~) {
                     while(true) {
                        ~[ArrayList]~.add(~[char]~);
                        if (~[ArrayList]~.size() > 23 || ~[char]~ == ~[char]~) {
                           break;
                        }

                        ~[char]~ = (char)(~[char]~ + -1);
                     }
                  }
---------
while(true) {
                        ~[ArrayList]~.add(~[char]~);
                        if (~[ArrayList]~.size() > 23 || ~[char]~ == ~[char]~) {
                           break;
                        }

                        ~[char]~ = (char)(~[char]~ + -1);
                     }
---------
if ((~[int]~ & 2) != 0) {
         ~[Object]~ = "a";
      }
---------
if (~[Integer]~ != null) {
            if (~[Integer]~ == ~[byte]~) {
               ~[boolean]~ = true;
               break label17;
            }
         }
---------
if (~[Integer]~ == ~[byte]~) {
               ~[boolean]~ = true;
               break label17;
            }
---------
for(~[char[]]~ = new char[~[int]~]; ~[int]~ < ~[int]~; ++~[int]~) {
         ~[char[]]~[~[int]~] = (Character)~[Function1]~.invoke(~[int]~);
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var6 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += -2L;
         }
      }
---------
while(true) {
            Long var6 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += -2L;
         }
---------
if ((~[int]~ & 1) != 0) {
         ~[String]~ = "Companion";
      }
---------
if ((~[int]~ & 2) != 0) {
         ~[int]~ = 1;
      }
---------
if ((~[int]~ & 4) != 0) {
         ~[long]~ = 2L;
      }
---------
if (0 <= ~[int]~) {
         do {
            int i = ~[int]~--;
            ~[int]~ = ~[int]~ * 10 + ~[int]~ + ~[String]~.charAt(~[int]~) - 48;
         } while(0 <= ~[int]~);
      }
---------
if (5L <= ~[long]~) {
                  do {
                     long i = ~[long]~;
                     ~[long]~ += -1L;
                     ~[ArrayList]~.add(~[long]~);
                  } while(~[ArrayList]~.size() <= 23 && 5L <= ~[long]~);
               }
---------
while(~[Iterator]~.hasNext()) {
         IndexedValue iv = (IndexedValue)~[Iterator]~.next();
         int index = ~[IndexedValue]~.component1();
         char x = (Character)~[IndexedValue]~.component2();
         ~[StringBuilder]~.append("" + ~[int]~ + ":" + ~[char]~ + ";");
      }
---------
for(int var3 = ~[byte[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         int index = ~[int]~;
         byte x = ~[byte[]]~[~[int]~];
         ~[StringBuilder]~.append("" + ~[int]~ + ":" + ~[byte]~ + ";");
      }
---------
for(~[CharSequence]~ = ~[CharSequence]~; ~[int]~ < 100; ++~[int]~) {
         ~[char[]]~[~[int]~] = '1';
      }
---------
while(~[Iterator]~.hasNext()) {
         Object item$iv$iv = ~[Iterator]~.next();
         Pair it = (Pair)~[Object]~;
         int var10 = false;
         ~[Collection]~.add((String)~[Pair]~.getFirst());
      }
---------
for(int var5 = ~[char[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         char element$iv = ~[char[]]~[~[int]~];
         Object p1 = ~[char]~;
         String p0 = ~[Object]~;
         int var9 = false;
         ~[Object]~ = ~[String]~ + ~[Object]~;
      }
---------
if (~[boolean]~) {
               throw new IllegalArgumentException("Collection contains more than one matching element.");
            }
---------
for(~[int]~ = ~[Function0[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         Function0 a = ~[Function0[]]~[~[int]~];
         ~[Function0]~.invoke();
      }
---------
for(Iterator var5 = ~[Iterable]~.iterator(); ~[Iterator]~.hasNext(); ~[int]~ = ~[int]~ + ~[int]~) {
         int element$iv = ((IntIterator)~[Iterator]~).nextInt();
         ~[int]~ = ~[int]~;
         ~[int]~ = ~[int]~;
         int var9 = false;
      }
---------
if ((~[int]~ & 1) != 0) {
         ~[boolean]~ = true;
      }
---------
if ((~[int]~ & 2) != 0) {
         ~[char]~ = 'z';
      }
---------
if ((~[int]~ & 4) != 0) {
         ~[byte]~ = 5;
      }
---------
if ((~[int]~ & 8) != 0) {
         ~[short]~ = -5;
      }
---------
if ((~[int]~ & 16) != 0) {
         ~[int]~ = 2000000000;
      }
---------
if ((~[int]~ & 32) != 0) {
         ~[float]~ = -2.72F;
      }
---------
if ((~[int]~ & 64) != 0) {
         ~[long]~ = 1000000000000000000L;
      }
---------
if ((~[int]~ & 128) != 0) {
         ~[double]~ = 3.14159265359;
      }
---------
for(~[int]~ = ~[Object[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         ~[Object]~ = ~[Object[]]~[~[int]~];
         ~[Object]~ = ~[Object]~;
         ~[boolean]~ = false;
         if (~[Object]~ instanceof Integer) {
            ~[Collection]~.add(~[Object]~);
         }
      }
---------
while(~[Iterator]~.hasNext()) {
         ~[Object]~ = ~[Iterator]~.next();
         ~[Object]~ = ~[Object]~;
         ~[boolean]~ = false;
         if (~[Object]~ == null) {
            throw new NullPointerException("null cannot be cast to non-null type kotlin.Int");
         }

         ~[Collection]~.add((Integer)~[Object]~);
      }
---------
for(~[int]~ = ~[Object[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         ~[Object]~ = ~[Object[]]~[~[int]~];
         ~[Object]~ = ~[Object]~;
         ~[boolean]~ = false;
         if (~[Object]~ instanceof Double) {
            ~[Collection]~.add(~[Object]~);
         }
      }
---------
while(~[Iterator]~.hasNext()) {
         ~[Object]~ = ~[Iterator]~.next();
         ~[Object]~ = ~[Object]~;
         ~[boolean]~ = false;
         if (~[Object]~ == null) {
            throw new NullPointerException("null cannot be cast to non-null type kotlin.Double");
         }

         ~[Collection]~.add((Double)~[Object]~);
      }
---------
for(~[int]~ = ~[Object[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         ~[Object]~ = ~[Object[]]~[~[int]~];
         ~[Object]~ = ~[Object]~;
         ~[boolean]~ = false;
         if (~[Object]~ instanceof String) {
            ~[Collection]~.add(~[Object]~);
         }
      }
---------
while(~[Iterator]~.hasNext()) {
         ~[Object]~ = ~[Iterator]~.next();
         ~[Object]~ = ~[Object]~;
         ~[boolean]~ = false;
         if (~[Object]~ == null) {
            throw new NullPointerException("null cannot be cast to non-null type kotlin.String");
         }

         ~[Collection]~.add((String)~[Object]~);
      }
---------
for(~[int]~ = ~[Object[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         ~[Object]~ = ~[Object[]]~[~[int]~];
         ~[Object]~ = ~[Object]~;
         ~[boolean]~ = false;
         if (~[Object]~ instanceof Object) {
            ~[Collection]~.add(~[Object]~);
         }
      }
---------
while(~[Iterator]~.hasNext()) {
         ~[Object]~ = ~[Iterator]~.next();
         ~[Object]~ = ~[Object]~;
         ~[boolean]~ = false;
         if (~[Object]~ == null) {
            throw new NullPointerException("null cannot be cast to non-null type kotlin.Any");
         }

         ~[Collection]~.add(~[Object]~);
      }
---------
if (~[Object]~ instanceof Object) {
            ~[Collection]~.add(~[Object]~);
         }
---------
if (~[Object]~ instanceof Integer) {
            ~[Collection]~.add(~[Object]~);
         }
---------
if (~[Object]~ == null) {
            throw new NullPointerException("null cannot be cast to non-null type kotlin.Int");
         }
---------
if (~[Object]~ instanceof Double) {
            ~[Collection]~.add(~[Object]~);
         }
---------
if (~[Object]~ == null) {
            throw new NullPointerException("null cannot be cast to non-null type kotlin.Double");
         }
---------
if (~[Object]~ instanceof String) {
            ~[Collection]~.add(~[Object]~);
         }
---------
if (~[Object]~ == null) {
            throw new NullPointerException("null cannot be cast to non-null type kotlin.String");
         }
---------
if (~[Object]~ == null) {
            throw new NullPointerException("null cannot be cast to non-null type kotlin.Any");
         }
---------
for(int var2 = ~[int[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         ~[int]~ += ~[int]~;
      }
---------
if ((~[int]~ & 2) != 0) {
         ~[char]~ = 'K';
      }
---------
if (!(~[Object]~ instanceof Integer)) {
         ~[String]~ = null;
      }
---------
if (
---------
if (!
---------
for(int var5 = ((Object[])~[double[][]]~).length; ~[int]~ < ~[int]~; ++~[int]~) {
         double[] node = ~[double[][]]~[~[int]~];
         int var10002 = ~[double[]]~[0]++;
      }
---------
for(~[Iterator]~ = ~[ArrayList]~.iterator(); ~[Iterator]~.hasNext(); ~[Integer]~ = (Integer)~[Iterator]~.next()) {
      }
---------
while(~[Iterator]~.hasNext()) {
         ~[Iterator]~.next();
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            ~[long]~ = ~[long]~ * (long)10 + ~[long]~;
            if (~[long]~ == ~[long]~) {
               break;
            }

            ++~[long]~;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            ~[int]~ = ~[int]~ * 10 + ~[char]~ - 48;
            if (~[char]~ == ~[char]~) {
               break;
            }

            ++~[char]~;
         }
      }
---------
while(true) {
            ~[long]~ = ~[long]~ * (long)10 + ~[long]~;
            if (~[long]~ == ~[long]~) {
               break;
            }

            ++~[long]~;
         }
---------
while(true) {
            ~[int]~ = ~[int]~ * 10 + ~[char]~ - 48;
            if (~[char]~ == ~[char]~) {
               break;
            }

            ++~[char]~;
         }
---------
for(int var3 = ~[List]~.size(); ~[int]~ < ~[int]~ && ~[int]~ <= 1; ++~[int]~) {
         ~[String]~ = ~[String]~ + ~[List]~.get(~[int]~);
      }
---------
if (~[long]~ <= 9L) {
                                    while(true) {
                                       ~[ArrayList]~.add(~[long]~);
                                       if (~[ArrayList]~.size() > 23 || ~[long]~ == 9L) {
                                          break;
                                       }

                                       ++~[long]~;
                                    }
                                 }
---------
while(true) {
                                       ~[ArrayList]~.add(~[long]~);
                                       if (~[ArrayList]~.size() > 23 || ~[long]~ == 9L) {
                                          break;
                                       }

                                       ++~[long]~;
                                    }
---------
if (~[ArrayList]~.size() > 23 || ~[long]~ == 9L) {
                                          break;
                                       }
---------
for(long i = 1L; ~[long]~ < 5L; ++~[long]~) {
         ~[int]~ = ~[int]~ * 10 + (int)~[long]~;
      }
---------
for(long var1 = 1L; ~[long]~ < 5L; ++~[long]~) {
         long i = ~[long]~;
         ~[int]~ = ~[int]~ * 10 + (int)~[long]~;
      }
---------
for(int i = 1; ~[int]~ < 3; ++~[int]~) {
      }
---------
while(~[Iterator]~.hasNext()) {
         Object element$iv$iv = ~[Iterator]~.next();
         ~[int]~ = ((Number)~[Object]~).intValue();
         ~[boolean]~ = false;
         if (~[int]~ % 2 == 0) {
            ~[Collection]~.add(~[Object]~);
         }
      }
---------
while(~[Iterator]~.hasNext()) {
         ~[int]~ = ((IntIterator)~[Iterator]~).nextInt();
         ~[boolean]~ = false;
         ~[Collection]~.add(2 * ~[int]~);
      }
---------
while(~[Iterator]~.hasNext()) {
         int item$iv$iv = ((IntIterator)~[Iterator]~).nextInt();
         ~[boolean]~ = false;
         ~[Collection]~.add(2 * ~[int]~);
      }
---------
while(~[Iterator]~.hasNext()) {
         Object element$iv$iv = ~[Iterator]~.next();
         int x = ((Number)~[Object]~).intValue();
         ~[boolean]~ = false;
         if (~[int]~ % 2 == 0) {
            ~[Collection]~.add(~[Object]~);
         }
      }
---------
while(~[Iterator]~.hasNext()) {
         Object element$iv$iv = ~[Iterator]~.next();
         ~[long]~ = ((Number)~[Object]~).longValue();
         ~[boolean]~ = false;
         if (~[long]~ % (long)2 == 0L) {
            ~[Collection]~.add(~[Object]~);
         }
      }
---------
while(~[Iterator]~.hasNext()) {
         ~[long]~ = ((LongIterator)~[Iterator]~).nextLong();
         ~[long]~ = ~[long]~;
         int var19 = false;
         ~[Collection]~.add((long)2 * ~[long]~);
      }
---------
while(~[Iterator]~.hasNext()) {
         ~[long]~ = ((LongIterator)~[Iterator]~).nextLong();
         ~[boolean]~ = false;
         ~[Collection]~.add((long)2 * ~[long]~);
      }
---------
if (~[int]~ % 2 == 0) {
            ~[Collection]~.add(~[Object]~);
         }
---------
if (~[long]~ % (long)2 == 0L) {
            ~[Collection]~.add(~[Object]~);
         }
---------
for(~[int]~ = ((IntIterator)~[Iterator]~).nextInt(); ~[Iterator]~.hasNext(); ~[int]~ += ~[int]~) {
            ~[int]~ = ((IntIterator)~[Iterator]~).nextInt();
            ~[boolean]~ = false;
         }
---------
for(~[int]~ = ((LongIterator)~[Iterator]~).nextLong(); ~[Iterator]~.hasNext(); ~[int]~ += ~[int]~) {
               ~[int]~ = ((LongIterator)~[Iterator]~).nextLong();
               int var22 = false;
            }
---------
for(int var3 = ~[String]~.length(); ~[int]~ < ~[int]~; ++~[int]~) {
         Character c = ~[String]~.charAt(~[int]~);
         String var10000 = ~[String]~ + ~[Character]~;
         if (~[String]~ == null) {
            ~[String]~ = "?";
         }

         ~[String]~ = ~[String]~;
      }
---------
if (~[String]~ == null) {
            ~[String]~ = "?";
         }
---------
if (~[String]~ == null) {
         ~[String]~ = "";
      }
---------
switch (~[int]~ % 4 * 100) {
         case 100:
            ~[byte]~ = 1;
            break;
         case 200:
            ~[byte]~ = 2;
            break;
         case 300:
            ~[byte]~ = 3;
            break;
         default:
            ~[byte]~ = 4;
      }
---------
for(int var3 = ~[String]~.length(); ~[int]~ < ~[int]~; ++~[int]~) {
         int i = ~[int]~;
         ~[String]~.charAt(~[int]~);
         ~[StringBuilder]~.append("" + ~[int]~ + ";");
      }
---------
for(int var3 = 0; ~[Iterator]~.hasNext(); ~[String]~ = ~[String]~ + ~[int]~ + ":" + ~[String]~ + ";") {
         ~[int]~ = ~[int]~++;
         ~[String]~ = (String)~[Iterator]~.next();
         if (~[int]~ > 1) {
            break;
         }
      }
---------
if (~[int]~ > 1) {
            break;
         }
---------
if (3L <= ~[long]~) {
                     do {
                        long i = ~[long]~;
                        ~[long]~ += -1L;
                        ~[ArrayList]~.add(~[long]~);
                     } while(~[ArrayList]~.size() <= 23 && 3L <= ~[long]~);
                  }
---------
if (~[int]~ > 0 && ~[int]~ <= ~[int]~ || ~[int]~ < 0 && ~[int]~ <= ~[int]~) {
            while(true) {
               Integer var10 = ~[int]~;
               ((Collection)~[List]~).add(~[Integer]~);
               if (~[int]~ == ~[int]~) {
                  break;
               }

               ~[int]~ += ~[int]~;
            }
         }
---------
while(true) {
               Integer var10 = ~[int]~;
               ((Collection)~[List]~).add(~[Integer]~);
               if (~[int]~ == ~[int]~) {
                  break;
               }

               ~[int]~ += ~[int]~;
            }
---------
if (~[long]~ <= 0L) {
               ~[long]~ = -~[long]~;
            }
---------
if (~[long]~ > 0L && ~[long]~ <= ~[long]~ || ~[long]~ < 0L && ~[long]~ <= ~[long]~) {
               while(true) {
                  Long var18 = ~[long]~;
                  ((Collection)~[List]~).add(~[Long]~);
                  if (~[long]~ == ~[long]~) {
                     break;
                  }

                  ~[long]~ += ~[long]~;
               }
            }
---------
while(true) {
                  Long var18 = ~[long]~;
                  ((Collection)~[List]~).add(~[Long]~);
                  if (~[long]~ == ~[long]~) {
                     break;
                  }

                  ~[long]~ += ~[long]~;
               }
---------
if (~[int]~ <= 0) {
                  ~[int]~ = -~[int]~;
               }
---------
if (~[int]~ > 0 && ~[char]~ <= ~[char]~ || ~[int]~ < 0 && ~[char]~ <= ~[char]~) {
                  while(true) {
                     Character var34 = ~[char]~;
                     ((Collection)~[List]~).add(~[Character]~);
                     if (~[char]~ == ~[char]~) {
                        break;
                     }

                     ~[char]~ = (char)(~[char]~ + ~[int]~);
                  }
               }
---------
while(true) {
                     Character var34 = ~[char]~;
                     ((Collection)~[List]~).add(~[Character]~);
                     if (~[char]~ == ~[char]~) {
                        break;
                     }

                     ~[char]~ = (char)(~[char]~ + ~[int]~);
                  }
---------
while(true) {
         if (~[int]~ >= ~[int]~) {
            ~[boolean]~ = false;
            break;
         }

         Object element$iv = ~[Object[]]~[~[int]~];
         boolean it = ~[Object]~;
         int var6 = false;
         if (~[boolean]~) {
            ~[boolean]~ = true;
            break;
         }

         ++~[int]~;
      }
---------
if (~[boolean]~) {
            ~[boolean]~ = true;
            break;
         }
---------
for(~[Object[]]~ = new Object[1]; ~[int]~ < 1; ++~[int]~) {
         ~[Object[]]~[~[int]~] = new Object();
      }
---------
for(int var9 = ~[Object[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         Object item$iv$iv = ~[KCallable[]]~[~[int]~];
         KCallable it = (KCallable)~[Object]~;
         int var12 = false;
         ~[Collection]~.add(~[KCallable]~.getReturnType());
      }
---------
while(~[Iterator]~.hasNext()) {
         Object item$iv$iv = ~[Iterator]~.next();
         KType it = (KType)~[Object]~;
         int var18 = false;
         KClassifier var10000 = ~[KType]~.getClassifier();
         if (~[KClassifier]~ == null) {
            throw new NullPointerException("null cannot be cast to non-null type kotlin.reflect.KClass<*>");
         }

         ~[Collection]~.add((KClass)~[KClassifier]~);
      }
---------
while(~[Iterator]~.hasNext()) {
         Object item$iv$iv = ~[Iterator]~.next();
         KType it = (KType)~[Object]~;
         int var18 = false;
         KClassifier var19 = ~[KType]~.getClassifier();
         if (~[KClassifier]~ == null) {
            throw new NullPointerException("null cannot be cast to non-null type kotlin.reflect.KClass<*>");
         }

         ~[Collection]~.add((KClass)~[KClassifier]~);
      }
---------
for(~[int]~ = ~[Object[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         ~[KCallable]~ = ~[KCallable[]]~[~[int]~];
         ~[KCallable]~ = ~[KCallable]~;
         ~[boolean]~ = false;
         ~[Collection]~.add(~[KCallable]~.getReturnType());
      }
---------
while(~[Iterator]~.hasNext()) {
         ~[Object]~ = ~[Iterator]~.next();
         ~[KType]~ = (KType)~[Object]~;
         ~[boolean]~ = false;
         ~[KClassifier]~ = ~[KType]~.getClassifier();
         if (~[KClassifier]~ == null) {
            throw new NullPointerException("null cannot be cast to non-null type kotlin.reflect.KClass<*>");
         }

         ~[Collection]~.add((KClass)~[KClassifier]~);
      }
---------
for(~[int]~ = ~[Iterable]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         ~[Object]~ = ~[KCallable[]]~[~[int]~];
         ~[KType]~ = ~[Object]~;
         ~[boolean]~ = false;
         ~[Collection]~.add(~[KType]~.getReturnType());
      }
---------
if ((~[int]~ & 1) != 0) {
         ~[Throwable]~ = null;
      }
---------
if ((~[int]~ & 2) != 0) {
         ~[boolean]~ = true;
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            ~[ArrayList]~.add(~[int]~);
            if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += 3;
         }
      }
---------
while(true) {
            ~[ArrayList]~.add(~[int]~);
            if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += 3;
         }
---------
if (~[int]~ <= ~[int]~) {
            while(true) {
               ~[ArrayList]~.add(~[int]~);
               if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                  break;
               }

               ~[int]~ += 3;
            }
         }
---------
while(true) {
               ~[ArrayList]~.add(~[int]~);
               if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                  break;
               }

               ~[int]~ += 3;
            }
---------
if (~[int]~ <= ~[int]~) {
               while(true) {
                  ~[ArrayList]~.add(~[int]~);
                  if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                     break;
                  }

                  ~[int]~ += 3;
               }
            }
---------
while(true) {
                  ~[ArrayList]~.add(~[int]~);
                  if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                     break;
                  }

                  ~[int]~ += 3;
               }
---------
if (~[long]~ <= ~[long]~) {
                  while(true) {
                     ~[ArrayList]~.add(~[long]~);
                     if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                        break;
                     }

                     ~[long]~ += 3L;
                  }
               }
---------
while(true) {
                     ~[ArrayList]~.add(~[long]~);
                     if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                        break;
                     }

                     ~[long]~ += 3L;
                  }
---------
if (~[char]~ <= ~[char]~) {
                     while(true) {
                        ~[ArrayList]~.add(~[char]~);
                        if (~[ArrayList]~.size() > 23 || ~[char]~ == ~[char]~) {
                           break;
                        }

                        ~[char]~ = (char)(~[char]~ + 3);
                     }
                  }
---------
while(true) {
                        ~[ArrayList]~.add(~[char]~);
                        if (~[ArrayList]~.size() > 23 || ~[char]~ == ~[char]~) {
                           break;
                        }

                        ~[char]~ = (char)(~[char]~ + 3);
                     }
---------
if (~[boolean]~) {
               throw new IllegalArgumentException("Array contains more than one matching element.");
            }
---------
while(true) {
            int i = ~[int]~;
            ~[int]~ = ~[int]~ * 10 + ~[int]~;
            if (~[int]~ == ~[int]~) {
               break;
            }

            ++~[int]~;
         }
---------
for(Iterator var4 = ~[Iterable]~.iterator(); ~[Iterator]~.hasNext(); ~[int]~ += ~[int]~) {
         Object var5 = ~[Iterator]~.next();
         ~[int]~ = ((Number)~[Object]~).intValue();
         int var7 = false;
         int var8 = false;
      }
---------
if ((~[int]~ & 2) != 0) {
         ~[int]~ = 0;
      }
---------
if (~[long]~ <= 4L) {
         do {
            long i = ~[long]~++;
            ~[long]~ = ~[long]~ * (long)10 + ~[long]~;
         } while(~[long]~ <= 4L);
      }
---------
for(int i = 3; ~[int]~ < 10; ++~[int]~) {
         ~[ArrayList]~.add(~[int]~);
         if (~[ArrayList]~.size() > 23) {
            break;
         }
      }
---------
for(long i = 3L; ~[long]~ < 10L; ++~[long]~) {
                              ~[ArrayList]~.add(~[long]~);
                              if (~[ArrayList]~.size() > 23) {
                                 break;
                              }
                           }
---------
for(char i = 'c'; ~[char]~ < 'h'; ++~[char]~) {
                                 ~[ArrayList]~.add(~[char]~);
                                 if (~[ArrayList]~.size() > 23) {
                                    break;
                                 }
                              }
---------
if (~[ArrayList]~.size() > 3) {
            break;
         }
---------
for(int i = ((Number)~[Object]~).intValue(); ~[int]~ < 4; ++~[int]~) {
         ~[StringBuilder]~.append(~[int]~);
      }
---------
if ((~[int]~ & 1) != 0) {
         ~[byte]~ = 1;
      }
---------
if ((~[int]~ & 2) != 0) {
         ~[short]~ = 1;
      }
---------
if ((~[int]~ & 4) != 0) {
         ~[int]~ = 1;
      }
---------
if ((~[int]~ & 8) != 0) {
         ~[long]~ = 1L;
      }
---------
if (~[String]~ != null) {
               String var6 = ~[String]~;
               ~[Map]~.put(~[String]~, ~[String]~);
            }
---------
while(~[Iterator]~.hasNext()) {
         int i = ~[int]~++;
         String x = (String)~[Iterator]~.next();
         if (~[int]~ % 2 != 0) {
            ~[String]~ = ~[String]~ + ~[int]~ + ":" + ~[String]~ + ";";
         }
      }
---------
if (~[int]~ % 2 != 0) {
            ~[String]~ = ~[String]~ + ~[int]~ + ":" + ~[String]~ + ";";
         }
---------
if (~[PrintStream]~ != null) {
         ~[PrintStream]~.println("fun escapeChar(c : Char) : String? = when (c) {");
      }
---------
if (~[PrintStream]~ != null) {
         ~[PrintStream]~.println("  '\\\\' => \"\\\\\\\\\"");
      }
---------
if (~[PrintStream]~ != null) {
         ~[PrintStream]~.println("  '\\n' => \"\\\\n\"");
      }
---------
if (~[PrintStream]~ != null) {
         ~[PrintStream]~.println("  '\"'  => \"\\\\\\\"\"");
      }
---------
if (~[PrintStream]~ != null) {
         ~[PrintStream]~.println("  else => String.valueOf(c)");
      }
---------
if (~[PrintStream]~ != null) {
         ~[PrintStream]~.println("}");
      }
---------
if (~[PrintStream]~ != null) {
         ~[PrintStream]~.println();
      }
---------
if (~[PrintStream]~ != null) {
         ~[PrintStream]~.println("fun String.escape(i : Int = 0, result : String = \"\") : String =");
      }
---------
if (~[PrintStream]~ != null) {
         ~[PrintStream]~.println("  if (i == length) result");
      }
---------
if (~[PrintStream]~ != null) {
         ~[PrintStream]~.println("  else escape(i + 1, result + escapeChar(this.get(i)))");
      }
---------
if (~[PrintStream]~ != null) {
         ~[PrintStream]~.println("fun main(args : Array<String>) {");
      }
---------
if (~[PrintStream]~ != null) {
         ~[PrintStream]~.println(~[String]~);
      }
---------
if (~[Integer]~ != null) {
            if (~[Integer]~ == ~[byte]~) {
               ~[boolean]~ = false;
               break label17;
            }
         }
---------
if (~[Integer]~ == ~[byte]~) {
               ~[boolean]~ = false;
               break label17;
            }
---------
if ((~[int]~ & 4) != 0) {
         ~[String]~ = "OK";
      }
---------
for(int var3 = ~[short[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         int index = ~[int]~;
         short x = ~[short[]]~[~[int]~];
         ~[StringBuilder]~.append("" + ~[int]~ + ":" + ~[short]~ + ";");
      }
---------
if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                     break;
                  }
---------
for(int var4 = ~[int[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
            if (~[int]~ != ~[int]~ && ~[int[]]~[~[int]~] == ~[int[]]~[~[int]~]) {
               continue label25;
            }
         }
---------
if (~[int]~ != ~[int]~ && ~[int[]]~[~[int]~] == ~[int[]]~[~[int]~]) {
               continue label25;
            }
---------
for(int var4 = ~[int[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
            int index = ~[int]~;
            int x = ~[int[]]~[~[int]~];
            ~[StringBuilder]~.append("" + ~[int]~ + ":" + ~[int]~ + ";");
         }
---------
for(long i = 4L; 0L < ~[long]~; ~[long]~ += -1L) {
         ~[long]~ = ~[long]~ * 10L + ~[long]~;
      }
---------
if (~[int]~ <= 8) {
         while(true) {
            Integer var4 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == 8) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
      }
---------
if (~[long]~ <= 8L) {
         while(true) {
            Long var7 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == 8L) {
               break;
            }

            ~[long]~ += ~[long]~;
         }
      }
---------
if (~[char]~ <= 'h') {
         while(true) {
            Character var6 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == 'h') {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
      }
---------
while(true) {
            Integer var4 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == 8) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
---------
while(true) {
            Long var7 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == 8L) {
               break;
            }

            ~[long]~ += ~[long]~;
         }
---------
while(true) {
            Character var6 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == 'h') {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
---------
if (~[int]~ == 8) {
               break;
            }
---------
if (~[long]~ == 8L) {
               break;
            }
---------
if (~[char]~ == 'h') {
               break;
            }
---------
switch (~[int]~) {
         case 1:
         case 2:
            ~[short]~ = 1001;
            break;
         case 3:
            ~[short]~ = 1005;
            break;
         default:
            ~[short]~ = 1006;
      }
---------
for(Object var3 = ~[Object]~; ~[int]~ >= 100000 || ~[Object]~.equals("a"); ~[Object]~ = "a") {
         if (~[int]~ <= 0) {
            return;
         }

         --~[int]~;
      }
---------
if ((~[int]~ & 1) != 0) {
         char[] var3 = new char[]{'O', 'K'};
         ~[char[]]~ = ~[char[]]~;
      }
---------
while(~[ArrayList]~.size() != 0) {
      }
---------
while(~[Iterator]~.hasNext()) {
            Object item$iv$iv = ~[Iterator]~.next();
            Object p0 = ~[Object]~;
            int var18 = false;
            ~[Collection]~.add(~[Object]~.toString());
         }
---------
for(~[String[][]]~ = new String[1][]; ~[int]~ < 1; ++~[int]~) {
         ~[int]~ = ~[int]~;
         ~[int]~ = 0;

         String[] var6;
         for(~[String[]]~ = new String[1]; ~[int]~ < 1; ++~[int]~) {
            int y = ~[int]~;
            ~[int]~ = ~[int]~;
            int var12 = false;
            String var18 = "" + ~[int]~ + "-" + ~[int]~;
            ~[String[]]~[~[int]~] = ~[String]~;
         }

         ~[String[][]]~[~[int]~] = ~[String[]]~;
      }
---------
for(~[Object[]]~ = new Object[1]; ~[int]~ < 1; ++~[int]~) {
            ~[Object[]]~[~[int]~] = ~[Function2]~.invoke(~[int]~, ~[int]~);
         }
---------
for(~[String[]]~ = new String[1]; ~[int]~ < 1; ++~[int]~) {
            int y = ~[int]~;
            ~[int]~ = ~[int]~;
            int var12 = false;
            String var18 = "" + ~[int]~ + "-" + ~[int]~;
            ~[String[]]~[~[int]~] = ~[String]~;
         }
---------
for(~[String[][][]]~ = new String[1][][]; ~[int]~ < 1; ++~[int]~) {
            ~[int]~ = ~[int]~;
            ~[int]~ = 0;

            String[][] var7;
            for(~[String[][]]~ = new String[1][]; ~[int]~ < 1; ++~[int]~) {
               ~[int]~ = ~[int]~;
               int var13 = false;
               String[] var14 = new String[]{"" + ~[int]~ + "-" + ~[int]~};
               ~[String[][]]~[~[int]~] = ~[String[]]~;
            }

            ~[String[][][]]~[~[int]~] = ~[String[][]]~;
         }
---------
for(~[String[][]]~ = new String[1][]; ~[int]~ < 1; ++~[int]~) {
               ~[int]~ = ~[int]~;
               int var13 = false;
               String[] var14 = new String[]{"" + ~[int]~ + "-" + ~[int]~};
               ~[String[][]]~[~[int]~] = ~[String[]]~;
            }
---------
for(~[int[][][]]~ = new int[1][][]; ~[int]~ < 1; ++~[int]~) {
               ~[int]~ = ~[int]~;
               int var27 = 0;

               int[][] var8;
               for(~[int[][]]~ = new int[1][]; ~[int]~ < 1; ++~[int]~) {
                  int var30 = false;
                  int[] var15 = new int[]{~[int]~ + ~[int]~ + 1};
                  ~[int[][]]~[~[int]~] = ~[int[]]~;
               }

               ~[int[][][]]~[~[int]~] = ~[int[][]]~;
            }
---------
for(~[int[][]]~ = new int[1][]; ~[int]~ < 1; ++~[int]~) {
                  int var30 = false;
                  int[] var15 = new int[]{~[int]~ + ~[int]~ + 1};
                  ~[int[][]]~[~[int]~] = ~[int[]]~;
               }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            ~[long]~ = ~[long]~ * (long)10 + ~[long]~;
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += -1L;
         }
      }
---------
if (~[char]~ <= ~[char]~) {
         while(true) {
            ~[int]~ = ~[int]~ * 10 + ~[char]~ - 48;
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + -1);
         }
      }
---------
while(true) {
            ~[long]~ = ~[long]~ * (long)10 + ~[long]~;
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += -1L;
         }
---------
while(true) {
            ~[int]~ = ~[int]~ * 10 + ~[char]~ - 48;
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + -1);
         }
---------
if (4 <= ~[int]~) {
         do {
            int i = ~[int]~++;
            int v = ~[int]~;
            ~[int]~ -= 2;
            Integer var6 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            ~[Integer]~ = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
         } while(4 <= ~[int]~);
      }
---------
for(~[Boolean[]]~ = new Boolean[1]; ~[int]~ < 1; ++~[int]~) {
         ~[Boolean[]]~[~[int]~] = true;
      }
---------
for(~[int[]]~ = new int[1]; ~[int]~ < 1; ++~[int]~) {
            ~[int[]]~[~[int]~] = 42;
         }
---------
for(~[Integer[]]~ = new Integer[1]; ~[int]~ < 1; ++~[int]~) {
               ~[Integer[]]~[~[int]~] = 42;
            }
---------
while(true) {
            int i = ~[int]~;
            ~[int]~ = ~[int]~ * 10 + ~[int]~;
            if (~[int]~ == ~[byte]~) {
               break;
            }

            --~[int]~;
         }
---------
while(true) {
            long i = ~[long]~;
            ~[int]~ = ~[int]~ * 10 + (int)~[long]~;
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += -1L;
         }
---------
for(int var2 = "239".length(); ~[int]~ < ~[int]~; ++~[int]~) {
         char c = "239".charAt(~[int]~);
         ~[int]~ += ~[char]~ - 48;
      }
---------
if (~[Object]~ == null) {
            throw new NullPointerException("null cannot be cast to non-null type kotlin.Array<kotlin.Any?>");
         }
---------
while(~[IntIterator]~.hasNext()) {
         int c = ~[IntIterator]~.nextInt();
         ~[ArrayList]~.add(~[int]~);
      }
---------
if (!~[Iterator]~.hasNext()) {
            throw new NoSuchElementException("Collection contains no element matching the predicate.");
         }
---------
if (~[String]~ == null) {
         ~[String]~ = "OK";
      }
---------
if (0 <= ~[int]~) {
         do {
            int i = ~[int]~--;
            ~[int]~ = ~[int]~ * 10 + ~[int]~ + ~[int[]]~[~[int]~];
         } while(0 <= ~[int]~);
      }
---------
for(int var4 = ~[String[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         final String t = ~[String[]]~[~[int]~];
         if (~[Object]~ == null) {
            ~[Object]~ = new C();
         }

         C c = (~[Object]~.new D()).copyOuter();
         ~[String]~ = ~[String]~ + ~[C]~.getY();
      }
---------
while(~[Iterator]~.hasNext()) {
         IndexedValue iv = (IndexedValue)~[Iterator]~.next();
         int i = ~[IndexedValue]~.component1();
         String x = (String)~[IndexedValue]~.component2();
         ~[StringBuilder]~.append("" + ~[int]~ + ":" + ~[String]~ + ";");
      }
---------
for(int var3 = 0; ~[int]~ < ~[StringBuilder]~.length(); ++~[int]~) {
         char c = ~[StringBuilder]~.charAt(~[int]~);
         if (~[int]~ % 2 == 0) {
            ~[StringBuilder]~.append('x');
         }

         ++~[int]~;
         ~[StringBuilder]~.append(~[char]~);
      }
---------
if (~[int]~ % 2 == 0) {
            ~[StringBuilder]~.append('x');
         }
---------
for(~[Function0[]]~ = new Function0[1]; ~[int]~ < 1; ++~[int]~) {
         ~[Function0[]]~[~[int]~] = (Function0)null.INSTANCE;
      }
---------
while(~[Iterator]~.hasNext()) {
         Object item$iv$iv = ~[Iterator]~.next();
         Function0 it = (Function0)~[Object]~;
         int var9 = false;
         ~[Collection]~.add(((Number)~[Function0]~.invoke()).intValue());
      }
---------
for(int var3 = 0; ~[int]~ < ~[int]~; ++~[int]~) {
         ~[ReadLock]~.unlock();
      }
---------
for(int var39 = 0; ~[int]~ < ~[int]~; ++~[int]~) {
            ~[ReadLock]~.lock();
         }
---------
for(int var10 = 0; ~[int]~ < ~[int]~; ++~[int]~) {
               ~[ReadLock]~.unlock();
            }
---------
for(Iterator var44 = ~[Iterable]~.iterator(); ~[Iterator]~.hasNext(); ~[boolean]~ = false) {
               Object element$iv = ~[Iterator]~.next();
               ~[String]~ = (String)~[Object]~;
            }
---------
while(~[Iterator]~.hasNext()) {
               Object item$iv$iv = ~[Iterator]~.next();
               String it = (String)~[Object]~;
               int var16 = false;
               ~[Collection]~.add(~[String]~);
            }
---------
for(int var12 = 0; ~[int]~ < ~[int]~; ++~[int]~) {
                  ~[ReadLock]~.lock();
               }
---------
if (~[List]~ != null) {
         List it = ~[List]~;
         ~[boolean]~ = false;
         ~[List]~ = !~[List]~.contains((Object)null) ? ~[List]~ : null;
      } else {
         ~[List]~ = null;
      }
---------
if (~[List]~ != null) {
         Collection $this$toTypedArray$iv = (Collection)~[List]~;
         ~[boolean]~ = false;
         Collection thisCollection$iv = ~[Collection]~;
         ~[Object[]]~ = ~[Collection]~.toArray(new Object[0]);
         if (~[Object[]]~ == null) {
            throw new NullPointerException("null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");
         }
      } else {
         ~[Object[]]~ = null;
      }
---------
if (~[Object[]]~ == null) {
            throw new NullPointerException("null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");
         }
---------
if ((~[int]~ & 2) != 0) {
         ~[double]~ = 1.0;
      }
---------
if (~[String]~ == null) {
            break;
         }
---------
while(~[int]~ > 0) {
         --~[int]~;
         if (~[int]~ > 2) {
            ~[int]~ += ~[int]~;
         }
      }
---------
if (~[int]~ > 2) {
            ~[int]~ += ~[int]~;
         }
---------
for(int var7 = ~[Integer[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
            Integer v = ~[Integer[]]~[~[int]~];
            ((Collection)~[List]~).add(~[Integer]~);
         }
---------
for(~[Integer]~ = ~[Integer]~; ~[int]~ < 1; ++~[int]~) {
         ~[String[]]~[~[int]~] = "OK";
      }
---------
for(int var3 = ~[int...]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         int arg = ~[int...]~[~[int]~];
         ~[int]~ += ~[int]~;
      }
---------
for(~[int[]]~ = new int[~[int]~]; ~[int]~ < ~[int]~; ++~[int]~) {
         ~[int[]]~[~[int]~] = ~[Number...]~[~[int]~].intValue();
      }
---------
for(int i = 0; ~[int]~ < 2; ++~[int]~) {
         boolean var1 = true;
      }
---------
for(int j = 10; 0 < ~[int]~; --~[int]~) {
         }
---------
for(int j = 10; 0 < ~[int]~; --~[int]~) {
            }
---------
for(byte var2 = 1; ~[int]~ != ~[byte]~; --~[int]~) {
            }
---------
if ((~[int]~ & 2) != 0) {
         ~[long]~ = 42L;
      }
---------
if ((~[int]~ & 1) != 0) {
         ~[String]~ = "OK";
      }
---------
for(Iterator var5 = ~[Iterable]~.iterator(); ~[Iterator]~.hasNext(); ~[int]~ = ~[int]~ + ~[byte]~) {
         Object element$iv = ~[Iterator]~.next();
         ~[byte]~ = ((Number)~[Object]~).byteValue();
         ~[int]~ = ~[int]~;
         int var9 = false;
      }
---------
if ((~[int]~ & 2) != 0) {
         ~[String]~ = "2";
      }
---------
if ((~[int]~ & 4) != 0) {
         ~[double]~ = 3.0;
      }
---------
if ((~[int]~ & 8) != 0) {
         ~[char]~ = '4';
      }
---------
if (~[int]~ > 0 && ~[int]~ <= ~[int]~ || ~[int]~ < 0 && ~[int]~ <= ~[int]~) {
                     while(true) {
                        ~[ArrayList]~.add(~[int]~);
                        if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                           break;
                        }

                        ~[int]~ += ~[int]~;
                     }
                  }
---------
while(true) {
                        ~[ArrayList]~.add(~[int]~);
                        if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                           break;
                        }

                        ~[int]~ += ~[int]~;
                     }
---------
if (~[int]~ > 0 && ~[int]~ <= ~[int]~ || ~[int]~ < 0 && ~[int]~ <= ~[int]~) {
                        while(true) {
                           ~[ArrayList]~.add(~[int]~);
                           if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                              break;
                           }

                           ~[int]~ += ~[int]~;
                        }
                     }
---------
while(true) {
                           ~[ArrayList]~.add(~[int]~);
                           if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                              break;
                           }

                           ~[int]~ += ~[int]~;
                        }
---------
if (~[int]~ > 0 && ~[int]~ <= ~[int]~ || ~[int]~ < 0 && ~[int]~ <= ~[int]~) {
                           while(true) {
                              ~[ArrayList]~.add(~[int]~);
                              if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                                 break;
                              }

                              ~[int]~ += ~[int]~;
                           }
                        }
---------
while(true) {
                              ~[ArrayList]~.add(~[int]~);
                              if (~[ArrayList]~.size() > 23 || ~[int]~ == ~[int]~) {
                                 break;
                              }

                              ~[int]~ += ~[int]~;
                           }
---------
if (~[long]~ > 0L && ~[long]~ <= ~[long]~ || ~[long]~ < 0L && ~[long]~ <= ~[long]~) {
                              while(true) {
                                 ~[ArrayList]~.add(~[long]~);
                                 if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                                    break;
                                 }

                                 ~[long]~ += ~[long]~;
                              }
                           }
---------
while(true) {
                                 ~[ArrayList]~.add(~[long]~);
                                 if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                                    break;
                                 }

                                 ~[long]~ += ~[long]~;
                              }
---------
for(Iterator var6 = ~[Iterable]~.iterator(); ~[Iterator]~.hasNext(); ~[Object]~ = ~[String]~ + ~[String]~) {
         Object element$iv = ~[Iterator]~.next();
         ~[String]~ = (String)~[Object]~;
         ~[String]~ = ~[Object]~;
         int var10 = false;
      }
---------
for(int i = 0; ~[int]~ < 1; ++~[int]~) {
      }
---------
for(int var6 = ~[String]~.length(); ~[int]~ < ~[int]~; ++~[int]~) {
         char ch = ~[String]~.charAt(~[int]~);
         ~[String]~ = ~[String]~ + ~[char]~;
         ~[String]~ = "";
      }
---------
for(long i = 1L; ~[long]~ < 5L; ++~[long]~) {
         ~[long]~ = ~[long]~ * (long)10 + ~[long]~;
      }
---------
if (~[long]~ <= 4L) {
         while(true) {
            ~[long]~ = ~[long]~ * (long)10 + ~[long]~;
            if (~[long]~ == 4L) {
               break;
            }

            ++~[long]~;
         }
      }
---------
while(true) {
            ~[long]~ = ~[long]~ * (long)10 + ~[long]~;
            if (~[long]~ == 4L) {
               break;
            }

            ++~[long]~;
         }
---------
if (~[long]~ == 4L) {
               break;
            }
---------
if (~[Integer]~ != null) {
         ~[int]~ = ~[Integer]~ + 1;
      }
---------
if (~[Integer]~ != null) {
         ~[int]~ = ~[Integer]~ + 1;
         if (~[Object]~ instanceof String) {
            ((String)~[Object]~).charAt(0);
         }
      }
---------
if (~[Object]~ instanceof String) {
            ((String)~[Object]~).charAt(0);
         }
---------
for(int var3 = ~[List]~.size(); ~[int]~ < ~[int]~; ++~[int]~) {
         ~[String]~ = ~[String]~ + ~[List]~.get(~[int]~);
      }
---------
for(~[double[][]]~ = new double[2][]; ~[int]~ < 2; ++~[int]~) {
         ~[double[][]]~[~[int]~] = new double[3];
      }
---------
for(~[int]~ = 1; ~[int]~ < 2; ++~[int]~) {
         for(int j = 0; ~[int]~ < 3; ++~[int]~) {
            double[] var3 = ~[double[][]]~[~[int]~];
            ~[double[]]~[~[int]~] += ~[double[][]]~[~[int]~ - 1][~[int]~];
         }
      }
---------
for(int j = 0; ~[int]~ < 3; ++~[int]~) {
            double[] var3 = ~[double[][]]~[~[int]~];
            ~[double[]]~[~[int]~] += ~[double[][]]~[~[int]~ - 1][~[int]~];
         }
---------
for(int var3 = ~[int[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         int index = ~[int]~;
         int x = ~[int[]]~[~[int]~];
         ~[StringBuilder]~.append("" + ~[int]~ + ":" + ~[int]~ + ";");
      }
---------
if (~[int]~ <= ~[int]~) {
         while(true) {
            Integer var5 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
      }
---------
if (~[long]~ <= ~[long]~) {
         while(true) {
            Long var9 = ~[long]~;
            ((Collection)~[List]~).add(~[Long]~);
            if (~[long]~ == ~[long]~) {
               break;
            }

            ~[long]~ += ~[long]~;
         }
      }
---------
while(true) {
            Integer var5 = ~[int]~;
            ((Collection)~[List]~).add(~[Integer]~);
            if (~[int]~ == ~[int]~) {
               break;
            }

            ~[int]~ += ~[int]~;
         }
---------
if ((~[int]~ & 1) != 0) {
               ~[String]~ = "OK";
            }
---------
if ((~[int]~ & 1) != 0) {
               ~[String]~ = ~[C]~.s;
            }
---------
if (9 <= ~[IntRange]~.getLast() && ~[int]~ <= 9) {
      }
---------
if ('9' <= ~[CharRange]~.getLast() && ~[char]~ <= '9') {
      }
---------
if (~[long]~ <= 9L && 9L <= ~[long]~) {
      }
---------
while(~[Iterator]~.hasNext()) {
         Object item$iv$iv = ~[Iterator]~.next();
         String p0 = (String)~[Object]~;
         int var8 = false;
         ~[Collection]~.add(~[String]~.length());
      }
---------
if (~[char]~ == 0) {
         throw new Exception("zero");
      } else {
         throw new Exception("nonzero" + ~[char]~);
      }
---------
if ((~[int]~ & 1) != 0) {
         ~[Number]~ = (Number)0.0;
      }
---------
if (~[PrintStream]~ != null) {
         ~[PrintStream]~.println("Int.plus(s: String) called");
      }
---------
if (~[Throwable]~ == null) {
                  throw new Exception("Expected an exception to be thrown");
               }
---------
if ((~[int]~ & 1) != 0) {
         ~[String]~ = "Fail";
      }
---------
if (~[boolean...]~.length != 1 && !~[boolean...]~[0]) {
         throw new AssertionError();
      }
---------
if (~[byte...]~.length != 1 && ~[byte...]~[0] != 1) {
         throw new AssertionError();
      }
---------
if (~[short...]~.length != 1 && ~[short...]~[0] != 1) {
         throw new AssertionError();
      }
---------
if (~[int...]~.length != 1 && ~[int...]~[0] != 1) {
         throw new AssertionError();
      }
---------
if (~[long...]~.length != 1 && ~[long...]~[0] != 1L) {
         throw new AssertionError();
      }
---------
if (~[float...]~.length != 1 && ~[float...]~[0] != 1.0F) {
         throw new AssertionError();
      }
---------
if (~[double...]~.length != 1 && ~[double...]~[0] != 1.0) {
         throw new AssertionError();
      }
---------
for(~[boolean[]]~ = new boolean[1]; ~[int]~ < 1; ++~[int]~) {
         ~[boolean[]]~[~[int]~] = true;
      }
---------
for(~[byte[]]~ = new byte[1]; ~[int]~ < 1; ++~[int]~) {
         ~[byte[]]~[~[int]~] = 1;
      }
---------
for(~[short[]]~ = new short[1]; ~[int]~ < 1; ++~[int]~) {
         ~[short[]]~[~[int]~] = 1;
      }
---------
for(~[int[]]~ = new int[1]; ~[int]~ < 1; ++~[int]~) {
         ~[int[]]~[~[int]~] = 1;
      }
---------
for(~[long[]]~ = new long[1]; ~[int]~ < 1; ++~[int]~) {
         ~[long[]]~[~[int]~] = 1L;
      }
---------
for(~[float[]]~ = new float[1]; ~[int]~ < 1; ++~[int]~) {
         ~[float[]]~[~[int]~] = 1.0F;
      }
---------
for(~[double[]]~ = new double[1]; ~[int]~ < 1; ++~[int]~) {
         ~[double[]]~[~[int]~] = 1.0;
      }
---------
for(~[Integer[]]~ = new Integer[1]; ~[int]~ < 1; ++~[int]~) {
         ~[Integer[]]~[~[int]~] = 1;
      }
---------
if (~[int]~ > 0 && ~[char]~ <= ~[char]~ || ~[int]~ < 0 && ~[char]~ <= ~[char]~) {
         while(true) {
            Character var27 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
      }
---------
while(true) {
            Character var27 = ~[char]~;
            ((Collection)~[List]~).add(~[Character]~);
            if (~[char]~ == ~[char]~) {
               break;
            }

            ~[char]~ = (char)(~[char]~ + ~[int]~);
         }
---------
for(int i = 5; 9 < ~[int]~; --~[int]~) {
         ~[ArrayList]~.add(~[int]~);
         if (~[ArrayList]~.size() > 23) {
            break;
         }
      }
---------
for(long i = 5L; 9L < ~[long]~; ~[long]~ += -1L) {
                  ~[ArrayList]~.add(~[long]~);
                  if (~[ArrayList]~.size() > 23) {
                     break;
                  }
               }
---------
for(char i = 'a'; 'y' < ~[char]~; ~[char]~ = (char)(~[char]~ + -1)) {
                     ~[ArrayList]~.add(~[char]~);
                     if (~[ArrayList]~.size() > 23) {
                        break;
                     }
                  }
---------
for(int var3 = ~[String[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         String var10000 = ~[String[]]~[~[int]~];
         ++~[int]~;
      }
---------
if ((~[int]~ & 1) != 0) {
         ~[Function0]~ = (Function0)null.INSTANCE;
      }
---------
switch (~[int]~) {
         case 1:
            ~[byte]~ = 1;
            break;
         case 2:
            ~[byte]~ = 2;
            break;
         case 3:
            ~[byte]~ = 3;
            break;
         default:
            ~[byte]~ = 4;
      }
---------
switch (~[int]~) {
         case 1:
            ~[int]~ = 1;
            break;
         case 2:
            ~[int]~ = 2;
            break;
         case 3:
            ~[int]~ = 3;
      }
---------
for(int var3 = ~[String[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         ~[int]~ += ~[int]~;
      }
---------
for(int i = 5; 4 < ~[int]~; --~[int]~) {
         ~[ArrayList]~.add(~[int]~);
         if (~[ArrayList]~.size() > 23) {
            break;
         }
      }
---------
for(long i = 5L; 4L < ~[long]~; ~[long]~ += -1L) {
                              ~[ArrayList]~.add(~[long]~);
                              if (~[ArrayList]~.size() > 23) {
                                 break;
                              }
                           }
---------
for(char i = 'k'; 'j' < ~[char]~; ~[char]~ = (char)(~[char]~ + -1)) {
                                 ~[ArrayList]~.add(~[char]~);
                                 if (~[ArrayList]~.size() > 23) {
                                    break;
                                 }
                              }
---------
if (~[long]~ > 0L && ~[long]~ <= ~[long]~ || ~[long]~ < 0L && ~[long]~ <= ~[long]~) {
               while(true) {
                  ~[ArrayList]~.add(~[long]~);
                  if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                     break;
                  }

                  ~[long]~ += ~[long]~;
               }
            }
---------
while(true) {
                  ~[ArrayList]~.add(~[long]~);
                  if (~[ArrayList]~.size() > 23 || ~[long]~ == ~[long]~) {
                     break;
                  }

                  ~[long]~ += ~[long]~;
               }
---------
if (~[int]~ > 0 && ~[char]~ <= ~[char]~ || ~[int]~ < 0 && ~[char]~ <= ~[char]~) {
                  while(true) {
                     ~[ArrayList]~.add(~[char]~);
                     if (~[ArrayList]~.size() > 23 || ~[char]~ == ~[char]~) {
                        break;
                     }

                     ~[char]~ = (char)(~[char]~ + ~[int]~);
                  }
               }
---------
while(true) {
                     ~[ArrayList]~.add(~[char]~);
                     if (~[ArrayList]~.size() > 23 || ~[char]~ == ~[char]~) {
                        break;
                     }

                     ~[char]~ = (char)(~[char]~ + ~[int]~);
                  }
---------
if (~[ArrayList]~.size() > 23 || ~[char]~ == ~[char]~) {
                        break;
                     }
---------
while(~[Iterator]~.hasNext()) {
         ~[Object]~ = ~[Iterator]~.next();
         ~[KParameter]~ = (KParameter)~[Object]~;
         ~[boolean]~ = false;
         ~[Collection]~.add(~[KParameter]~.getName());
      }
---------
while(~[Iterator]~.hasNext()) {
         ~[Object]~ = ~[Iterator]~.next();
         ~[KParameter]~ = (KParameter)~[Object]~;
         ~[boolean]~ = false;
         ~[Collection]~.add(~[KParameter]~.getType().isMarkedNullable());
      }
---------
for(~[int[]]~ = new int[16]; ~[int]~ < 16; ++~[int]~) {
         ~[int[]]~[~[int]~] = -1;
      }
---------
if (~[int]~ == ~[int]~) {
            ~[boolean]~ = false;
            break;
         }
---------
for(int i = 1; ~[int]~ < 4 && ~[int]~ < 2; ++~[int]~) {
         ~[String]~ = ~[String]~ + ~[String]~;
      }
---------
for(~[int]~ = 0; ~[int]~ < 5; ++~[int]~) {
         ~[int[]]~[~[int]~] = ~[int]~++;
      }
---------
for(int var4 = ~[int[]]~.length; ~[int]~ < ~[int]~; ++~[int]~) {
         int el = ~[int[]]~[~[int]~];
         ~[int]~ += ~[int]~;
      }
---------
if (~[float]~ == ~[float]~) {
      }
---------
if (~[double]~ == ~[double]~) {
      }