{
  "runs": [
    {
      "results": [
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Command_Injection.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Command_Injection.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Command_Injection.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 359,
                  "startColumn": 5,
                  "startLine": 359
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Commercial_Tools.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Commercial_Tools.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Commercial_Tools.html"
                },
                "region": {
                  "endColumn": 129,
                  "endLine": 263,
                  "startColumn": 17,
                  "startLine": 263
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Cross-Site_Scripting.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Cross-Site_Scripting.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Cross-Site_Scripting.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 359,
                  "startColumn": 5,
                  "startLine": 359
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Insecure_Cookie.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Insecure_Cookie.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Insecure_Cookie.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 359,
                  "startColumn": 5,
                  "startLine": 359
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_LDAP_Injection.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_LDAP_Injection.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_LDAP_Injection.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 359,
                  "startColumn": 5,
                  "startLine": 359
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Path_Traversal.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Path_Traversal.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Path_Traversal.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 359,
                  "startColumn": 5,
                  "startLine": 359
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_SQL_Injection.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_SQL_Injection.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_SQL_Injection.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 359,
                  "startColumn": 5,
                  "startLine": 359
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Trust_Boundary_Violation.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Trust_Boundary_Violation.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Trust_Boundary_Violation.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 359,
                  "startColumn": 5,
                  "startLine": 359
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Weak_Encryption_Algorithm.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Weak_Encryption_Algorithm.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Weak_Encryption_Algorithm.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 359,
                  "startColumn": 5,
                  "startLine": 359
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Weak_Hash_Algorithm.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Weak_Hash_Algorithm.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Weak_Hash_Algorithm.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 359,
                  "startColumn": 5,
                  "startLine": 359
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Weak_Random_Number.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Weak_Random_Number.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_Weak_Random_Number.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 359,
                  "startColumn": 5,
                  "startLine": 359
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_XPath_Injection.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_XPath_Injection.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1,1.2_Scorecard_for_XPath_Injection.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 359,
                  "startColumn": 5,
                  "startLine": 359
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1_Scorecard_for_SAST-01.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1_Scorecard_for_SAST-01.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1_Scorecard_for_SAST-01.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 343,
                  "startColumn": 5,
                  "startLine": 343
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1_Scorecard_for_SAST-02.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1_Scorecard_for_SAST-02.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1_Scorecard_for_SAST-02.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 343,
                  "startColumn": 5,
                  "startLine": 343
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1_Scorecard_for_SAST-03.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1_Scorecard_for_SAST-03.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1_Scorecard_for_SAST-03.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 343,
                  "startColumn": 5,
                  "startLine": 343
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1_Scorecard_for_SAST-04.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1_Scorecard_for_SAST-04.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1_Scorecard_for_SAST-04.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 343,
                  "startColumn": 5,
                  "startLine": 343
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1_Scorecard_for_SAST-05.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1_Scorecard_for_SAST-05.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1_Scorecard_for_SAST-05.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 343,
                  "startColumn": 5,
                  "startLine": 343
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1_Scorecard_for_SAST-06.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1_Scorecard_for_SAST-06.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.1_Scorecard_for_SAST-06.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 343,
                  "startColumn": 5,
                  "startLine": 343
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_FBwFindSecBugs_v1.4.0.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_FBwFindSecBugs_v1.4.0.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_FBwFindSecBugs_v1.4.0.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 343,
                  "startColumn": 5,
                  "startLine": 343
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_FBwFindSecBugs_v1.4.3.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_FBwFindSecBugs_v1.4.3.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_FBwFindSecBugs_v1.4.3.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 343,
                  "startColumn": 5,
                  "startLine": 343
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_FBwFindSecBugs_v1.4.4.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_FBwFindSecBugs_v1.4.4.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_FBwFindSecBugs_v1.4.4.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 343,
                  "startColumn": 5,
                  "startLine": 343
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_FBwFindSecBugs_v1.4.5.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_FBwFindSecBugs_v1.4.5.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_FBwFindSecBugs_v1.4.5.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 343,
                  "startColumn": 5,
                  "startLine": 343
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_FBwFindSecBugs_v1.4.6.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_FBwFindSecBugs_v1.4.6.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_FBwFindSecBugs_v1.4.6.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 343,
                  "startColumn": 5,
                  "startLine": 343
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_FindBugs_v3.0.1.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_FindBugs_v3.0.1.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_FindBugs_v3.0.1.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 343,
                  "startColumn": 5,
                  "startLine": 343
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_OWASP_ZAP_vD-2015-08-24.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_OWASP_ZAP_vD-2015-08-24.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_OWASP_ZAP_vD-2015-08-24.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 343,
                  "startColumn": 5,
                  "startLine": 343
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_OWASP_ZAP_vD-2016-09-05.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_OWASP_ZAP_vD-2016-09-05.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_OWASP_ZAP_vD-2016-09-05.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 343,
                  "startColumn": 5,
                  "startLine": 343
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_PMD_v5.2.3.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_PMD_v5.2.3.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_PMD_v5.2.3.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 343,
                  "startColumn": 5,
                  "startLine": 343
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_SonarQube_Java_Plugin_v3.14.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 26,
                  "startColumn": 7,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_SonarQube_Java_Plugin_v3.14.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/Benchmark_v1.2_Scorecard_for_SonarQube_Java_Plugin_v3.14.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 343,
                  "startColumn": 5,
                  "startLine": 343
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/OWASP_Benchmark_Guide.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/OWASP_Benchmark_Guide.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 28,
                  "startColumn": 7,
                  "startLine": 28
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/OWASP_Benchmark_Guide.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 167,
                  "startColumn": 5,
                  "startLine": 167
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/OWASP_Benchmark_Home.html"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 27,
                  "startColumn": 7,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/OWASP_Benchmark_Home.html"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 28,
                  "startColumn": 7,
                  "startLine": 28
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scorecard/OWASP_Benchmark_Home.html"
                },
                "region": {
                  "endColumn": 117,
                  "endLine": 279,
                  "startColumn": 5,
                  "startLine": 279
                }
              }
            }
          ],
          "message": {
            "text": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files."
          },
          "ruleId": "CWE-353"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/helpers/DatabaseHelper.java"
                },
                "region": {
                  "endColumn": 32,
                  "endLine": 173,
                  "startColumn": 9,
                  "startLine": 173
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/helpers/LDAPManager.java"
                },
                "region": {
                  "endColumn": 6,
                  "endLine": 133,
                  "startColumn": 5,
                  "startLine": 98
                }
              }
            }
          ],
          "message": {
            "text": "Detected non-constant data passed into an LDAP query. If this data can be controlled by an external user, this is an LDAP injection. Ensure data passed to an LDAP query is not controllable; or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/helpers/ThingFactory.java"
                },
                "region": {
                  "endColumn": 50,
                  "endLine": 40,
                  "startColumn": 30,
                  "startLine": 40
                }
              }
            }
          ],
          "message": {
            "text": "If an attacker can supply values that the application then uses to determine which class to instantiate or which method to invoke, the potential exists for the attacker to create control flow paths through the application that were not intended by the application developers. This attack vector may allow the attacker to bypass authentication or access control checks or otherwise cause the application to behave in an unexpected manner."
          },
          "ruleId": "CWE-470"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/helpers/Utils.java"
                },
                "region": {
                  "endColumn": 14,
                  "endLine": 157,
                  "startColumn": 13,
                  "startLine": 149
                }
              }
            }
          ],
          "message": {
            "text": "Detected file permissions that are overly permissive (read, write, and execute). It is generally a bad practices to set overly permissive file permission such as read+write+exec for all users. If the file affected is a configuration, a binary, a script or sensitive data, it can lead to privilege escalation or information leakage. Instead, follow the principle of least privilege and give users only the  permissions they need."
          },
          "ruleId": "CWE-276"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/helpers/Utils.java"
                },
                "region": {
                  "endColumn": 14,
                  "endLine": 157,
                  "startColumn": 13,
                  "startLine": 150
                }
              }
            }
          ],
          "message": {
            "text": "Detected file permissions that are overly permissive (read, write, and execute). It is generally a bad practices to set overly permissive file permission such as read+write+exec for all users. If the file affected is a configuration, a binary, a script or sensitive data, it can lead to privilege escalation or information leakage. Instead, follow the principle of least privilege and give users only the  permissions they need."
          },
          "ruleId": "CWE-276"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/helpers/Utils.java"
                },
                "region": {
                  "endColumn": 98,
                  "endLine": 429,
                  "startColumn": 9,
                  "startLine": 427
                }
              }
            }
          ],
          "message": {
            "text": "Detects direct creations of SSLConnectionSocketFactories that don't disallow SSL v2, SSL v3, and TLS v1. SSLSocketFactory can be used to validate the identity of the HTTPS server against a list of trusted certificates. These protocols are deprecated due to POODLE, man in the middle attacks, and other vulnerabilities."
          },
          "ruleId": "CWE-319"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00001.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00001.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 71,
                  "startColumn": 19,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00002.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00002.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00002.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 85,
                  "startColumn": 21,
                  "startLine": 85
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00003.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00004.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00004.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00005.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 63,
                  "startColumn": 69,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00005.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 66,
                  "startColumn": 42,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00005.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 66,
                  "startColumn": 80,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00006.java"
                },
                "region": {
                  "endColumn": 38,
                  "endLine": 62,
                  "startColumn": 9,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00006.java"
                },
                "region": {
                  "endColumn": 28,
                  "endLine": 66,
                  "startColumn": 9,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00007.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00008.java"
                },
                "region": {
                  "endColumn": 80,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00011.java"
                },
                "region": {
                  "endColumn": 71,
                  "endLine": 54,
                  "startColumn": 22,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00012.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 68,
                  "startColumn": 21,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00012.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 85,
                  "startColumn": 21,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00013.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 56,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00014.java"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 56,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00015.java"
                },
                "region": {
                  "endColumn": 38,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00015.java"
                },
                "region": {
                  "endColumn": 28,
                  "endLine": 68,
                  "startColumn": 9,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00017.java"
                },
                "region": {
                  "endColumn": 45,
                  "endLine": 63,
                  "startColumn": 13,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00018.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00018.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 59,
                  "startColumn": 25,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00019.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 54,
                  "startColumn": 42,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00019.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 54,
                  "startColumn": 80,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00020.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 61,
                  "startColumn": 42,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00020.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 61,
                  "startColumn": 80,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00021.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 59,
                  "startColumn": 21,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00021.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 76,
                  "startColumn": 21,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00023.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 47,
                  "startColumn": 22,
                  "startLine": 47
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00024.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00025.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00025.java"
                },
                "region": {
                  "endColumn": 89,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00026.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 50,
                  "startColumn": 13,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00027.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 52,
                  "startColumn": 13,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00027.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 52,
                  "startColumn": 25,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00028.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00028.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 70,
                  "startColumn": 21,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00030.java"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 53,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00031.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 52,
                  "startColumn": 49,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00031.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 58,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00032.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00033.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00034.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00034.java"
                },
                "region": {
                  "endColumn": 78,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00035.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 69,
                  "startColumn": 42,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00035.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 69,
                  "startColumn": 80,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00036.java"
                },
                "region": {
                  "endColumn": 71,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00037.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 71,
                  "startColumn": 13,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00038.java"
                },
                "region": {
                  "endColumn": 32,
                  "endLine": 79,
                  "startColumn": 13,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00039.java"
                },
                "region": {
                  "endColumn": 94,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00040.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 49,
                  "startColumn": 22,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00043.java"
                },
                "region": {
                  "endColumn": 71,
                  "endLine": 54,
                  "startColumn": 25,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00044.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 60,
                  "startColumn": 21,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00044.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 77,
                  "startColumn": 21,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00045.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 62,
                  "startColumn": 34,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00046.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 50,
                  "startColumn": 86,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00047.java"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00048.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 72,
                  "startColumn": 9,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00049.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 72,
                  "startColumn": 9,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00050.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 62,
                  "startColumn": 42,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00050.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 62,
                  "startColumn": 80,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00051.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 60,
                  "startColumn": 9,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00051.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 60,
                  "startColumn": 29,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00051.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 63,
                  "startColumn": 13,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00053.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00053.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 88,
                  "startColumn": 42,
                  "startLine": 88
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00053.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 88,
                  "startColumn": 80,
                  "startLine": 88
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00054.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00055.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00055.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 81,
                  "startColumn": 42,
                  "startLine": 81
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00055.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 81,
                  "startColumn": 80,
                  "startLine": 81
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00056.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00056.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 91,
                  "startColumn": 42,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00056.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 91,
                  "startColumn": 80,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00057.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00057.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 83,
                  "startColumn": 69,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00057.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 86,
                  "startColumn": 42,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00057.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 86,
                  "startColumn": 80,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00058.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00059.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00060.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00060.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 76,
                  "startColumn": 22,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00061.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00061.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 74,
                  "startColumn": 22,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00062.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00063.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00063.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 77,
                  "startColumn": 19,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00064.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00064.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00064.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 91,
                  "startColumn": 21,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00065.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00066.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00066.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 72,
                  "startColumn": 24,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00067.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00067.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 88,
                  "startColumn": 24,
                  "startLine": 88
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00068.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00068.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 72,
                  "startColumn": 24,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00069.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00070.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00070.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00071.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00071.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00072.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00073.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00073.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 87,
                  "startColumn": 86,
                  "startLine": 87
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00074.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00075.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00076.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00077.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00077.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 96,
                  "startColumn": 9,
                  "startLine": 96
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00077.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 98,
                  "startColumn": 29,
                  "startLine": 98
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00078.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00078.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 74,
                  "startColumn": 22,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00079.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00079.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 72,
                  "startColumn": 22,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00080.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00080.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 67,
                  "startColumn": 22,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00081.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00081.java"
                },
                "region": {
                  "endColumn": 61,
                  "endLine": 67,
                  "startColumn": 24,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00082.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00082.java"
                },
                "region": {
                  "endColumn": 60,
                  "endLine": 68,
                  "startColumn": 26,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00083.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00083.java"
                },
                "region": {
                  "endColumn": 60,
                  "endLine": 72,
                  "startColumn": 26,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00084.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00084.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 69,
                  "startColumn": 17,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00085.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00085.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 72,
                  "startColumn": 18,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00086.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00086.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 72,
                  "startColumn": 18,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00087.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00087.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 91,
                  "startColumn": 9,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00088.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00089.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00090.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00090.java"
                },
                "region": {
                  "endColumn": 43,
                  "endLine": 81,
                  "startColumn": 13,
                  "startLine": 81
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00091.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00091.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 76,
                  "startColumn": 13,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00092.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00092.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 95,
                  "startColumn": 13,
                  "startLine": 95
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00093.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00094.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00095.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00096.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00097.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00097.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 79,
                  "startColumn": 9,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00098.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00098.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 68,
                  "startColumn": 49,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00099.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00100.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00101.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00102.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00102.java"
                },
                "region": {
                  "endColumn": 94,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00103.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00103.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00104.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00104.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00105.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00105.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00105.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00106.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00106.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 82,
                  "startColumn": 13,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00107.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00107.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 93,
                  "startColumn": 13,
                  "startLine": 93
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00108.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00108.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 91,
                  "startColumn": 13,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00108.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 91,
                  "startColumn": 13,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00109.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00109.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 79,
                  "startColumn": 13,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00109.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 79,
                  "startColumn": 13,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00110.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00110.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 93,
                  "startColumn": 13,
                  "startLine": 93
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00111.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00111.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 82,
                  "startColumn": 25,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00112.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00112.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 74,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00112.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 74,
                  "startColumn": 25,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00113.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00113.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 78,
                  "startColumn": 25,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00114.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00114.java"
                },
                "region": {
                  "endColumn": 72,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00114.java"
                },
                "region": {
                  "endColumn": 71,
                  "endLine": 77,
                  "startColumn": 25,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00115.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00115.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 77,
                  "startColumn": 25,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00116.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00117.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00117.java"
                },
                "region": {
                  "endColumn": 99,
                  "endLine": 90,
                  "startColumn": 29,
                  "startLine": 89
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00117.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 96,
                  "startColumn": 17,
                  "startLine": 96
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00118.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00118.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 87,
                  "startColumn": 29,
                  "startLine": 87
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00118.java"
                },
                "region": {
                  "endColumn": 88,
                  "endLine": 89,
                  "startColumn": 13,
                  "startLine": 89
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00119.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 89,
                  "startColumn": 42,
                  "startLine": 89
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00119.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 89,
                  "startColumn": 80,
                  "startLine": 89
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00120.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 73,
                  "startColumn": 42,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00120.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 73,
                  "startColumn": 80,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00123.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 64,
                  "startColumn": 69,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00123.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 67,
                  "startColumn": 42,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00123.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 67,
                  "startColumn": 80,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00124.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 69,
                  "startColumn": 69,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00124.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 72,
                  "startColumn": 42,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00124.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 72,
                  "startColumn": 80,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00125.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 64,
                  "startColumn": 69,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00125.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 67,
                  "startColumn": 42,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00125.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 67,
                  "startColumn": 80,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00131.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 72,
                  "startColumn": 22,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00132.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 77,
                  "startColumn": 19,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00133.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 63,
                  "startColumn": 19,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00135.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 84,
                  "startColumn": 34,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00136.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00136.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 91,
                  "startColumn": 21,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00138.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 72,
                  "startColumn": 21,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00138.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 89,
                  "startColumn": 21,
                  "startLine": 81
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00140.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 63,
                  "startColumn": 24,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00141.java"
                },
                "region": {
                  "endColumn": 83,
                  "endLine": 64,
                  "startColumn": 17,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00141.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 66,
                  "startColumn": 17,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00146.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 59,
                  "startColumn": 9,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00148.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 60,
                  "startColumn": 9,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00149.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 56,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00150.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 60,
                  "startColumn": 9,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00152.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00154.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00155.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 56,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00157.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 59,
                  "startColumn": 9,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00158.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 68,
                  "startColumn": 9,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00158.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 70,
                  "startColumn": 29,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00159.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 67,
                  "startColumn": 9,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00159.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 67,
                  "startColumn": 29,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00159.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 70,
                  "startColumn": 13,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00160.java"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 61,
                  "startColumn": 9,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00161.java"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 59,
                  "startColumn": 24,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00162.java"
                },
                "region": {
                  "endColumn": 61,
                  "endLine": 53,
                  "startColumn": 24,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00163.java"
                },
                "region": {
                  "endColumn": 61,
                  "endLine": 54,
                  "startColumn": 24,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00164.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 58,
                  "startColumn": 17,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00165.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 56,
                  "startColumn": 17,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00166.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 53,
                  "startColumn": 18,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00167.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 60,
                  "startColumn": 18,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00168.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 58,
                  "startColumn": 18,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00169.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 80,
                  "startColumn": 9,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00170.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 91,
                  "startColumn": 9,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00174.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 63,
                  "startColumn": 13,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00176.java"
                },
                "region": {
                  "endColumn": 98,
                  "endLine": 64,
                  "startColumn": 13,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00177.java"
                },
                "region": {
                  "endColumn": 98,
                  "endLine": 69,
                  "startColumn": 13,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00191.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 81,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00192.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00193.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 64,
                  "startColumn": 13,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00194.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 63,
                  "startColumn": 13,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00195.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00196.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00198.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00198.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 62,
                  "startColumn": 13,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00199.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 64,
                  "startColumn": 13,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00199.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00202.java"
                },
                "region": {
                  "endColumn": 71,
                  "endLine": 79,
                  "startColumn": 25,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00203.java"
                },
                "region": {
                  "endColumn": 93,
                  "endLine": 63,
                  "startColumn": 13,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00203.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 63,
                  "startColumn": 25,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00204.java"
                },
                "region": {
                  "endColumn": 93,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00204.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 60,
                  "startColumn": 25,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00205.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 68,
                  "startColumn": 25,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00206.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 79,
                  "startColumn": 25,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00207.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 75,
                  "startColumn": 29,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00207.java"
                },
                "region": {
                  "endColumn": 88,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00208.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 82,
                  "startColumn": 42,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00208.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 82,
                  "startColumn": 80,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00210.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 77,
                  "startColumn": 69,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00210.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 80,
                  "startColumn": 42,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00210.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 80,
                  "startColumn": 80,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00215.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 65,
                  "startColumn": 22,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00216.java"
                },
                "region": {
                  "endColumn": 87,
                  "endLine": 69,
                  "startColumn": 22,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00218.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 102,
                  "startColumn": 26,
                  "startLine": 102
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00219.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 73,
                  "startColumn": 19,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00221.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 74,
                  "startColumn": 13,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00221.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 87,
                  "startColumn": 21,
                  "startLine": 87
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00222.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 88,
                  "startColumn": 13,
                  "startLine": 88
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00222.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 101,
                  "startColumn": 21,
                  "startLine": 101
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00223.java"
                },
                "region": {
                  "endColumn": 83,
                  "endLine": 74,
                  "startColumn": 17,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00223.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 76,
                  "startColumn": 17,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00230.java"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 67,
                  "startColumn": 9,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00231.java"
                },
                "region": {
                  "endColumn": 61,
                  "endLine": 68,
                  "startColumn": 24,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00232.java"
                },
                "region": {
                  "endColumn": 61,
                  "endLine": 69,
                  "startColumn": 24,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00233.java"
                },
                "region": {
                  "endColumn": 60,
                  "endLine": 65,
                  "startColumn": 26,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00234.java"
                },
                "region": {
                  "endColumn": 60,
                  "endLine": 69,
                  "startColumn": 26,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00235.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 65,
                  "startColumn": 17,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00236.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 68,
                  "startColumn": 17,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00237.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 82,
                  "startColumn": 17,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00238.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 70,
                  "startColumn": 18,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00239.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 83,
                  "startColumn": 18,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00240.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 65,
                  "startColumn": 18,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00241.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 85,
                  "startColumn": 9,
                  "startLine": 85
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00250.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 89,
                  "startColumn": 9,
                  "startLine": 85
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00251.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 65,
                  "startColumn": 49,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00251.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 71,
                  "startColumn": 9,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00253.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 83,
                  "startColumn": 53,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00253.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 89,
                  "startColumn": 9,
                  "startLine": 85
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00254.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 78,
                  "startColumn": 42,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00254.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 78,
                  "startColumn": 80,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00256.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 79,
                  "startColumn": 42,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00256.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 79,
                  "startColumn": 80,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00257.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 70,
                  "startColumn": 42,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00257.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 70,
                  "startColumn": 80,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00258.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 69,
                  "startColumn": 42,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00258.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 69,
                  "startColumn": 80,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00262.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 74,
                  "startColumn": 22,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00263.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 79,
                  "startColumn": 19,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00264.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 65,
                  "startColumn": 19,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00266.java"
                },
                "region": {
                  "endColumn": 83,
                  "endLine": 66,
                  "startColumn": 17,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00266.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 68,
                  "startColumn": 17,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00267.java"
                },
                "region": {
                  "endColumn": 83,
                  "endLine": 62,
                  "startColumn": 17,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00267.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 64,
                  "startColumn": 17,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00268.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00269.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00272.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 75,
                  "startColumn": 86,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00276.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 61,
                  "startColumn": 9,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00280.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 75,
                  "startColumn": 9,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00281.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 62,
                  "startColumn": 9,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00284.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 56,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00287.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00290.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00291.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 59,
                  "startColumn": 9,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00292.java"
                },
                "region": {
                  "endColumn": 55,
                  "endLine": 62,
                  "startColumn": 13,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00293.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 72,
                  "startColumn": 9,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00293.java"
                },
                "region": {
                  "endColumn": 28,
                  "endLine": 76,
                  "startColumn": 9,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00294.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 70,
                  "startColumn": 9,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00294.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 72,
                  "startColumn": 29,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00295.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 72,
                  "startColumn": 9,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00295.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 72,
                  "startColumn": 29,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00295.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00296.java"
                },
                "region": {
                  "endColumn": 61,
                  "endLine": 60,
                  "startColumn": 24,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00297.java"
                },
                "region": {
                  "endColumn": 61,
                  "endLine": 57,
                  "startColumn": 24,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00298.java"
                },
                "region": {
                  "endColumn": 60,
                  "endLine": 60,
                  "startColumn": 26,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00299.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 60,
                  "startColumn": 18,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00300.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 79,
                  "startColumn": 9,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00302.java"
                },
                "region": {
                  "endColumn": 43,
                  "endLine": 69,
                  "startColumn": 13,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00303.java"
                },
                "region": {
                  "endColumn": 38,
                  "endLine": 83,
                  "startColumn": 13,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00306.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 69,
                  "startColumn": 13,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00308.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 70,
                  "startColumn": 13,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00310.java"
                },
                "region": {
                  "endColumn": 98,
                  "endLine": 85,
                  "startColumn": 13,
                  "startLine": 84
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00311.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 80,
                  "startColumn": 13,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00323.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 61,
                  "startColumn": 49,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00323.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 67,
                  "startColumn": 9,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00324.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 56,
                  "startColumn": 49,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00325.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 56,
                  "startColumn": 49,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00326.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 67,
                  "startColumn": 9,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00327.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 58,
                  "startColumn": 53,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00327.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00328.java"
                },
                "region": {
                  "endColumn": 80,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00329.java"
                },
                "region": {
                  "endColumn": 80,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00333.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00335.java"
                },
                "region": {
                  "endColumn": 72,
                  "endLine": 66,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00336.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 66,
                  "startColumn": 13,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00336.java"
                },
                "region": {
                  "endColumn": 89,
                  "endLine": 67,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00338.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00339.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 63,
                  "startColumn": 13,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00340.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00341.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 63,
                  "startColumn": 13,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00342.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 70,
                  "startColumn": 13,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00343.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00343.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00344.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00344.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00344.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 65,
                  "startColumn": 37,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00346.java"
                },
                "region": {
                  "endColumn": 83,
                  "endLine": 53,
                  "startColumn": 17,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00346.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 55,
                  "startColumn": 17,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00347.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 47,
                  "startColumn": 18,
                  "startLine": 47
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00348.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00354.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 63,
                  "startColumn": 42,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00354.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 63,
                  "startColumn": 80,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00355.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 76,
                  "startColumn": 42,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00355.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 76,
                  "startColumn": 80,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00356.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 61,
                  "startColumn": 42,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00356.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 61,
                  "startColumn": 80,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00359.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 53,
                  "startColumn": 22,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00360.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 60,
                  "startColumn": 19,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00361.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 72,
                  "startColumn": 19,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00362.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00362.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 67,
                  "startColumn": 21,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00363.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 60,
                  "startColumn": 34,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00368.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 48,
                  "startColumn": 24,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00369.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 51,
                  "startColumn": 24,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00371.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00372.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 54,
                  "startColumn": 86,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00375.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 51,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00376.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 55,
                  "startColumn": 9,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00378.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 51,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00380.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 68,
                  "startColumn": 9,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00384.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 52,
                  "startColumn": 9,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00387.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00388.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 50,
                  "startColumn": 9,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00390.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 56,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00392.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00393.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00395.java"
                },
                "region": {
                  "endColumn": 55,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00396.java"
                },
                "region": {
                  "endColumn": 25,
                  "endLine": 67,
                  "startColumn": 9,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00397.java"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 50,
                  "startColumn": 9,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00398.java"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 54,
                  "startColumn": 24,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00399.java"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 69,
                  "startColumn": 24,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00400.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 67,
                  "startColumn": 22,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00401.java"
                },
                "region": {
                  "endColumn": 60,
                  "endLine": 55,
                  "startColumn": 26,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00402.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 52,
                  "startColumn": 17,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00403.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 70,
                  "startColumn": 9,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00406.java"
                },
                "region": {
                  "endColumn": 38,
                  "endLine": 74,
                  "startColumn": 13,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00408.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 76,
                  "startColumn": 13,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00409.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 90,
                  "startColumn": 13,
                  "startLine": 90
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00424.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 56,
                  "startColumn": 49,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00424.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 62,
                  "startColumn": 9,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00425.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 50,
                  "startColumn": 49,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00425.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 56,
                  "startColumn": 9,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00426.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 60,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00429.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 63,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00430.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 63,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00431.java"
                },
                "region": {
                  "endColumn": 32,
                  "endLine": 71,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00433.java"
                },
                "region": {
                  "endColumn": 95,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00434.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00435.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00436.java"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00436.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00437.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00437.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00438.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00438.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00439.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00439.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00439.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 53,
                  "startColumn": 37,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00440.java"
                },
                "region": {
                  "endColumn": 95,
                  "endLine": 59,
                  "startColumn": 25,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00441.java"
                },
                "region": {
                  "endColumn": 72,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00441.java"
                },
                "region": {
                  "endColumn": 71,
                  "endLine": 55,
                  "startColumn": 25,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00442.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 68,
                  "startColumn": 29,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00442.java"
                },
                "region": {
                  "endColumn": 88,
                  "endLine": 70,
                  "startColumn": 13,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00445.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 83,
                  "startColumn": 69,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00445.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 86,
                  "startColumn": 42,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00445.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 86,
                  "startColumn": 80,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00446.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 68,
                  "startColumn": 69,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00446.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 71,
                  "startColumn": 42,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00446.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 71,
                  "startColumn": 80,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00448.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 65,
                  "startColumn": 42,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00448.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 65,
                  "startColumn": 80,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00449.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 63,
                  "startColumn": 42,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00449.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 63,
                  "startColumn": 80,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00452.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 61,
                  "startColumn": 22,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00453.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 79,
                  "startColumn": 26,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00454.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 62,
                  "startColumn": 19,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00455.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 64,
                  "startColumn": 19,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00458.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00458.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 90,
                  "startColumn": 21,
                  "startLine": 90
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00459.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00459.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 78,
                  "startColumn": 21,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00461.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 52,
                  "startColumn": 24,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00462.java"
                },
                "region": {
                  "endColumn": 83,
                  "endLine": 68,
                  "startColumn": 17,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00462.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 70,
                  "startColumn": 17,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00464.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00465.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 56,
                  "startColumn": 86,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00469.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 59,
                  "startColumn": 9,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00472.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 59,
                  "startColumn": 9,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00473.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 61,
                  "startColumn": 9,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00475.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 58,
                  "startColumn": 9,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00476.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 58,
                  "startColumn": 9,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00477.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00478.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 60,
                  "startColumn": 9,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00480.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 67,
                  "startColumn": 9,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00480.java"
                },
                "region": {
                  "endColumn": 28,
                  "endLine": 71,
                  "startColumn": 9,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00481.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 67,
                  "startColumn": 9,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00481.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 69,
                  "startColumn": 29,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00482.java"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 53,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00483.java"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 58,
                  "startColumn": 9,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00484.java"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 57,
                  "startColumn": 24,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00485.java"
                },
                "region": {
                  "endColumn": 60,
                  "endLine": 54,
                  "startColumn": 26,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00486.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 52,
                  "startColumn": 17,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00487.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 57,
                  "startColumn": 17,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00488.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 62,
                  "startColumn": 18,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00489.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 57,
                  "startColumn": 18,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00490.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 62,
                  "startColumn": 18,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00491.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00492.java"
                },
                "region": {
                  "endColumn": 62,
                  "endLine": 55,
                  "startColumn": 9,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00496.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 68,
                  "startColumn": 13,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00497.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 80,
                  "startColumn": 13,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00498.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 68,
                  "startColumn": 13,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00499.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 62,
                  "startColumn": 13,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00500.java"
                },
                "region": {
                  "endColumn": 98,
                  "endLine": 68,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00508.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 54,
                  "startColumn": 53,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00508.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 60,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00510.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 81,
                  "startColumn": 13,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00512.java"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00512.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00513.java"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 63,
                  "startColumn": 13,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00514.java"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 62,
                  "startColumn": 13,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00514.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 62,
                  "startColumn": 13,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00515.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 67,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00516.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 76,
                  "startColumn": 13,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00516.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 76,
                  "startColumn": 13,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00517.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 62,
                  "startColumn": 13,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00517.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 62,
                  "startColumn": 13,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00518.java"
                },
                "region": {
                  "endColumn": 72,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00518.java"
                },
                "region": {
                  "endColumn": 71,
                  "endLine": 59,
                  "startColumn": 25,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00519.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 63,
                  "startColumn": 25,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00520.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 72,
                  "startColumn": 29,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00520.java"
                },
                "region": {
                  "endColumn": 88,
                  "endLine": 74,
                  "startColumn": 13,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00521.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 83,
                  "startColumn": 42,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00521.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 83,
                  "startColumn": 80,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00522.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 81,
                  "startColumn": 42,
                  "startLine": 81
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00522.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 81,
                  "startColumn": 80,
                  "startLine": 81
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00526.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 62,
                  "startColumn": 22,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00527.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 64,
                  "startColumn": 22,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00529.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 67,
                  "startColumn": 19,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00530.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 94,
                  "startColumn": 21,
                  "startLine": 94
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00530.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 112,
                  "startColumn": 21,
                  "startLine": 104
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00531.java"
                },
                "region": {
                  "endColumn": 83,
                  "endLine": 73,
                  "startColumn": 17,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00531.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 75,
                  "startColumn": 17,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00532.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 83,
                  "startColumn": 13,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00533.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00534.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 82,
                  "startColumn": 13,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00536.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 68,
                  "startColumn": 86,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00537.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 63,
                  "startColumn": 86,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00541.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 71,
                  "startColumn": 9,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00542.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 83,
                  "startColumn": 9,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00547.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 65,
                  "startColumn": 9,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00549.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 68,
                  "startColumn": 9,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00551.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 63,
                  "startColumn": 9,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00553.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 82,
                  "startColumn": 9,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00554.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 68,
                  "startColumn": 9,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00555.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 68,
                  "startColumn": 9,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00556.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 82,
                  "startColumn": 9,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00557.java"
                },
                "region": {
                  "endColumn": 55,
                  "endLine": 67,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00558.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 84,
                  "startColumn": 29,
                  "startLine": 84
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00559.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 95,
                  "startColumn": 29,
                  "startLine": 95
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00560.java"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 67,
                  "startColumn": 24,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00561.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 72,
                  "startColumn": 22,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00562.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 81,
                  "startColumn": 22,
                  "startLine": 81
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00563.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 62,
                  "startColumn": 17,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00564.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 63,
                  "startColumn": 18,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00565.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 79,
                  "startColumn": 9,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00566.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 81,
                  "startColumn": 9,
                  "startLine": 81
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00567.java"
                },
                "region": {
                  "endColumn": 43,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00568.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 87,
                  "startColumn": 13,
                  "startLine": 87
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00571.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 76,
                  "startColumn": 13,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00572.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00573.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 70,
                  "startColumn": 13,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00574.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00576.java"
                },
                "region": {
                  "endColumn": 98,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00588.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 72,
                  "startColumn": 9,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00590.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00591.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 70,
                  "startColumn": 13,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00593.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 91,
                  "startColumn": 13,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00595.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00597.java"
                },
                "region": {
                  "endColumn": 95,
                  "endLine": 67,
                  "startColumn": 13,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00598.java"
                },
                "region": {
                  "endColumn": 94,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00600.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 84,
                  "startColumn": 13,
                  "startLine": 84
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00601.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00601.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00602.java"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00603.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 69,
                  "startColumn": 13,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00603.java"
                },
                "region": {
                  "endColumn": 78,
                  "endLine": 69,
                  "startColumn": 13,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00604.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 74,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00604.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 74,
                  "startColumn": 13,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00604.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 74,
                  "startColumn": 37,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00605.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00605.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 72,
                  "startColumn": 25,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00606.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00606.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 72,
                  "startColumn": 25,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00607.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 79,
                  "startColumn": 29,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00607.java"
                },
                "region": {
                  "endColumn": 88,
                  "endLine": 81,
                  "startColumn": 13,
                  "startLine": 81
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00608.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 76,
                  "startColumn": 42,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00608.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 76,
                  "startColumn": 80,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00609.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 68,
                  "startColumn": 42,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00609.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 68,
                  "startColumn": 80,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00610.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 87,
                  "startColumn": 42,
                  "startLine": 87
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00610.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 87,
                  "startColumn": 80,
                  "startLine": 87
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00611.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 71,
                  "startColumn": 42,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00611.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 71,
                  "startColumn": 80,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00614.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 71,
                  "startColumn": 69,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00614.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 74,
                  "startColumn": 42,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00614.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 74,
                  "startColumn": 80,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00615.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 67,
                  "startColumn": 69,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00615.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 70,
                  "startColumn": 42,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00615.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 70,
                  "startColumn": 80,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00616.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 58,
                  "startColumn": 42,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00616.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 58,
                  "startColumn": 80,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00617.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 59,
                  "startColumn": 42,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00617.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 59,
                  "startColumn": 80,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00622.java"
                },
                "region": {
                  "endColumn": 87,
                  "endLine": 70,
                  "startColumn": 22,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00623.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 57,
                  "startColumn": 22,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00624.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00624.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 71,
                  "startColumn": 21,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00625.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00625.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 74,
                  "startColumn": 21,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00627.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 63,
                  "startColumn": 13,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00627.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 76,
                  "startColumn": 21,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00630.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 82,
                  "startColumn": 21,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00631.java"
                },
                "region": {
                  "endColumn": 83,
                  "endLine": 57,
                  "startColumn": 17,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00631.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 59,
                  "startColumn": 17,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00634.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00635.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 51,
                  "startColumn": 13,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00636.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 51,
                  "startColumn": 13,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00637.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 56,
                  "startColumn": 86,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00652.java"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 53,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00653.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 55,
                  "startColumn": 17,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00654.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 60,
                  "startColumn": 18,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00658.java"
                },
                "region": {
                  "endColumn": 43,
                  "endLine": 64,
                  "startColumn": 13,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00659.java"
                },
                "region": {
                  "endColumn": 98,
                  "endLine": 80,
                  "startColumn": 13,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00680.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00681.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 55,
                  "startColumn": 37,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00682.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 74,
                  "startColumn": 25,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00684.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 66,
                  "startColumn": 42,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00684.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 66,
                  "startColumn": 80,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00685.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 70,
                  "startColumn": 42,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00685.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 70,
                  "startColumn": 80,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00688.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 71,
                  "startColumn": 42,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00688.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 71,
                  "startColumn": 80,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00691.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 71,
                  "startColumn": 69,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00691.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 74,
                  "startColumn": 42,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00691.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 74,
                  "startColumn": 80,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00692.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 61,
                  "startColumn": 69,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00692.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 64,
                  "startColumn": 42,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00692.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 64,
                  "startColumn": 80,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00693.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 64,
                  "startColumn": 69,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00693.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 67,
                  "startColumn": 42,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00693.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 67,
                  "startColumn": 80,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00694.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 61,
                  "startColumn": 21,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00694.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 78,
                  "startColumn": 21,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00696.java"
                },
                "region": {
                  "endColumn": 87,
                  "endLine": 70,
                  "startColumn": 22,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00697.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 57,
                  "startColumn": 22,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00698.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 52,
                  "startColumn": 22,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00699.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 69,
                  "startColumn": 22,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00700.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 63,
                  "startColumn": 13,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00700.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 76,
                  "startColumn": 21,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00702.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 57,
                  "startColumn": 24,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00703.java"
                },
                "region": {
                  "endColumn": 83,
                  "endLine": 66,
                  "startColumn": 17,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00703.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 68,
                  "startColumn": 17,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00704.java"
                },
                "region": {
                  "endColumn": 83,
                  "endLine": 59,
                  "startColumn": 17,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00704.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 61,
                  "startColumn": 17,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00705.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00708.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 53,
                  "startColumn": 86,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00712.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 59,
                  "startColumn": 9,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00715.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 52,
                  "startColumn": 9,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00719.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00720.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 71,
                  "startColumn": 9,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00723.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00724.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 70,
                  "startColumn": 9,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00727.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00728.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 56,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00729.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 53,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00731.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 60,
                  "startColumn": 9,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00731.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 62,
                  "startColumn": 29,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00732.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 68,
                  "startColumn": 29,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00733.java"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 51,
                  "startColumn": 24,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00734.java"
                },
                "region": {
                  "endColumn": 61,
                  "endLine": 69,
                  "startColumn": 24,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00735.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 60,
                  "startColumn": 18,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00736.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 72,
                  "startColumn": 9,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00738.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00739.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00743.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00755.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 56,
                  "startColumn": 49,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00755.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 62,
                  "startColumn": 9,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00756.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 51,
                  "startColumn": 49,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00757.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 76,
                  "startColumn": 9,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00759.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 54,
                  "startColumn": 53,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00759.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 60,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00761.java"
                },
                "region": {
                  "endColumn": 80,
                  "endLine": 74,
                  "startColumn": 13,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00762.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00763.java"
                },
                "region": {
                  "endColumn": 72,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00764.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00764.java"
                },
                "region": {
                  "endColumn": 89,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00765.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00765.java"
                },
                "region": {
                  "endColumn": 89,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00766.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00766.java"
                },
                "region": {
                  "endColumn": 89,
                  "endLine": 62,
                  "startColumn": 13,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00767.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00767.java"
                },
                "region": {
                  "endColumn": 89,
                  "endLine": 76,
                  "startColumn": 13,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00768.java"
                },
                "region": {
                  "endColumn": 94,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00770.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00771.java"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00772.java"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 74,
                  "startColumn": 13,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00772.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 74,
                  "startColumn": 13,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00773.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 65,
                  "startColumn": 25,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00774.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 74,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00774.java"
                },
                "region": {
                  "endColumn": 95,
                  "endLine": 74,
                  "startColumn": 25,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00779.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 86,
                  "startColumn": 42,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00779.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 86,
                  "startColumn": 80,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00781.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 83,
                  "startColumn": 69,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00781.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 86,
                  "startColumn": 42,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00781.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 86,
                  "startColumn": 80,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00784.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 96,
                  "startColumn": 19,
                  "startLine": 96
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00787.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 85,
                  "startColumn": 13,
                  "startLine": 85
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00787.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 98,
                  "startColumn": 21,
                  "startLine": 98
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00788.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 80,
                  "startColumn": 13,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00788.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 93,
                  "startColumn": 21,
                  "startLine": 93
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00789.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 80,
                  "startColumn": 13,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00790.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00794.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 76,
                  "startColumn": 86,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00800.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 93,
                  "startColumn": 9,
                  "startLine": 93
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00801.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00802.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 80,
                  "startColumn": 9,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00803.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00804.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00807.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 75,
                  "startColumn": 9,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00809.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 79,
                  "startColumn": 9,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00810.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00811.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 92,
                  "startColumn": 9,
                  "startLine": 92
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00812.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 78,
                  "startColumn": 9,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00813.java"
                },
                "region": {
                  "endColumn": 55,
                  "endLine": 81,
                  "startColumn": 13,
                  "startLine": 81
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00814.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 87,
                  "startColumn": 9,
                  "startLine": 87
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00814.java"
                },
                "region": {
                  "endColumn": 28,
                  "endLine": 91,
                  "startColumn": 9,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00815.java"
                },
                "region": {
                  "endColumn": 25,
                  "endLine": 86,
                  "startColumn": 9,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00816.java"
                },
                "region": {
                  "endColumn": 25,
                  "endLine": 91,
                  "startColumn": 9,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00817.java"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 92,
                  "startColumn": 24,
                  "startLine": 92
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00818.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 75,
                  "startColumn": 22,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00819.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 77,
                  "startColumn": 18,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00820.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 89,
                  "startColumn": 9,
                  "startLine": 89
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00821.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 90,
                  "startColumn": 9,
                  "startLine": 90
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00822.java"
                },
                "region": {
                  "endColumn": 62,
                  "endLine": 78,
                  "startColumn": 9,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00825.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 83,
                  "startColumn": 13,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00826.java"
                },
                "region": {
                  "endColumn": 98,
                  "endLine": 88,
                  "startColumn": 13,
                  "startLine": 87
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00833.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 78,
                  "startColumn": 49,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00833.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 84,
                  "startColumn": 9,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00834.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 80,
                  "startColumn": 53,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00834.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 86,
                  "startColumn": 9,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00836.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 74,
                  "startColumn": 53,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00836.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 80,
                  "startColumn": 9,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00838.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 101,
                  "startColumn": 13,
                  "startLine": 96
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00839.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 83,
                  "startColumn": 13,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00840.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 80,
                  "startColumn": 13,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00841.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 94,
                  "startColumn": 13,
                  "startLine": 94
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00845.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 80,
                  "startColumn": 13,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00846.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00847.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 87,
                  "startColumn": 13,
                  "startLine": 87
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00848.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00848.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00849.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 87,
                  "startColumn": 13,
                  "startLine": 87
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00850.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 87,
                  "startColumn": 37,
                  "startLine": 87
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00851.java"
                },
                "region": {
                  "endColumn": 93,
                  "endLine": 82,
                  "startColumn": 13,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00851.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 82,
                  "startColumn": 25,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00853.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 66,
                  "startColumn": 42,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00853.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 66,
                  "startColumn": 80,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00855.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 73,
                  "startColumn": 42,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00855.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 73,
                  "startColumn": 80,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00856.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 80,
                  "startColumn": 69,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00856.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 83,
                  "startColumn": 42,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00856.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 83,
                  "startColumn": 80,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00857.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 79,
                  "startColumn": 69,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00857.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 82,
                  "startColumn": 42,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00857.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 82,
                  "startColumn": 80,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00859.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 62,
                  "startColumn": 42,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00859.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 62,
                  "startColumn": 80,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00861.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 79,
                  "startColumn": 21,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00862.java"
                },
                "region": {
                  "endColumn": 87,
                  "endLine": 55,
                  "startColumn": 22,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00863.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 51,
                  "startColumn": 22,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00866.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00866.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 70,
                  "startColumn": 21,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00868.java"
                },
                "region": {
                  "endColumn": 83,
                  "endLine": 75,
                  "startColumn": 17,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00868.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 77,
                  "startColumn": 17,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00869.java"
                },
                "region": {
                  "endColumn": 83,
                  "endLine": 74,
                  "startColumn": 17,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00869.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 76,
                  "startColumn": 17,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00870.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 50,
                  "startColumn": 13,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00871.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00872.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 51,
                  "startColumn": 13,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00895.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 71,
                  "startColumn": 29,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00896.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00896.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 66,
                  "startColumn": 29,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00897.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 80,
                  "startColumn": 9,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00897.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 80,
                  "startColumn": 29,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00897.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 83,
                  "startColumn": 13,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00898.java"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00899.java"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 68,
                  "startColumn": 24,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00900.java"
                },
                "region": {
                  "endColumn": 61,
                  "endLine": 68,
                  "startColumn": 24,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00901.java"
                },
                "region": {
                  "endColumn": 60,
                  "endLine": 68,
                  "startColumn": 26,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00902.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 54,
                  "startColumn": 17,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00903.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 85,
                  "startColumn": 9,
                  "startLine": 85
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00905.java"
                },
                "region": {
                  "endColumn": 38,
                  "endLine": 70,
                  "startColumn": 13,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00906.java"
                },
                "region": {
                  "endColumn": 38,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00907.java"
                },
                "region": {
                  "endColumn": 38,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00908.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00909.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 63,
                  "startColumn": 13,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00910.java"
                },
                "region": {
                  "endColumn": 98,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00937.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00938.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00939.java"
                },
                "region": {
                  "endColumn": 71,
                  "endLine": 73,
                  "startColumn": 25,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00940.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 64,
                  "startColumn": 25,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00942.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00943.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00944.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00945.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00945.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 75,
                  "startColumn": 42,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00945.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 75,
                  "startColumn": 80,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00946.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00946.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 75,
                  "startColumn": 42,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00946.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 75,
                  "startColumn": 80,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00947.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00947.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 79,
                  "startColumn": 21,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00947.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 96,
                  "startColumn": 21,
                  "startLine": 88
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00948.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00948.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 78,
                  "startColumn": 21,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00948.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 95,
                  "startColumn": 21,
                  "startLine": 87
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00949.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00949.java"
                },
                "region": {
                  "endColumn": 87,
                  "endLine": 68,
                  "startColumn": 22,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00950.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00950.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 67,
                  "startColumn": 22,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00951.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00951.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 84,
                  "startColumn": 26,
                  "startLine": 84
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00952.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00952.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 87,
                  "startColumn": 26,
                  "startLine": 87
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00953.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00953.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 79,
                  "startColumn": 34,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00954.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00954.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 79,
                  "startColumn": 34,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00955.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00955.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 79,
                  "startColumn": 34,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00956.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00956.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 79,
                  "startColumn": 34,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00957.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00958.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00959.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00959.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 81,
                  "startColumn": 21,
                  "startLine": 81
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00959.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 98,
                  "startColumn": 21,
                  "startLine": 90
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00960.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00960.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 67,
                  "startColumn": 24,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00961.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00961.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 68,
                  "startColumn": 13,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00962.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00963.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00963.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 68,
                  "startColumn": 86,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00964.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00965.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00966.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00967.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00968.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00968.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 77,
                  "startColumn": 9,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00968.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 79,
                  "startColumn": 29,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00969.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00969.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 77,
                  "startColumn": 9,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00969.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 79,
                  "startColumn": 29,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00970.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00970.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 77,
                  "startColumn": 9,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00970.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 79,
                  "startColumn": 29,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00971.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00971.java"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 67,
                  "startColumn": 24,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00972.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00972.java"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 67,
                  "startColumn": 24,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00973.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00973.java"
                },
                "region": {
                  "endColumn": 61,
                  "endLine": 67,
                  "startColumn": 24,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00974.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00974.java"
                },
                "region": {
                  "endColumn": 60,
                  "endLine": 67,
                  "startColumn": 26,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00975.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00975.java"
                },
                "region": {
                  "endColumn": 60,
                  "endLine": 67,
                  "startColumn": 26,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00976.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00976.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 67,
                  "startColumn": 18,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00977.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00977.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 84,
                  "startColumn": 9,
                  "startLine": 84
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00978.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00978.java"
                },
                "region": {
                  "endColumn": 38,
                  "endLine": 88,
                  "startColumn": 13,
                  "startLine": 88
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00979.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00979.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 90,
                  "startColumn": 13,
                  "startLine": 90
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00980.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00980.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 76,
                  "startColumn": 13,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00981.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00981.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 90,
                  "startColumn": 13,
                  "startLine": 90
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00982.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00982.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 76,
                  "startColumn": 13,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00983.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00983.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00984.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00985.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00986.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00987.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00988.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00989.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00990.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00991.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00991.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00992.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00992.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00993.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00993.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 68,
                  "startColumn": 49,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00993.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00994.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00994.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 68,
                  "startColumn": 49,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00994.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00995.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00995.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00996.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 43,
                  "startColumn": 9,
                  "startLine": 43
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00996.java"
                },
                "region": {
                  "endColumn": 80,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00997.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 43,
                  "startColumn": 9,
                  "startLine": 43
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00997.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00998.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 43,
                  "startColumn": 9,
                  "startLine": 43
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00998.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00999.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 43,
                  "startColumn": 9,
                  "startLine": 43
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00999.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01000.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 43,
                  "startColumn": 9,
                  "startLine": 43
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01000.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01001.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01001.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01002.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01002.java"
                },
                "region": {
                  "endColumn": 72,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01003.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01003.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01004.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01004.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01005.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01005.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 70,
                  "startColumn": 13,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01006.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01006.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01006.java"
                },
                "region": {
                  "endColumn": 89,
                  "endLine": 74,
                  "startColumn": 13,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01007.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01007.java"
                },
                "region": {
                  "endColumn": 94,
                  "endLine": 71,
                  "startColumn": 13,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01008.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01008.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 70,
                  "startColumn": 13,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01009.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01009.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 70,
                  "startColumn": 13,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01010.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01010.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 70,
                  "startColumn": 13,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01011.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01011.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01011.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01012.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01012.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01012.java"
                },
                "region": {
                  "endColumn": 78,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01013.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01013.java"
                },
                "region": {
                  "endColumn": 99,
                  "endLine": 85,
                  "startColumn": 29,
                  "startLine": 84
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01013.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 91,
                  "startColumn": 17,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01014.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01014.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 82,
                  "startColumn": 29,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01014.java"
                },
                "region": {
                  "endColumn": 88,
                  "endLine": 84,
                  "startColumn": 13,
                  "startLine": 84
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01015.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 69,
                  "startColumn": 42,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01015.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 69,
                  "startColumn": 80,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01016.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 67,
                  "startColumn": 42,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01016.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 67,
                  "startColumn": 80,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01017.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 67,
                  "startColumn": 42,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01017.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 67,
                  "startColumn": 80,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01018.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 64,
                  "startColumn": 69,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01018.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 67,
                  "startColumn": 42,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01018.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 67,
                  "startColumn": 80,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01020.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 61,
                  "startColumn": 42,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01020.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 61,
                  "startColumn": 80,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01023.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 65,
                  "startColumn": 21,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01023.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 82,
                  "startColumn": 21,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01024.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 65,
                  "startColumn": 21,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01024.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 82,
                  "startColumn": 21,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01025.java"
                },
                "region": {
                  "endColumn": 87,
                  "endLine": 54,
                  "startColumn": 22,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01026.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 53,
                  "startColumn": 22,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01027.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 53,
                  "startColumn": 22,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01028.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 70,
                  "startColumn": 26,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01029.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 73,
                  "startColumn": 26,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01030.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 73,
                  "startColumn": 26,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01031.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 58,
                  "startColumn": 19,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01032.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01032.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 72,
                  "startColumn": 21,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01033.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01033.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 72,
                  "startColumn": 21,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01034.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01034.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 72,
                  "startColumn": 21,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01035.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01035.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 72,
                  "startColumn": 21,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01038.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 54,
                  "startColumn": 86,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01046.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01047.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01048.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 55,
                  "startColumn": 9,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01049.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 55,
                  "startColumn": 9,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01050.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01051.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 55,
                  "startColumn": 9,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01052.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 55,
                  "startColumn": 9,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01053.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01054.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01055.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01056.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01057.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01058.java"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01059.java"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 53,
                  "startColumn": 24,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01060.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 53,
                  "startColumn": 22,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01061.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 70,
                  "startColumn": 9,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01063.java"
                },
                "region": {
                  "endColumn": 62,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01064.java"
                },
                "region": {
                  "endColumn": 43,
                  "endLine": 62,
                  "startColumn": 13,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01065.java"
                },
                "region": {
                  "endColumn": 38,
                  "endLine": 74,
                  "startColumn": 13,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01066.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 62,
                  "startColumn": 13,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01067.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01068.java"
                },
                "region": {
                  "endColumn": 98,
                  "endLine": 64,
                  "startColumn": 13,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01080.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 60,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01081.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 60,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01082.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 60,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01083.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 62,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01084.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01085.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01086.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01087.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01087.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01088.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01088.java"
                },
                "region": {
                  "endColumn": 89,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01089.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01090.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01090.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01091.java"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01091.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01092.java"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01092.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01093.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01093.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01094.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01094.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01095.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01095.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01096.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01096.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 58,
                  "startColumn": 25,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01097.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01097.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 58,
                  "startColumn": 25,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01098.java"
                },
                "region": {
                  "endColumn": 72,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01098.java"
                },
                "region": {
                  "endColumn": 71,
                  "endLine": 58,
                  "startColumn": 25,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01099.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 79,
                  "startColumn": 42,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01099.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 79,
                  "startColumn": 80,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01102.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 74,
                  "startColumn": 69,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01102.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 77,
                  "startColumn": 42,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01102.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 77,
                  "startColumn": 80,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01103.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 74,
                  "startColumn": 69,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01103.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 77,
                  "startColumn": 42,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01103.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 77,
                  "startColumn": 80,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01105.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 71,
                  "startColumn": 42,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01105.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 71,
                  "startColumn": 80,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01106.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 71,
                  "startColumn": 42,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01106.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 71,
                  "startColumn": 80,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01107.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 71,
                  "startColumn": 42,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01107.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 71,
                  "startColumn": 80,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01109.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 63,
                  "startColumn": 22,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01110.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 80,
                  "startColumn": 26,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01111.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 68,
                  "startColumn": 19,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01112.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 68,
                  "startColumn": 19,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01113.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 69,
                  "startColumn": 13,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01113.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 82,
                  "startColumn": 21,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01114.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 69,
                  "startColumn": 13,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01114.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 82,
                  "startColumn": 21,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01115.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 69,
                  "startColumn": 13,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01115.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 82,
                  "startColumn": 21,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01116.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 75,
                  "startColumn": 34,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01117.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 75,
                  "startColumn": 34,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01119.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 63,
                  "startColumn": 24,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01123.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 64,
                  "startColumn": 13,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01127.java"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 63,
                  "startColumn": 24,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01128.java"
                },
                "region": {
                  "endColumn": 61,
                  "endLine": 63,
                  "startColumn": 24,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01129.java"
                },
                "region": {
                  "endColumn": 60,
                  "endLine": 63,
                  "startColumn": 26,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01130.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 63,
                  "startColumn": 17,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01131.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 63,
                  "startColumn": 17,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01132.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 63,
                  "startColumn": 17,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01133.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 63,
                  "startColumn": 18,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01134.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 80,
                  "startColumn": 9,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01142.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 64,
                  "startColumn": 49,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01142.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 70,
                  "startColumn": 9,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01143.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 64,
                  "startColumn": 49,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01143.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 70,
                  "startColumn": 9,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01144.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 64,
                  "startColumn": 53,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01144.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 70,
                  "startColumn": 9,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01145.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 64,
                  "startColumn": 53,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01145.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 70,
                  "startColumn": 9,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01146.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 64,
                  "startColumn": 53,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01146.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 70,
                  "startColumn": 9,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01148.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 69,
                  "startColumn": 42,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01148.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 69,
                  "startColumn": 80,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01149.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 69,
                  "startColumn": 42,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01149.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 69,
                  "startColumn": 80,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01150.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 66,
                  "startColumn": 69,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01150.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 69,
                  "startColumn": 42,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01150.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 69,
                  "startColumn": 80,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01154.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 67,
                  "startColumn": 21,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01154.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 84,
                  "startColumn": 21,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01155.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 55,
                  "startColumn": 22,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01156.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 72,
                  "startColumn": 26,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01157.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 72,
                  "startColumn": 26,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01158.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 60,
                  "startColumn": 19,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01159.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 60,
                  "startColumn": 19,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01160.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01160.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 74,
                  "startColumn": 21,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01161.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01161.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 74,
                  "startColumn": 21,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01162.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 55,
                  "startColumn": 24,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01163.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 55,
                  "startColumn": 24,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01165.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01166.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01167.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 56,
                  "startColumn": 86,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01171.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01172.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01173.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 56,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01174.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 56,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01175.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01176.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01177.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01178.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 56,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01179.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 56,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01180.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 56,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01181.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 56,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01182.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 65,
                  "startColumn": 9,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01182.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 67,
                  "startColumn": 29,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01183.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 55,
                  "startColumn": 22,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01184.java"
                },
                "region": {
                  "endColumn": 61,
                  "endLine": 55,
                  "startColumn": 24,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01185.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 72,
                  "startColumn": 9,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01186.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 72,
                  "startColumn": 9,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01187.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 72,
                  "startColumn": 9,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01188.java"
                },
                "region": {
                  "endColumn": 62,
                  "endLine": 56,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01189.java"
                },
                "region": {
                  "endColumn": 38,
                  "endLine": 76,
                  "startColumn": 13,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01190.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 64,
                  "startColumn": 13,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01191.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 64,
                  "startColumn": 13,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01192.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 64,
                  "startColumn": 13,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01193.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01194.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01203.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 56,
                  "startColumn": 49,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01203.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 62,
                  "startColumn": 9,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01204.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 56,
                  "startColumn": 49,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01204.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 62,
                  "startColumn": 9,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01205.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 56,
                  "startColumn": 49,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01205.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 62,
                  "startColumn": 9,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01206.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 56,
                  "startColumn": 49,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01206.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 62,
                  "startColumn": 9,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01207.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 62,
                  "startColumn": 9,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01208.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01209.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01210.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 64,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01211.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01212.java"
                },
                "region": {
                  "endColumn": 72,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01213.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01214.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01215.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01215.java"
                },
                "region": {
                  "endColumn": 89,
                  "endLine": 62,
                  "startColumn": 13,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01216.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01216.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01217.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01217.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01218.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01218.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01219.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01219.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01219.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 60,
                  "startColumn": 37,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01220.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01220.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 60,
                  "startColumn": 25,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01221.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01221.java"
                },
                "region": {
                  "endColumn": 95,
                  "endLine": 60,
                  "startColumn": 25,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01222.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01222.java"
                },
                "region": {
                  "endColumn": 95,
                  "endLine": 60,
                  "startColumn": 25,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01223.java"
                },
                "region": {
                  "endColumn": 99,
                  "endLine": 73,
                  "startColumn": 29,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01223.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 79,
                  "startColumn": 17,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01224.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 70,
                  "startColumn": 29,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01224.java"
                },
                "region": {
                  "endColumn": 88,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01225.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 70,
                  "startColumn": 29,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01225.java"
                },
                "region": {
                  "endColumn": 88,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01228.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 59,
                  "startColumn": 69,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01228.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 62,
                  "startColumn": 42,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01228.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 62,
                  "startColumn": 80,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01229.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 59,
                  "startColumn": 69,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01229.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 62,
                  "startColumn": 42,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01229.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 62,
                  "startColumn": 80,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01230.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 56,
                  "startColumn": 42,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01230.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 56,
                  "startColumn": 80,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01231.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 50,
                  "startColumn": 22,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01232.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 50,
                  "startColumn": 22,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01233.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 50,
                  "startColumn": 22,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01234.java"
                },
                "region": {
                  "endColumn": 87,
                  "endLine": 49,
                  "startColumn": 22,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01235.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 65,
                  "startColumn": 26,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01236.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 65,
                  "startColumn": 26,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01237.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 65,
                  "startColumn": 26,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01238.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01238.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 67,
                  "startColumn": 21,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01239.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 60,
                  "startColumn": 34,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01240.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01240.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 67,
                  "startColumn": 21,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01241.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 62,
                  "startColumn": 21,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01241.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 79,
                  "startColumn": 21,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01242.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 62,
                  "startColumn": 21,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01242.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 79,
                  "startColumn": 21,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01243.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 61,
                  "startColumn": 21,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01243.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 79,
                  "startColumn": 21,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01244.java"
                },
                "region": {
                  "endColumn": 83,
                  "endLine": 54,
                  "startColumn": 17,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01244.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 56,
                  "startColumn": 17,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01246.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 49,
                  "startColumn": 13,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01247.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 49,
                  "startColumn": 86,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01251.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 52,
                  "startColumn": 9,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01252.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 50,
                  "startColumn": 9,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01253.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 50,
                  "startColumn": 9,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01254.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 49,
                  "startColumn": 9,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01255.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 49,
                  "startColumn": 9,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01256.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 49,
                  "startColumn": 9,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01257.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 49,
                  "startColumn": 9,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01258.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 50,
                  "startColumn": 9,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01259.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 50,
                  "startColumn": 9,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01260.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 50,
                  "startColumn": 9,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01261.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 49,
                  "startColumn": 9,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01262.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 49,
                  "startColumn": 9,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01263.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 49,
                  "startColumn": 9,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01264.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 49,
                  "startColumn": 9,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01265.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 52,
                  "startColumn": 13,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01266.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 52,
                  "startColumn": 13,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01267.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 49,
                  "startColumn": 9,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01268.java"
                },
                "region": {
                  "endColumn": 55,
                  "endLine": 52,
                  "startColumn": 13,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01269.java"
                },
                "region": {
                  "endColumn": 25,
                  "endLine": 62,
                  "startColumn": 9,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01270.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 60,
                  "startColumn": 9,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01270.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 60,
                  "startColumn": 29,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01270.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 63,
                  "startColumn": 13,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01271.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 48,
                  "startColumn": 22,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01272.java"
                },
                "region": {
                  "endColumn": 61,
                  "endLine": 48,
                  "startColumn": 24,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01273.java"
                },
                "region": {
                  "endColumn": 61,
                  "endLine": 48,
                  "startColumn": 24,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01274.java"
                },
                "region": {
                  "endColumn": 60,
                  "endLine": 48,
                  "startColumn": 26,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01275.java"
                },
                "region": {
                  "endColumn": 60,
                  "endLine": 48,
                  "startColumn": 26,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01276.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 48,
                  "startColumn": 17,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01277.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 48,
                  "startColumn": 18,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01278.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 48,
                  "startColumn": 18,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01279.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 48,
                  "startColumn": 18,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01280.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 65,
                  "startColumn": 9,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01281.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 65,
                  "startColumn": 9,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01282.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 65,
                  "startColumn": 9,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01283.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 65,
                  "startColumn": 9,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01284.java"
                },
                "region": {
                  "endColumn": 62,
                  "endLine": 49,
                  "startColumn": 9,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01285.java"
                },
                "region": {
                  "endColumn": 43,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01286.java"
                },
                "region": {
                  "endColumn": 38,
                  "endLine": 69,
                  "startColumn": 13,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01287.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01288.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01289.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01290.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01299.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 49,
                  "startColumn": 49,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01299.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 55,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01300.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 49,
                  "startColumn": 49,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01300.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 55,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01301.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01302.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01303.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01304.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01305.java"
                },
                "region": {
                  "endColumn": 72,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01306.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01307.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01308.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01308.java"
                },
                "region": {
                  "endColumn": 89,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01309.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01310.java"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01310.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01311.java"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01311.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01312.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01312.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01313.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01313.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 53,
                  "startColumn": 25,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01314.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01314.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 53,
                  "startColumn": 25,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01315.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01315.java"
                },
                "region": {
                  "endColumn": 95,
                  "endLine": 53,
                  "startColumn": 25,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01316.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 63,
                  "startColumn": 29,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01316.java"
                },
                "region": {
                  "endColumn": 88,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01317.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 68,
                  "startColumn": 42,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01317.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 68,
                  "startColumn": 80,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01318.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 68,
                  "startColumn": 42,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01318.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 68,
                  "startColumn": 80,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01320.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 66,
                  "startColumn": 42,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01320.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 66,
                  "startColumn": 80,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01322.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 63,
                  "startColumn": 69,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01322.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 66,
                  "startColumn": 42,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01322.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 66,
                  "startColumn": 80,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01323.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 63,
                  "startColumn": 69,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01323.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 66,
                  "startColumn": 42,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01323.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 66,
                  "startColumn": 80,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01325.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 60,
                  "startColumn": 42,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01325.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 60,
                  "startColumn": 80,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01326.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 64,
                  "startColumn": 21,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01326.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 81,
                  "startColumn": 21,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01327.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 64,
                  "startColumn": 21,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01327.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 81,
                  "startColumn": 21,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01328.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 69,
                  "startColumn": 26,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01329.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 72,
                  "startColumn": 26,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01330.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01330.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 71,
                  "startColumn": 21,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01331.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01331.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 71,
                  "startColumn": 21,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01333.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 53,
                  "startColumn": 86,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01334.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 53,
                  "startColumn": 86,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01335.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 56,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01336.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01337.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01338.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 53,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01339.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 53,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01340.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 53,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01341.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01342.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01343.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01344.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01345.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 53,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01346.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 53,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01347.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 53,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01348.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 53,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01349.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 53,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01350.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01351.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01352.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 53,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01353.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 62,
                  "startColumn": 9,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01353.java"
                },
                "region": {
                  "endColumn": 28,
                  "endLine": 66,
                  "startColumn": 9,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01354.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 52,
                  "startColumn": 22,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01355.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 52,
                  "startColumn": 22,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01356.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 52,
                  "startColumn": 22,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01357.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 52,
                  "startColumn": 17,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01358.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 52,
                  "startColumn": 17,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01360.java"
                },
                "region": {
                  "endColumn": 43,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01361.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01362.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01363.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01364.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01365.java"
                },
                "region": {
                  "endColumn": 98,
                  "endLine": 63,
                  "startColumn": 13,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01374.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 59,
                  "startColumn": 9,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01375.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 53,
                  "startColumn": 49,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01375.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 59,
                  "startColumn": 9,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01376.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 53,
                  "startColumn": 53,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01376.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 59,
                  "startColumn": 9,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01377.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 53,
                  "startColumn": 53,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01377.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 59,
                  "startColumn": 9,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01378.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01379.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 62,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01380.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 62,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01381.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01382.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01383.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01384.java"
                },
                "region": {
                  "endColumn": 72,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01385.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01386.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01386.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01387.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01387.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01388.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01388.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01389.java"
                },
                "region": {
                  "endColumn": 95,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01390.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01390.java"
                },
                "region": {
                  "endColumn": 89,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01391.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01391.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01391.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 57,
                  "startColumn": 37,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01392.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01392.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01392.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 57,
                  "startColumn": 37,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01393.java"
                },
                "region": {
                  "endColumn": 72,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01393.java"
                },
                "region": {
                  "endColumn": 71,
                  "endLine": 57,
                  "startColumn": 25,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01394.java"
                },
                "region": {
                  "endColumn": 72,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01394.java"
                },
                "region": {
                  "endColumn": 71,
                  "endLine": 57,
                  "startColumn": 25,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01395.java"
                },
                "region": {
                  "endColumn": 93,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01395.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 57,
                  "startColumn": 25,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01396.java"
                },
                "region": {
                  "endColumn": 93,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01396.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 57,
                  "startColumn": 25,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01397.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 67,
                  "startColumn": 29,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01397.java"
                },
                "region": {
                  "endColumn": 88,
                  "endLine": 69,
                  "startColumn": 13,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01398.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 76,
                  "startColumn": 42,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01398.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 76,
                  "startColumn": 80,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01402.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 74,
                  "startColumn": 21,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01402.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 91,
                  "startColumn": 21,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01403.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 64,
                  "startColumn": 22,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01404.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 62,
                  "startColumn": 22,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01405.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 67,
                  "startColumn": 19,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01406.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 67,
                  "startColumn": 19,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01407.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 74,
                  "startColumn": 34,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01408.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 68,
                  "startColumn": 13,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01408.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 81,
                  "startColumn": 21,
                  "startLine": 81
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01411.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 63,
                  "startColumn": 13,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01417.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 66,
                  "startColumn": 9,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01418.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01419.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01420.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 63,
                  "startColumn": 9,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01421.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01422.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01423.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01424.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01425.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 63,
                  "startColumn": 9,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01426.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 63,
                  "startColumn": 9,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01427.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 63,
                  "startColumn": 9,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01428.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 63,
                  "startColumn": 9,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01429.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 63,
                  "startColumn": 9,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01430.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01430.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 74,
                  "startColumn": 29,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01430.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01431.java"
                },
                "region": {
                  "endColumn": 61,
                  "endLine": 62,
                  "startColumn": 24,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01432.java"
                },
                "region": {
                  "endColumn": 61,
                  "endLine": 62,
                  "startColumn": 24,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01433.java"
                },
                "region": {
                  "endColumn": 60,
                  "endLine": 62,
                  "startColumn": 26,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01434.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 62,
                  "startColumn": 17,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01435.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 62,
                  "startColumn": 17,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01437.java"
                },
                "region": {
                  "endColumn": 62,
                  "endLine": 63,
                  "startColumn": 9,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01438.java"
                },
                "region": {
                  "endColumn": 62,
                  "endLine": 63,
                  "startColumn": 9,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01439.java"
                },
                "region": {
                  "endColumn": 62,
                  "endLine": 63,
                  "startColumn": 9,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01440.java"
                },
                "region": {
                  "endColumn": 43,
                  "endLine": 71,
                  "startColumn": 13,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01441.java"
                },
                "region": {
                  "endColumn": 38,
                  "endLine": 83,
                  "startColumn": 13,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01442.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 71,
                  "startColumn": 13,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01443.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01444.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 70,
                  "startColumn": 13,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01445.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 70,
                  "startColumn": 13,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01446.java"
                },
                "region": {
                  "endColumn": 98,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01454.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 63,
                  "startColumn": 49,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01454.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 69,
                  "startColumn": 9,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01455.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 63,
                  "startColumn": 49,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01455.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 69,
                  "startColumn": 9,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01456.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 63,
                  "startColumn": 49,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01456.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 69,
                  "startColumn": 9,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01457.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 63,
                  "startColumn": 49,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01457.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 69,
                  "startColumn": 9,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01458.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 69,
                  "startColumn": 9,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01459.java"
                },
                "region": {
                  "endColumn": 80,
                  "endLine": 67,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01460.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 71,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01461.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 71,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01462.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01463.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01464.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01465.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01466.java"
                },
                "region": {
                  "endColumn": 32,
                  "endLine": 80,
                  "startColumn": 13,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01467.java"
                },
                "region": {
                  "endColumn": 95,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01468.java"
                },
                "region": {
                  "endColumn": 95,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01469.java"
                },
                "region": {
                  "endColumn": 95,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01470.java"
                },
                "region": {
                  "endColumn": 94,
                  "endLine": 66,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01471.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01472.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 68,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01472.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 67,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01473.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 67,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01473.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 67,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01474.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 67,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01474.java"
                },
                "region": {
                  "endColumn": 95,
                  "endLine": 67,
                  "startColumn": 25,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01475.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 67,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01475.java"
                },
                "region": {
                  "endColumn": 95,
                  "endLine": 67,
                  "startColumn": 25,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01476.java"
                },
                "region": {
                  "endColumn": 93,
                  "endLine": 67,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01476.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 67,
                  "startColumn": 25,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01477.java"
                },
                "region": {
                  "endColumn": 93,
                  "endLine": 67,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01477.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 67,
                  "startColumn": 25,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01478.java"
                },
                "region": {
                  "endColumn": 99,
                  "endLine": 80,
                  "startColumn": 29,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01478.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 86,
                  "startColumn": 17,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01479.java"
                },
                "region": {
                  "endColumn": 99,
                  "endLine": 80,
                  "startColumn": 29,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01479.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 86,
                  "startColumn": 17,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01480.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 66,
                  "startColumn": 42,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01480.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 66,
                  "startColumn": 80,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01483.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 64,
                  "startColumn": 42,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01483.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 64,
                  "startColumn": 80,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01484.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 64,
                  "startColumn": 42,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01484.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 64,
                  "startColumn": 80,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01486.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 61,
                  "startColumn": 69,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01486.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 64,
                  "startColumn": 42,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01486.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 64,
                  "startColumn": 80,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01489.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 58,
                  "startColumn": 42,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01489.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 58,
                  "startColumn": 80,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01490.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 62,
                  "startColumn": 21,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01491.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 61,
                  "startColumn": 21,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01492.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 61,
                  "startColumn": 21,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01493.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 52,
                  "startColumn": 22,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01494.java"
                },
                "region": {
                  "endColumn": 87,
                  "endLine": 51,
                  "startColumn": 22,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01495.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 70,
                  "startColumn": 26,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01496.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 55,
                  "startColumn": 19,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01497.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01497.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 69,
                  "startColumn": 21,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01498.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 62,
                  "startColumn": 34,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01499.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01499.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 69,
                  "startColumn": 21,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01501.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 63,
                  "startColumn": 21,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01502.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 50,
                  "startColumn": 24,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01503.java"
                },
                "region": {
                  "endColumn": 83,
                  "endLine": 56,
                  "startColumn": 17,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01503.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 58,
                  "startColumn": 17,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01504.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 51,
                  "startColumn": 86,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01516.java"
                },
                "region": {
                  "endColumn": 25,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01517.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 62,
                  "startColumn": 9,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01517.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 62,
                  "startColumn": 29,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01517.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01518.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 50,
                  "startColumn": 22,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01519.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 50,
                  "startColumn": 22,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01520.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 50,
                  "startColumn": 18,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01521.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 67,
                  "startColumn": 9,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01526.java"
                },
                "region": {
                  "endColumn": 43,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01527.java"
                },
                "region": {
                  "endColumn": 43,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01528.java"
                },
                "region": {
                  "endColumn": 43,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01529.java"
                },
                "region": {
                  "endColumn": 38,
                  "endLine": 71,
                  "startColumn": 13,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01530.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01531.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01532.java"
                },
                "region": {
                  "endColumn": 98,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01533.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01557.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01558.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01559.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01560.java"
                },
                "region": {
                  "endColumn": 95,
                  "endLine": 55,
                  "startColumn": 25,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01565.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 61,
                  "startColumn": 69,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01565.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 64,
                  "startColumn": 42,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01565.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 64,
                  "startColumn": 80,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01566.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 58,
                  "startColumn": 42,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01566.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 58,
                  "startColumn": 80,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01568.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 61,
                  "startColumn": 21,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01568.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 78,
                  "startColumn": 21,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01569.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 61,
                  "startColumn": 21,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01569.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 78,
                  "startColumn": 21,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01570.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 52,
                  "startColumn": 22,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01571.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 50,
                  "startColumn": 22,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01572.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 55,
                  "startColumn": 19,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01573.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 55,
                  "startColumn": 19,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01574.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01574.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 69,
                  "startColumn": 21,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01575.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 50,
                  "startColumn": 24,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01577.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 51,
                  "startColumn": 86,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01583.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01584.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 52,
                  "startColumn": 9,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01585.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 52,
                  "startColumn": 9,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01586.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 51,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01587.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 52,
                  "startColumn": 9,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01588.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 52,
                  "startColumn": 9,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01589.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 52,
                  "startColumn": 9,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01590.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 52,
                  "startColumn": 9,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01591.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 52,
                  "startColumn": 9,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01592.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 51,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01593.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 51,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01594.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 51,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01595.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 51,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01596.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01597.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01598.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 51,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01599.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 51,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01600.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 60,
                  "startColumn": 9,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01600.java"
                },
                "region": {
                  "endColumn": 28,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01601.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 60,
                  "startColumn": 9,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01601.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 62,
                  "startColumn": 29,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01602.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 50,
                  "startColumn": 22,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01603.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 50,
                  "startColumn": 18,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01606.java"
                },
                "region": {
                  "endColumn": 43,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01607.java"
                },
                "region": {
                  "endColumn": 38,
                  "endLine": 71,
                  "startColumn": 13,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01608.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01609.java"
                },
                "region": {
                  "endColumn": 98,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01610.java"
                },
                "region": {
                  "endColumn": 98,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01615.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01616.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 51,
                  "startColumn": 49,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01616.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01617.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01618.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 51,
                  "startColumn": 53,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01618.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01619.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 51,
                  "startColumn": 53,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01619.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01620.java"
                },
                "region": {
                  "endColumn": 80,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01621.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01622.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01623.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01624.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01625.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01625.java"
                },
                "region": {
                  "endColumn": 89,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01626.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01626.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01627.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01627.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01628.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01628.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01629.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01629.java"
                },
                "region": {
                  "endColumn": 95,
                  "endLine": 55,
                  "startColumn": 25,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01630.java"
                },
                "region": {
                  "endColumn": 72,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01630.java"
                },
                "region": {
                  "endColumn": 71,
                  "endLine": 55,
                  "startColumn": 25,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01631.java"
                },
                "region": {
                  "endColumn": 93,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01631.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 55,
                  "startColumn": 25,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01632.java"
                },
                "region": {
                  "endColumn": 99,
                  "endLine": 68,
                  "startColumn": 29,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01632.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 74,
                  "startColumn": 17,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01633.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 65,
                  "startColumn": 29,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01633.java"
                },
                "region": {
                  "endColumn": 88,
                  "endLine": 67,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01634.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 88,
                  "startColumn": 42,
                  "startLine": 88
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01634.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 88,
                  "startColumn": 80,
                  "startLine": 88
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01637.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 86,
                  "startColumn": 42,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01637.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 86,
                  "startColumn": 80,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01638.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 83,
                  "startColumn": 69,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01638.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 86,
                  "startColumn": 42,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01638.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 86,
                  "startColumn": 80,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01639.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 83,
                  "startColumn": 69,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01639.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 86,
                  "startColumn": 42,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01639.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 86,
                  "startColumn": 80,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01641.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 80,
                  "startColumn": 42,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01641.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 80,
                  "startColumn": 80,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01642.java"
                },
                "region": {
                  "endColumn": 87,
                  "endLine": 73,
                  "startColumn": 22,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01643.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 89,
                  "startColumn": 26,
                  "startLine": 89
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01644.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 77,
                  "startColumn": 19,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01645.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 77,
                  "startColumn": 19,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01646.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01646.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 91,
                  "startColumn": 21,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01647.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01647.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 91,
                  "startColumn": 21,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01648.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 72,
                  "startColumn": 24,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01649.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01650.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01651.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01653.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 73,
                  "startColumn": 86,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01657.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 76,
                  "startColumn": 9,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01658.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01659.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01660.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01661.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01662.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01663.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01664.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01665.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01666.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01667.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01668.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01669.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01670.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01671.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01672.java"
                },
                "region": {
                  "endColumn": 25,
                  "endLine": 86,
                  "startColumn": 9,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01673.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 82,
                  "startColumn": 9,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01673.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 84,
                  "startColumn": 29,
                  "startLine": 84
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01674.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 84,
                  "startColumn": 9,
                  "startLine": 84
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01674.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 84,
                  "startColumn": 29,
                  "startLine": 84
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01674.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 87,
                  "startColumn": 13,
                  "startLine": 87
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01675.java"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01676.java"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 72,
                  "startColumn": 24,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01677.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 72,
                  "startColumn": 22,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01678.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 72,
                  "startColumn": 22,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01679.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 72,
                  "startColumn": 22,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01680.java"
                },
                "region": {
                  "endColumn": 60,
                  "endLine": 72,
                  "startColumn": 26,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01681.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 72,
                  "startColumn": 17,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01682.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 89,
                  "startColumn": 9,
                  "startLine": 89
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01683.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 89,
                  "startColumn": 9,
                  "startLine": 89
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01685.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 95,
                  "startColumn": 13,
                  "startLine": 95
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01686.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 81,
                  "startColumn": 13,
                  "startLine": 81
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01687.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 95,
                  "startColumn": 13,
                  "startLine": 95
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01688.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 82,
                  "startColumn": 13,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01689.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 82,
                  "startColumn": 13,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01690.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 80,
                  "startColumn": 13,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01691.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 80,
                  "startColumn": 13,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01692.java"
                },
                "region": {
                  "endColumn": 98,
                  "endLine": 83,
                  "startColumn": 13,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01693.java"
                },
                "region": {
                  "endColumn": 98,
                  "endLine": 83,
                  "startColumn": 13,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01708.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 79,
                  "startColumn": 9,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01709.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 73,
                  "startColumn": 49,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01709.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 79,
                  "startColumn": 9,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01710.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 73,
                  "startColumn": 53,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01710.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 79,
                  "startColumn": 9,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01711.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 73,
                  "startColumn": 53,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01711.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 79,
                  "startColumn": 9,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01712.java"
                },
                "region": {
                  "endColumn": 80,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01713.java"
                },
                "region": {
                  "endColumn": 80,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01714.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 81,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01715.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 81,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01716.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 81,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01717.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 82,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01718.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 82,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01719.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01720.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01721.java"
                },
                "region": {
                  "endColumn": 32,
                  "endLine": 90,
                  "startColumn": 13,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01722.java"
                },
                "region": {
                  "endColumn": 32,
                  "endLine": 90,
                  "startColumn": 13,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01723.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01723.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 79,
                  "startColumn": 13,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01724.java"
                },
                "region": {
                  "endColumn": 95,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01725.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01726.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01727.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01728.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01728.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01729.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01729.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01730.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01730.java"
                },
                "region": {
                  "endColumn": 78,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01731.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01731.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01732.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01732.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01732.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 77,
                  "startColumn": 37,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01733.java"
                },
                "region": {
                  "endColumn": 93,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01733.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 77,
                  "startColumn": 25,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01734.java"
                },
                "region": {
                  "endColumn": 99,
                  "endLine": 90,
                  "startColumn": 29,
                  "startLine": 89
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01734.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 96,
                  "startColumn": 17,
                  "startLine": 96
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01735.java"
                },
                "region": {
                  "endColumn": 99,
                  "endLine": 90,
                  "startColumn": 29,
                  "startLine": 89
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01735.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 96,
                  "startColumn": 17,
                  "startLine": 96
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01736.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 87,
                  "startColumn": 29,
                  "startLine": 87
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01736.java"
                },
                "region": {
                  "endColumn": 88,
                  "endLine": 89,
                  "startColumn": 13,
                  "startLine": 89
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01740.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 57,
                  "startColumn": 42,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01740.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 57,
                  "startColumn": 80,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01741.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 57,
                  "startColumn": 42,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01741.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 57,
                  "startColumn": 80,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01742.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 57,
                  "startColumn": 42,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01742.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 57,
                  "startColumn": 80,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01743.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 61,
                  "startColumn": 21,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01744.java"
                },
                "region": {
                  "endColumn": 87,
                  "endLine": 50,
                  "startColumn": 22,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01745.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 49,
                  "startColumn": 22,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01746.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 66,
                  "startColumn": 26,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01747.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 69,
                  "startColumn": 26,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01748.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 54,
                  "startColumn": 19,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01749.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 54,
                  "startColumn": 19,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01750.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 54,
                  "startColumn": 19,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01751.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01751.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 68,
                  "startColumn": 21,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01752.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 61,
                  "startColumn": 34,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01753.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 63,
                  "startColumn": 21,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01754.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 63,
                  "startColumn": 21,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01755.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 62,
                  "startColumn": 21,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01756.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 62,
                  "startColumn": 21,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01757.java"
                },
                "region": {
                  "endColumn": 83,
                  "endLine": 55,
                  "startColumn": 17,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01757.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 57,
                  "startColumn": 17,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01761.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 50,
                  "startColumn": 13,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01778.java"
                },
                "region": {
                  "endColumn": 25,
                  "endLine": 63,
                  "startColumn": 9,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01779.java"
                },
                "region": {
                  "endColumn": 25,
                  "endLine": 63,
                  "startColumn": 9,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01780.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 61,
                  "startColumn": 9,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01780.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 61,
                  "startColumn": 29,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01780.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 64,
                  "startColumn": 13,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01781.java"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 49,
                  "startColumn": 24,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01782.java"
                },
                "region": {
                  "endColumn": 61,
                  "endLine": 49,
                  "startColumn": 24,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01783.java"
                },
                "region": {
                  "endColumn": 61,
                  "endLine": 49,
                  "startColumn": 24,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01784.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 49,
                  "startColumn": 17,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01785.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 49,
                  "startColumn": 17,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01786.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 49,
                  "startColumn": 17,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01787.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 49,
                  "startColumn": 17,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01788.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 49,
                  "startColumn": 18,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01789.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 66,
                  "startColumn": 9,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01791.java"
                },
                "region": {
                  "endColumn": 43,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01792.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01793.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01794.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01795.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01796.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01815.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01816.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01817.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01818.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01819.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 54,
                  "startColumn": 25,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01820.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 54,
                  "startColumn": 25,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01822.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01822.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 83,
                  "startColumn": 42,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01822.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 83,
                  "startColumn": 80,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01823.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01823.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 83,
                  "startColumn": 42,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01823.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 83,
                  "startColumn": 80,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01824.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01825.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01826.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01827.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01828.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01829.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01829.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 75,
                  "startColumn": 42,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01829.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 75,
                  "startColumn": 80,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01830.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01830.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 75,
                  "startColumn": 42,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01830.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 75,
                  "startColumn": 80,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01831.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01831.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 79,
                  "startColumn": 21,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01831.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 96,
                  "startColumn": 21,
                  "startLine": 88
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01832.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01832.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 79,
                  "startColumn": 21,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01832.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 96,
                  "startColumn": 21,
                  "startLine": 88
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01833.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01833.java"
                },
                "region": {
                  "endColumn": 87,
                  "endLine": 68,
                  "startColumn": 22,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01834.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01834.java"
                },
                "region": {
                  "endColumn": 87,
                  "endLine": 68,
                  "startColumn": 22,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01835.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01835.java"
                },
                "region": {
                  "endColumn": 87,
                  "endLine": 68,
                  "startColumn": 22,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01836.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01836.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 84,
                  "startColumn": 26,
                  "startLine": 84
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01837.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01837.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 87,
                  "startColumn": 26,
                  "startLine": 87
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01838.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01838.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 72,
                  "startColumn": 19,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01839.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01839.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01839.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 86,
                  "startColumn": 21,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01840.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01840.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01840.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 86,
                  "startColumn": 21,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01841.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01841.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 79,
                  "startColumn": 34,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01842.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01842.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 67,
                  "startColumn": 24,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01843.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01843.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 67,
                  "startColumn": 24,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01844.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01844.java"
                },
                "region": {
                  "endColumn": 83,
                  "endLine": 73,
                  "startColumn": 17,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01844.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 75,
                  "startColumn": 17,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01845.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01845.java"
                },
                "region": {
                  "endColumn": 83,
                  "endLine": 73,
                  "startColumn": 17,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01845.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 75,
                  "startColumn": 17,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01846.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01846.java"
                },
                "region": {
                  "endColumn": 83,
                  "endLine": 73,
                  "startColumn": 17,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01846.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 75,
                  "startColumn": 17,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01847.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01848.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01849.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01850.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01850.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 77,
                  "startColumn": 9,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01850.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 79,
                  "startColumn": 29,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01851.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01851.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 77,
                  "startColumn": 9,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01851.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 79,
                  "startColumn": 29,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01852.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01852.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 79,
                  "startColumn": 9,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01852.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 79,
                  "startColumn": 29,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01852.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 82,
                  "startColumn": 13,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01853.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01853.java"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 68,
                  "startColumn": 9,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01854.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01854.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 67,
                  "startColumn": 22,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01855.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01855.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 67,
                  "startColumn": 18,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01856.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01856.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 67,
                  "startColumn": 18,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01857.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01857.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 67,
                  "startColumn": 18,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01858.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01858.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 67,
                  "startColumn": 18,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01859.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01859.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 67,
                  "startColumn": 18,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01860.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01860.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 67,
                  "startColumn": 18,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01861.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01861.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 84,
                  "startColumn": 9,
                  "startLine": 84
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01862.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01863.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01864.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01864.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01865.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01865.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01866.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01867.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01868.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01869.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01870.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01871.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01872.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01872.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01873.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01873.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 68,
                  "startColumn": 49,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01873.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01874.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01874.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01875.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01875.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01876.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01876.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 68,
                  "startColumn": 53,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01876.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01877.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 43,
                  "startColumn": 9,
                  "startLine": 43
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01877.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01878.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01878.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01879.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01879.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 76,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01880.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01880.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01881.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01881.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 70,
                  "startColumn": 13,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01882.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01882.java"
                },
                "region": {
                  "endColumn": 32,
                  "endLine": 85,
                  "startColumn": 13,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01883.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01883.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 70,
                  "startColumn": 13,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01884.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01884.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 70,
                  "startColumn": 13,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01885.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01885.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01885.java"
                },
                "region": {
                  "endColumn": 78,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01886.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01886.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01886.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01887.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01887.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01887.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 72,
                  "startColumn": 25,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01888.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01888.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01888.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 72,
                  "startColumn": 25,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01889.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01889.java"
                },
                "region": {
                  "endColumn": 72,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01889.java"
                },
                "region": {
                  "endColumn": 71,
                  "endLine": 72,
                  "startColumn": 25,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01890.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01890.java"
                },
                "region": {
                  "endColumn": 93,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01890.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 72,
                  "startColumn": 25,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01891.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01891.java"
                },
                "region": {
                  "endColumn": 93,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01891.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 72,
                  "startColumn": 25,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01892.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01892.java"
                },
                "region": {
                  "endColumn": 99,
                  "endLine": 85,
                  "startColumn": 29,
                  "startLine": 84
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01892.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 91,
                  "startColumn": 17,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01893.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01893.java"
                },
                "region": {
                  "endColumn": 99,
                  "endLine": 85,
                  "startColumn": 29,
                  "startLine": 84
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01893.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 91,
                  "startColumn": 17,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01894.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 42,
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
          },
          "ruleId": "CWE-1004"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01894.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 82,
                  "startColumn": 29,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01894.java"
                },
                "region": {
                  "endColumn": 88,
                  "endLine": 84,
                  "startColumn": 13,
                  "startLine": 84
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01895.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 67,
                  "startColumn": 42,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01895.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 67,
                  "startColumn": 80,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01897.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 64,
                  "startColumn": 69,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01897.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 67,
                  "startColumn": 42,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01897.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 67,
                  "startColumn": 80,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01898.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 64,
                  "startColumn": 69,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01898.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 67,
                  "startColumn": 42,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01898.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 67,
                  "startColumn": 80,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01900.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 61,
                  "startColumn": 42,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01900.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 61,
                  "startColumn": 80,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01902.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 64,
                  "startColumn": 21,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01902.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 81,
                  "startColumn": 21,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01903.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 64,
                  "startColumn": 21,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01903.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 81,
                  "startColumn": 21,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01904.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 53,
                  "startColumn": 22,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01905.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 58,
                  "startColumn": 19,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01906.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01906.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 72,
                  "startColumn": 21,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01907.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01907.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 72,
                  "startColumn": 21,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01909.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 66,
                  "startColumn": 21,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01909.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 84,
                  "startColumn": 21,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01910.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 53,
                  "startColumn": 24,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01911.java"
                },
                "region": {
                  "endColumn": 83,
                  "endLine": 59,
                  "startColumn": 17,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01911.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 61,
                  "startColumn": 17,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01914.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01915.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 55,
                  "startColumn": 9,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01916.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01917.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01918.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 55,
                  "startColumn": 9,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01919.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 55,
                  "startColumn": 9,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01920.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 55,
                  "startColumn": 9,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01921.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 55,
                  "startColumn": 9,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01922.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 55,
                  "startColumn": 9,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01923.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 55,
                  "startColumn": 9,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01924.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 55,
                  "startColumn": 9,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01925.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01926.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01927.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01928.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 63,
                  "startColumn": 9,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01928.java"
                },
                "region": {
                  "endColumn": 28,
                  "endLine": 67,
                  "startColumn": 9,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01929.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 65,
                  "startColumn": 9,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01929.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 65,
                  "startColumn": 29,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01929.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 68,
                  "startColumn": 13,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01930.java"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 53,
                  "startColumn": 24,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01931.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 53,
                  "startColumn": 22,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01932.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 53,
                  "startColumn": 17,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01933.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 53,
                  "startColumn": 18,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01934.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 53,
                  "startColumn": 18,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01936.java"
                },
                "region": {
                  "endColumn": 43,
                  "endLine": 62,
                  "startColumn": 13,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01937.java"
                },
                "region": {
                  "endColumn": 43,
                  "endLine": 62,
                  "startColumn": 13,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01938.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 76,
                  "startColumn": 13,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01939.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 62,
                  "startColumn": 13,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01940.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 63,
                  "startColumn": 13,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01941.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01942.java"
                },
                "region": {
                  "endColumn": 98,
                  "endLine": 64,
                  "startColumn": 13,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01943.java"
                },
                "region": {
                  "endColumn": 98,
                  "endLine": 64,
                  "startColumn": 13,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01944.java"
                },
                "region": {
                  "endColumn": 98,
                  "endLine": 64,
                  "startColumn": 13,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01955.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 60,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01956.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 60,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01957.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 60,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01958.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 54,
                  "startColumn": 49,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01958.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 60,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01959.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 54,
                  "startColumn": 53,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01959.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 60,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01960.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 54,
                  "startColumn": 53,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01960.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 60,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01961.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01962.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01963.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01964.java"
                },
                "region": {
                  "endColumn": 32,
                  "endLine": 71,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01965.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01965.java"
                },
                "region": {
                  "endColumn": 89,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01966.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01967.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01968.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01969.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01969.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01970.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01970.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01971.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01971.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01972.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01972.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01973.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01973.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 58,
                  "startColumn": 25,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01974.java"
                },
                "region": {
                  "endColumn": 99,
                  "endLine": 71,
                  "startColumn": 29,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01974.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 77,
                  "startColumn": 17,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01978.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 74,
                  "startColumn": 69,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01978.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 77,
                  "startColumn": 42,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01978.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 77,
                  "startColumn": 80,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01980.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 71,
                  "startColumn": 42,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01980.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 71,
                  "startColumn": 80,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01981.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 71,
                  "startColumn": 42,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01981.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 71,
                  "startColumn": 80,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01983.java"
                },
                "region": {
                  "endColumn": 87,
                  "endLine": 64,
                  "startColumn": 22,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01984.java"
                },
                "region": {
                  "endColumn": 87,
                  "endLine": 64,
                  "startColumn": 22,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01985.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 63,
                  "startColumn": 22,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01986.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 83,
                  "startColumn": 26,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01987.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 83,
                  "startColumn": 26,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01988.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 68,
                  "startColumn": 19,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01989.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 69,
                  "startColumn": 13,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01989.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 82,
                  "startColumn": 21,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01990.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 69,
                  "startColumn": 13,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01990.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 82,
                  "startColumn": 21,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01992.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 63,
                  "startColumn": 24,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01999.java"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02000.java"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02001.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 63,
                  "startColumn": 22,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02002.java"
                },
                "region": {
                  "endColumn": 60,
                  "endLine": 63,
                  "startColumn": 26,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02003.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 63,
                  "startColumn": 17,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02004.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 63,
                  "startColumn": 18,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02005.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 80,
                  "startColumn": 9,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02015.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 70,
                  "startColumn": 9,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02016.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 64,
                  "startColumn": 49,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02016.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 70,
                  "startColumn": 9,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02017.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 71,
                  "startColumn": 42,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02017.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 71,
                  "startColumn": 80,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02018.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 71,
                  "startColumn": 42,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02018.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 71,
                  "startColumn": 80,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02019.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 71,
                  "startColumn": 42,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02019.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 71,
                  "startColumn": 80,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02020.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 69,
                  "startColumn": 42,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02020.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 69,
                  "startColumn": 80,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02022.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 63,
                  "startColumn": 42,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02022.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 63,
                  "startColumn": 80,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02023.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 63,
                  "startColumn": 42,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02023.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 63,
                  "startColumn": 80,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02025.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 66,
                  "startColumn": 21,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02025.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 83,
                  "startColumn": 21,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02026.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 57,
                  "startColumn": 22,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02027.java"
                },
                "region": {
                  "endColumn": 87,
                  "endLine": 56,
                  "startColumn": 22,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02028.java"
                },
                "region": {
                  "endColumn": 87,
                  "endLine": 56,
                  "startColumn": 22,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02029.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 55,
                  "startColumn": 22,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02030.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 75,
                  "startColumn": 26,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02031.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 60,
                  "startColumn": 19,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02032.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 60,
                  "startColumn": 19,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02033.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02033.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 74,
                  "startColumn": 21,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02034.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 67,
                  "startColumn": 34,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02036.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 69,
                  "startColumn": 21,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02036.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 86,
                  "startColumn": 21,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02037.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 69,
                  "startColumn": 21,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02037.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 86,
                  "startColumn": 21,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02038.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 55,
                  "startColumn": 24,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02039.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 55,
                  "startColumn": 24,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02040.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 55,
                  "startColumn": 24,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02042.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02045.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 59,
                  "startColumn": 9,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02046.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 56,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02047.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 56,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02048.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02049.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02050.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02051.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02052.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02053.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02054.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02055.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 56,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02056.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 56,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02057.java"
                },
                "region": {
                  "endColumn": 55,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02058.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 65,
                  "startColumn": 9,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02058.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 67,
                  "startColumn": 29,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02059.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 67,
                  "startColumn": 9,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02059.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 67,
                  "startColumn": 29,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02059.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 70,
                  "startColumn": 13,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02060.java"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 55,
                  "startColumn": 24,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02061.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 55,
                  "startColumn": 17,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02062.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 55,
                  "startColumn": 17,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02063.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 55,
                  "startColumn": 18,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02067.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02068.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 64,
                  "startColumn": 13,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02069.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02070.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02084.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 56,
                  "startColumn": 53,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02084.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 62,
                  "startColumn": 9,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02085.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 56,
                  "startColumn": 53,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02085.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 62,
                  "startColumn": 9,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02086.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 56,
                  "startColumn": 53,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02086.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 62,
                  "startColumn": 9,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02087.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02088.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 64,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02089.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 64,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02090.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02091.java"
                },
                "region": {
                  "endColumn": 32,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02092.java"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02092.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02093.java"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02093.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02094.java"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02094.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02095.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02095.java"
                },
                "region": {
                  "endColumn": 78,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02096.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02096.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02097.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02097.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02097.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 60,
                  "startColumn": 37,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02098.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02098.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02098.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 60,
                  "startColumn": 37,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02099.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02099.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 60,
                  "startColumn": 25,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02100.java"
                },
                "region": {
                  "endColumn": 99,
                  "endLine": 73,
                  "startColumn": 29,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02100.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 79,
                  "startColumn": 17,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02101.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 62,
                  "startColumn": 42,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02101.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 62,
                  "startColumn": 80,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02104.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 60,
                  "startColumn": 21,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02104.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 77,
                  "startColumn": 21,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02105.java"
                },
                "region": {
                  "endColumn": 87,
                  "endLine": 49,
                  "startColumn": 22,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02106.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 48,
                  "startColumn": 22,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02107.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 48,
                  "startColumn": 22,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02108.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02108.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 67,
                  "startColumn": 21,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02109.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02109.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 67,
                  "startColumn": 21,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02110.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02110.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 67,
                  "startColumn": 21,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02111.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 60,
                  "startColumn": 34,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02112.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02112.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 67,
                  "startColumn": 21,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02114.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 62,
                  "startColumn": 21,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02114.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 79,
                  "startColumn": 21,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02115.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 62,
                  "startColumn": 21,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02115.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 79,
                  "startColumn": 21,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02116.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 61,
                  "startColumn": 21,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02116.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 79,
                  "startColumn": 21,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02117.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 48,
                  "startColumn": 24,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02118.java"
                },
                "region": {
                  "endColumn": 83,
                  "endLine": 54,
                  "startColumn": 17,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02118.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 56,
                  "startColumn": 17,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02122.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 52,
                  "startColumn": 9,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02123.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 50,
                  "startColumn": 9,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02124.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 49,
                  "startColumn": 9,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02125.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 49,
                  "startColumn": 9,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02126.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 49,
                  "startColumn": 9,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02127.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 49,
                  "startColumn": 9,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02128.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 49,
                  "startColumn": 9,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02129.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 50,
                  "startColumn": 9,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02130.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 50,
                  "startColumn": 9,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02131.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 50,
                  "startColumn": 9,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02132.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 49,
                  "startColumn": 9,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02133.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 49,
                  "startColumn": 9,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02134.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 49,
                  "startColumn": 9,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02135.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 49,
                  "startColumn": 9,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02136.java"
                },
                "region": {
                  "endColumn": 55,
                  "endLine": 52,
                  "startColumn": 13,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02137.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 58,
                  "startColumn": 9,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02137.java"
                },
                "region": {
                  "endColumn": 28,
                  "endLine": 62,
                  "startColumn": 9,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02138.java"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 49,
                  "startColumn": 9,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02139.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 48,
                  "startColumn": 22,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02140.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 48,
                  "startColumn": 17,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02141.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 48,
                  "startColumn": 18,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02142.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 65,
                  "startColumn": 9,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02145.java"
                },
                "region": {
                  "endColumn": 62,
                  "endLine": 49,
                  "startColumn": 9,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02146.java"
                },
                "region": {
                  "endColumn": 43,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02147.java"
                },
                "region": {
                  "endColumn": 43,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02148.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 71,
                  "startColumn": 13,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02149.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 71,
                  "startColumn": 13,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02150.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 71,
                  "startColumn": 13,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02151.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 71,
                  "startColumn": 13,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02152.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 71,
                  "startColumn": 13,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02153.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02154.java"
                },
                "region": {
                  "endColumn": 98,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02155.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02156.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02165.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 55,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02166.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 49,
                  "startColumn": 49,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02166.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 55,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02167.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 49,
                  "startColumn": 53,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02167.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 55,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02168.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 49,
                  "startColumn": 53,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02168.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 55,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02169.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02170.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02171.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02172.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02173.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02174.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 51,
                  "startColumn": 13,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02175.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 51,
                  "startColumn": 13,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02176.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 51,
                  "startColumn": 13,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02177.java"
                },
                "region": {
                  "endColumn": 32,
                  "endLine": 66,
                  "startColumn": 13,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02178.java"
                },
                "region": {
                  "endColumn": 95,
                  "endLine": 51,
                  "startColumn": 13,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02179.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02179.java"
                },
                "region": {
                  "endColumn": 89,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02180.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02180.java"
                },
                "region": {
                  "endColumn": 89,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02181.java"
                },
                "region": {
                  "endColumn": 94,
                  "endLine": 52,
                  "startColumn": 13,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02182.java"
                },
                "region": {
                  "endColumn": 94,
                  "endLine": 52,
                  "startColumn": 13,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02183.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02184.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 51,
                  "startColumn": 13,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02185.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02185.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02186.java"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02186.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02187.java"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02187.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02188.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02188.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02188.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 53,
                  "startColumn": 37,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02189.java"
                },
                "region": {
                  "endColumn": 99,
                  "endLine": 66,
                  "startColumn": 29,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02189.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 72,
                  "startColumn": 17,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02192.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 66,
                  "startColumn": 42,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02192.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 66,
                  "startColumn": 80,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02193.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 66,
                  "startColumn": 42,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02193.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 66,
                  "startColumn": 80,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02194.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 63,
                  "startColumn": 69,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02194.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 66,
                  "startColumn": 42,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02194.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 66,
                  "startColumn": 80,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02195.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 63,
                  "startColumn": 69,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02195.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 66,
                  "startColumn": 42,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02195.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 66,
                  "startColumn": 80,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02196.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 63,
                  "startColumn": 21,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02196.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 80,
                  "startColumn": 21,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02197.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 54,
                  "startColumn": 22,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02198.java"
                },
                "region": {
                  "endColumn": 87,
                  "endLine": 53,
                  "startColumn": 22,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02199.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 52,
                  "startColumn": 22,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02200.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 52,
                  "startColumn": 22,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02201.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 57,
                  "startColumn": 19,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02202.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02202.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 71,
                  "startColumn": 21,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02203.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02203.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 71,
                  "startColumn": 21,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02204.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 64,
                  "startColumn": 34,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02205.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02205.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 71,
                  "startColumn": 21,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02208.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 66,
                  "startColumn": 21,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02208.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 83,
                  "startColumn": 21,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02209.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 52,
                  "startColumn": 24,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02211.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02212.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02213.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02217.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 53,
                  "startColumn": 86,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02221.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 56,
                  "startColumn": 9,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02222.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02223.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02224.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02225.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02226.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 53,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02227.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 53,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02228.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 53,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02229.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02230.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02231.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02232.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02233.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02234.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 54,
                  "startColumn": 9,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02235.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 53,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02236.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 53,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02237.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 53,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02238.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 53,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02239.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 53,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02240.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 53,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02241.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 53,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02242.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 62,
                  "startColumn": 9,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02242.java"
                },
                "region": {
                  "endColumn": 28,
                  "endLine": 66,
                  "startColumn": 9,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02243.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 62,
                  "startColumn": 9,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02243.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 64,
                  "startColumn": 29,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02244.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 62,
                  "startColumn": 9,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02244.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 64,
                  "startColumn": 29,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02245.java"
                },
                "region": {
                  "endColumn": 60,
                  "endLine": 52,
                  "startColumn": 26,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02246.java"
                },
                "region": {
                  "endColumn": 60,
                  "endLine": 52,
                  "startColumn": 26,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02249.java"
                },
                "region": {
                  "endColumn": 43,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02250.java"
                },
                "region": {
                  "endColumn": 43,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02251.java"
                },
                "region": {
                  "endColumn": 38,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02252.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02253.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02261.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 59,
                  "startColumn": 9,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02262.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 53,
                  "startColumn": 49,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02262.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 59,
                  "startColumn": 9,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02263.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 59,
                  "startColumn": 9,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02264.java"
                },
                "region": {
                  "endColumn": 80,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02265.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 61,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02266.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 62,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02267.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02268.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 62,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02269.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 62,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02270.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 62,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02271.java"
                },
                "region": {
                  "endColumn": 72,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02272.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02273.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02274.java"
                },
                "region": {
                  "endColumn": 32,
                  "endLine": 70,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02275.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02275.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02276.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02276.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02277.java"
                },
                "region": {
                  "endColumn": 95,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02278.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02278.java"
                },
                "region": {
                  "endColumn": 89,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02279.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02279.java"
                },
                "region": {
                  "endColumn": 89,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02280.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02280.java"
                },
                "region": {
                  "endColumn": 89,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02281.java"
                },
                "region": {
                  "endColumn": 94,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02282.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02283.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02283.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02284.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02284.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02285.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02285.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02286.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02286.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 57,
                  "startColumn": 25,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02287.java"
                },
                "region": {
                  "endColumn": 93,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02287.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 57,
                  "startColumn": 25,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02288.java"
                },
                "region": {
                  "endColumn": 93,
                  "endLine": 57,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02288.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 57,
                  "startColumn": 25,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02290.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 76,
                  "startColumn": 42,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02290.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 76,
                  "startColumn": 80,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02291.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 76,
                  "startColumn": 42,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02291.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 76,
                  "startColumn": 80,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02292.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 76,
                  "startColumn": 42,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02292.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 76,
                  "startColumn": 80,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02293.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 73,
                  "startColumn": 69,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02293.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 76,
                  "startColumn": 42,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02293.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 76,
                  "startColumn": 80,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02294.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 73,
                  "startColumn": 69,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02294.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 76,
                  "startColumn": 42,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02294.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 76,
                  "startColumn": 80,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02295.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 73,
                  "startColumn": 69,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02295.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 76,
                  "startColumn": 42,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02295.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 76,
                  "startColumn": 80,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02299.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 73,
                  "startColumn": 21,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02299.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 90,
                  "startColumn": 21,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02300.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 64,
                  "startColumn": 22,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02301.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 62,
                  "startColumn": 22,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02302.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 62,
                  "startColumn": 22,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02303.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 67,
                  "startColumn": 19,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02304.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 67,
                  "startColumn": 19,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02305.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 76,
                  "startColumn": 21,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02305.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 93,
                  "startColumn": 21,
                  "startLine": 85
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02306.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 75,
                  "startColumn": 21,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02306.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 93,
                  "startColumn": 21,
                  "startLine": 85
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02307.java"
                },
                "region": {
                  "endColumn": 83,
                  "endLine": 68,
                  "startColumn": 17,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02307.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 70,
                  "startColumn": 17,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02308.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 63,
                  "startColumn": 13,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02311.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 63,
                  "startColumn": 86,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02313.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 66,
                  "startColumn": 9,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02314.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02315.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02316.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02317.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02318.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 63,
                  "startColumn": 9,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02319.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 63,
                  "startColumn": 9,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02320.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02321.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02322.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02323.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02324.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02325.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 63,
                  "startColumn": 9,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02326.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 63,
                  "startColumn": 9,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02327.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 66,
                  "startColumn": 13,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02328.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 66,
                  "startColumn": 13,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02329.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 66,
                  "startColumn": 13,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02330.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 66,
                  "startColumn": 13,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02331.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 63,
                  "startColumn": 9,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02332.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 63,
                  "startColumn": 9,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02333.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 72,
                  "startColumn": 9,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02333.java"
                },
                "region": {
                  "endColumn": 28,
                  "endLine": 76,
                  "startColumn": 9,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02334.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 72,
                  "startColumn": 9,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02334.java"
                },
                "region": {
                  "endColumn": 28,
                  "endLine": 76,
                  "startColumn": 9,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02335.java"
                },
                "region": {
                  "endColumn": 25,
                  "endLine": 76,
                  "startColumn": 9,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02336.java"
                },
                "region": {
                  "endColumn": 25,
                  "endLine": 76,
                  "startColumn": 9,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02337.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 62,
                  "startColumn": 18,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02338.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 62,
                  "startColumn": 18,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02339.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 79,
                  "startColumn": 9,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02340.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 85,
                  "startColumn": 13,
                  "startLine": 85
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02341.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 71,
                  "startColumn": 13,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02342.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 72,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02343.java"
                },
                "region": {
                  "endColumn": 98,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02344.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 68,
                  "startColumn": 13,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02352.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 69,
                  "startColumn": 9,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02353.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 68,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02354.java"
                },
                "region": {
                  "endColumn": 72,
                  "endLine": 68,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02355.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 68,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02356.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02357.java"
                },
                "region": {
                  "endColumn": 32,
                  "endLine": 80,
                  "startColumn": 13,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02358.java"
                },
                "region": {
                  "endColumn": 95,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02359.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 68,
                  "startColumn": 13,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02359.java"
                },
                "region": {
                  "endColumn": 89,
                  "endLine": 69,
                  "startColumn": 13,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02360.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 68,
                  "startColumn": 13,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02360.java"
                },
                "region": {
                  "endColumn": 89,
                  "endLine": 69,
                  "startColumn": 13,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02361.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 67,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02362.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02363.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 65,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02364.java"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 67,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02364.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 67,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02365.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 67,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02365.java"
                },
                "region": {
                  "endColumn": 78,
                  "endLine": 67,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02366.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 67,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02366.java"
                },
                "region": {
                  "endColumn": 78,
                  "endLine": 67,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02367.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 67,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02367.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 67,
                  "startColumn": 13,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02368.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 67,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02368.java"
                },
                "region": {
                  "endColumn": 95,
                  "endLine": 67,
                  "startColumn": 25,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02369.java"
                },
                "region": {
                  "endColumn": 72,
                  "endLine": 67,
                  "startColumn": 13,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02369.java"
                },
                "region": {
                  "endColumn": 71,
                  "endLine": 67,
                  "startColumn": 25,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02370.java"
                },
                "region": {
                  "endColumn": 99,
                  "endLine": 80,
                  "startColumn": 29,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command. This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
          },
          "ruleId": "CWE-643"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02370.java"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 86,
                  "startColumn": 17,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02373.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 61,
                  "startColumn": 69,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02373.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 64,
                  "startColumn": 42,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02373.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 64,
                  "startColumn": 80,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02374.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 61,
                  "startColumn": 69,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02374.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 64,
                  "startColumn": 42,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02374.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 64,
                  "startColumn": 80,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02375.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 58,
                  "startColumn": 42,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02375.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 58,
                  "startColumn": 80,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02376.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 62,
                  "startColumn": 21,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02377.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 50,
                  "startColumn": 22,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02378.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 67,
                  "startColumn": 26,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02379.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 70,
                  "startColumn": 26,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02380.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02380.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 69,
                  "startColumn": 21,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02381.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 62,
                  "startColumn": 34,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02382.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02382.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 69,
                  "startColumn": 21,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02383.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02383.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 69,
                  "startColumn": 21,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02384.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 63,
                  "startColumn": 21,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02385.java"
                },
                "region": {
                  "endColumn": 83,
                  "endLine": 56,
                  "startColumn": 17,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02385.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 58,
                  "startColumn": 17,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02386.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 51,
                  "startColumn": 13,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02387.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 51,
                  "startColumn": 86,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02388.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 51,
                  "startColumn": 86,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02411.java"
                },
                "region": {
                  "endColumn": 25,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02412.java"
                },
                "region": {
                  "endColumn": 25,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02413.java"
                },
                "region": {
                  "endColumn": 25,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02414.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 60,
                  "startColumn": 9,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02414.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 62,
                  "startColumn": 29,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02415.java"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 51,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02416.java"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 50,
                  "startColumn": 24,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02417.java"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 50,
                  "startColumn": 24,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02418.java"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 50,
                  "startColumn": 24,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02419.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 50,
                  "startColumn": 22,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02420.java"
                },
                "region": {
                  "endColumn": 61,
                  "endLine": 50,
                  "startColumn": 24,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02421.java"
                },
                "region": {
                  "endColumn": 61,
                  "endLine": 50,
                  "startColumn": 24,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02422.java"
                },
                "region": {
                  "endColumn": 61,
                  "endLine": 50,
                  "startColumn": 24,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02423.java"
                },
                "region": {
                  "endColumn": 60,
                  "endLine": 50,
                  "startColumn": 26,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02424.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 50,
                  "startColumn": 17,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02425.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 50,
                  "startColumn": 17,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02426.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 50,
                  "startColumn": 18,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02427.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 67,
                  "startColumn": 9,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02428.java"
                },
                "region": {
                  "endColumn": 43,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02429.java"
                },
                "region": {
                  "endColumn": 38,
                  "endLine": 71,
                  "startColumn": 13,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02430.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02431.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02432.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02433.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02454.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02455.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 55,
                  "startColumn": 25,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02456.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 55,
                  "startColumn": 25,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02458.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 66,
                  "startColumn": 42,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02458.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 66,
                  "startColumn": 80,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02462.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 52,
                  "startColumn": 22,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02463.java"
                },
                "region": {
                  "endColumn": 87,
                  "endLine": 51,
                  "startColumn": 22,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02464.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 50,
                  "startColumn": 22,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02465.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 55,
                  "startColumn": 19,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02466.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 55,
                  "startColumn": 19,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02467.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 55,
                  "startColumn": 19,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02468.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 62,
                  "startColumn": 34,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02469.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02469.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 69,
                  "startColumn": 21,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02470.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02470.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 69,
                  "startColumn": 21,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02472.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 64,
                  "startColumn": 21,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02472.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 81,
                  "startColumn": 21,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02473.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 50,
                  "startColumn": 24,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02474.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 51,
                  "startColumn": 13,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02475.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 51,
                  "startColumn": 86,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02476.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 51,
                  "startColumn": 86,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02480.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 51,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02481.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 51,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02482.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 51,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02483.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 51,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02484.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 51,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02485.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 52,
                  "startColumn": 9,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02486.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 52,
                  "startColumn": 9,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02487.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 52,
                  "startColumn": 9,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02488.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 52,
                  "startColumn": 9,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02489.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 52,
                  "startColumn": 9,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02490.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 52,
                  "startColumn": 9,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02491.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 51,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02492.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 51,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02493.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02494.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 51,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02495.java"
                },
                "region": {
                  "endColumn": 55,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02496.java"
                },
                "region": {
                  "endColumn": 25,
                  "endLine": 64,
                  "startColumn": 9,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02497.java"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 50,
                  "startColumn": 24,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02498.java"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 50,
                  "startColumn": 24,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02499.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 50,
                  "startColumn": 22,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02500.java"
                },
                "region": {
                  "endColumn": 61,
                  "endLine": 50,
                  "startColumn": 24,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02501.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 50,
                  "startColumn": 17,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02502.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 50,
                  "startColumn": 17,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02503.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 50,
                  "startColumn": 17,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02504.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 50,
                  "startColumn": 17,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02505.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 50,
                  "startColumn": 18,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02506.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 50,
                  "startColumn": 18,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02507.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 67,
                  "startColumn": 9,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02509.java"
                },
                "region": {
                  "endColumn": 62,
                  "endLine": 51,
                  "startColumn": 9,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02510.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02511.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02512.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02513.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02514.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02515.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02516.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02517.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02518.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02523.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02524.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 51,
                  "startColumn": 49,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02524.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02525.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 51,
                  "startColumn": 49,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02525.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02526.java"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 51,
                  "startColumn": 49,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02526.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02527.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 57,
                  "startColumn": 9,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02528.java"
                },
                "region": {
                  "endColumn": 80,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02529.java"
                },
                "region": {
                  "endColumn": 80,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02530.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02531.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02532.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 59,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02533.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02534.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02535.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 60,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02536.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02537.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02538.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02539.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02540.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 53,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02541.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 56,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02541.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02542.java"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02542.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02543.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02543.java"
                },
                "region": {
                  "endColumn": 78,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02544.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02544.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02545.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02545.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 55,
                  "startColumn": 25,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02546.java"
                },
                "region": {
                  "endColumn": 72,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02546.java"
                },
                "region": {
                  "endColumn": 71,
                  "endLine": 55,
                  "startColumn": 25,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02548.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 86,
                  "startColumn": 42,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02548.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 86,
                  "startColumn": 80,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02549.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 86,
                  "startColumn": 42,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02549.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 86,
                  "startColumn": 80,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02550.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 83,
                  "startColumn": 69,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02550.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 86,
                  "startColumn": 42,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02550.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 86,
                  "startColumn": 80,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02553.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 84,
                  "startColumn": 21,
                  "startLine": 84
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02553.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 101,
                  "startColumn": 21,
                  "startLine": 93
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02554.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 74,
                  "startColumn": 22,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02555.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 72,
                  "startColumn": 22,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02556.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 72,
                  "startColumn": 22,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02557.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 72,
                  "startColumn": 22,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02558.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 72,
                  "startColumn": 22,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02559.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 89,
                  "startColumn": 26,
                  "startLine": 89
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02560.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 77,
                  "startColumn": 19,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02561.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 77,
                  "startColumn": 19,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02562.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 77,
                  "startColumn": 19,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02563.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02563.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 91,
                  "startColumn": 21,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02564.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02564.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 91,
                  "startColumn": 21,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02565.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 84,
                  "startColumn": 34,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02566.java"
                },
                "region": {
                  "endColumn": 92,
                  "endLine": 84,
                  "startColumn": 34,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02567.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02567.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 91,
                  "startColumn": 21,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02568.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02568.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 91,
                  "startColumn": 21,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02569.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02569.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 91,
                  "startColumn": 21,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02571.java"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 86,
                  "startColumn": 21,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02571.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 103,
                  "startColumn": 21,
                  "startLine": 95
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02572.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 85,
                  "startColumn": 21,
                  "startLine": 85
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
          },
          "ruleId": "CWE-90"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02572.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 103,
                  "startColumn": 21,
                  "startLine": 95
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02573.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02574.java"
                },
                "region": {
                  "endColumn": 101,
                  "endLine": 73,
                  "startColumn": 13,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02575.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 73,
                  "startColumn": 86,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02578.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02579.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02580.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02581.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02582.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02583.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02584.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02585.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02586.java"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02587.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02588.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02589.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02590.java"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02591.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02592.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02593.java"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 74,
                  "startColumn": 9,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02594.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02595.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02596.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02597.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02598.java"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02599.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02600.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 76,
                  "startColumn": 13,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02601.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 76,
                  "startColumn": 13,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02602.java"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02603.java"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02604.java"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 72,
                  "startColumn": 24,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02605.java"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 72,
                  "startColumn": 24,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02606.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 72,
                  "startColumn": 22,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02608.java"
                },
                "region": {
                  "endColumn": 62,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02609.java"
                },
                "region": {
                  "endColumn": 62,
                  "endLine": 73,
                  "startColumn": 9,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02610.java"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 95,
                  "startColumn": 13,
                  "startLine": 95
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02611.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 95,
                  "startColumn": 13,
                  "startLine": 95
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02612.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 81,
                  "startColumn": 13,
                  "startLine": 81
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02613.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02622.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 79,
                  "startColumn": 9,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02623.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 73,
                  "startColumn": 53,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02623.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 79,
                  "startColumn": 9,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02624.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 73,
                  "startColumn": 53,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
          },
          "ruleId": "CWE-501"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02624.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 79,
                  "startColumn": 9,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request with potential user-input going into a OutputStream or Writer object. This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02625.java"
                },
                "region": {
                  "endColumn": 80,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02626.java"
                },
                "region": {
                  "endColumn": 80,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02627.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 81,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02628.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 81,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02629.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 81,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02630.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 82,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02631.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02632.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02633.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02634.java"
                },
                "region": {
                  "endColumn": 66,
                  "endLine": 81,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02635.java"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 82,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02636.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02637.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02638.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02639.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02640.java"
                },
                "region": {
                  "endColumn": 82,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02641.java"
                },
                "region": {
                  "endColumn": 32,
                  "endLine": 90,
                  "startColumn": 13,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02642.java"
                },
                "region": {
                  "endColumn": 95,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02643.java"
                },
                "region": {
                  "endColumn": 95,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02644.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02645.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02646.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 75,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02647.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 78,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02647.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02648.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02648.java"
                },
                "region": {
                  "endColumn": 78,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02649.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02649.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02650.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02650.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02651.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02651.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02652.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02652.java"
                },
                "region": {
                  "endColumn": 75,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02653.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02653.java"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02653.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 77,
                  "startColumn": 37,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02654.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02654.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 77,
                  "startColumn": 25,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02655.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02655.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 77,
                  "startColumn": 25,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02656.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02656.java"
                },
                "region": {
                  "endColumn": 95,
                  "endLine": 77,
                  "startColumn": 25,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02657.java"
                },
                "region": {
                  "endColumn": 72,
                  "endLine": 77,
                  "startColumn": 13,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02657.java"
                },
                "region": {
                  "endColumn": 71,
                  "endLine": 77,
                  "startColumn": 25,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02658.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 65,
                  "startColumn": 42,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02658.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 65,
                  "startColumn": 80,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02660.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 60,
                  "startColumn": 69,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02660.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 63,
                  "startColumn": 42,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02660.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 63,
                  "startColumn": 80,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02661.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 60,
                  "startColumn": 69,
                  "startLine": 60
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02661.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 63,
                  "startColumn": 42,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02661.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 63,
                  "startColumn": 80,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02663.java"
                },
                "region": {
                  "endColumn": 86,
                  "endLine": 57,
                  "startColumn": 42,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02663.java"
                },
                "region": {
                  "endColumn": 85,
                  "endLine": 57,
                  "startColumn": 80,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
          },
          "ruleId": "CWE-326"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02664.java"
                },
                "region": {
                  "endColumn": 69,
                  "endLine": 49,
                  "startColumn": 22,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02665.java"
                },
                "region": {
                  "endColumn": 74,
                  "endLine": 54,
                  "startColumn": 19,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02666.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 54,
                  "startColumn": 19,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02667.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 54,
                  "startColumn": 19,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02668.java"
                },
                "region": {
                  "endColumn": 64,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02668.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 68,
                  "startColumn": 21,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02669.java"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02669.java"
                },
                "region": {
                  "endColumn": 31,
                  "endLine": 68,
                  "startColumn": 21,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
          },
          "ruleId": "CWE-22"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02670.java"
                },
                "region": {
                  "endColumn": 83,
                  "endLine": 55,
                  "startColumn": 17,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02670.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 57,
                  "startColumn": 17,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02671.java"
                },
                "region": {
                  "endColumn": 83,
                  "endLine": 55,
                  "startColumn": 17,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02671.java"
                },
                "region": {
                  "endColumn": 77,
                  "endLine": 57,
                  "startColumn": 17,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02674.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 50,
                  "startColumn": 86,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02675.java"
                },
                "region": {
                  "endColumn": 91,
                  "endLine": 50,
                  "startColumn": 86,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
          },
          "ruleId": "CWE-328"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02697.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 59,
                  "startColumn": 9,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02697.java"
                },
                "region": {
                  "endColumn": 28,
                  "endLine": 63,
                  "startColumn": 9,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02698.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 59,
                  "startColumn": 9,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02698.java"
                },
                "region": {
                  "endColumn": 28,
                  "endLine": 63,
                  "startColumn": 9,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02699.java"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 61,
                  "startColumn": 9,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02699.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 61,
                  "startColumn": 29,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "A formatted or concatenated string was detected as input to a ProcessBuilder call. This is dangerous if a variable is controlled by user input and could result in a command injection. Ensure your variables are not controlled by users or sufficiently sanitized."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02699.java"
                },
                "region": {
                  "endColumn": 36,
                  "endLine": 64,
                  "startColumn": 13,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02700.java"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 50,
                  "startColumn": 9,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02701.java"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 50,
                  "startColumn": 9,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02702.java"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 49,
                  "startColumn": 24,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02703.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 49,
                  "startColumn": 22,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02704.java"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 49,
                  "startColumn": 22,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02705.java"
                },
                "region": {
                  "endColumn": 61,
                  "endLine": 49,
                  "startColumn": 24,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02706.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 49,
                  "startColumn": 17,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02707.java"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 49,
                  "startColumn": 17,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02708.java"
                },
                "region": {
                  "endColumn": 51,
                  "endLine": 49,
                  "startColumn": 18,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
          },
          "ruleId": "CWE-330"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02709.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 66,
                  "startColumn": 9,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02710.java"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 66,
                  "startColumn": 9,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
          },
          "ruleId": "CWE-614"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02713.java"
                },
                "region": {
                  "endColumn": 97,
                  "endLine": 58,
                  "startColumn": 13,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02714.java"
                },
                "region": {
                  "endColumn": 96,
                  "endLine": 55,
                  "startColumn": 13,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command. This could lead to command injection if variables passed into the exec commands are not properly sanitized. Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
          },
          "ruleId": "CWE-78"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02738.java"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02739.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 54,
                  "startColumn": 13,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02740.java"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 54,
                  "startColumn": 25,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
          },
          "ruleId": "CWE-89"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-00/BenchmarkTest00051.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-00/BenchmarkTest00077.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-00/BenchmarkTest00090.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-00/BenchmarkTest00091.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-00/BenchmarkTest00092.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-00/BenchmarkTest00093.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-00/BenchmarkTest00396.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-00/BenchmarkTest00406.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-00/BenchmarkTest00409.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-00/BenchmarkTest00411.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-00/BenchmarkTest00481.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-00/BenchmarkTest00494.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-00/BenchmarkTest00496.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-00/BenchmarkTest00499.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-00/BenchmarkTest00658.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-00/BenchmarkTest00731.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-00/BenchmarkTest00738.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-00/BenchmarkTest00741.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-00/BenchmarkTest00743.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest00896.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest00906.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest00909.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest00968.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest00969.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest00970.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest00978.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest00979.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest00980.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest00981.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest00982.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest00983.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest01270.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest01285.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest01287.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest01290.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest01360.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest01362.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest01365.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest01528.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest01530.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest01533.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest01600.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest01608.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-01/BenchmarkTest01610.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest01778.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest01780.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest01793.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest01795.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest01850.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest01851.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest01852.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest01864.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest01865.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest02137.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest02147.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest02150.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest02152.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest02155.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest02242.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest02250.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest02252.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest02411.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest02414.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest02429.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest02431.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest02496.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest02511.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest02514.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-02/BenchmarkTest02516.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-03/BenchmarkTest02699.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/cmdi-03/BenchmarkTest02714.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-00/BenchmarkTest00020.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-00/BenchmarkTest00053.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-00/BenchmarkTest00054.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-00/BenchmarkTest00055.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-00/BenchmarkTest00056.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-00/BenchmarkTest00057.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-00/BenchmarkTest00058.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-00/BenchmarkTest00059.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-00/BenchmarkTest00351.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-00/BenchmarkTest00354.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-00/BenchmarkTest00356.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-00/BenchmarkTest00444.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-00/BenchmarkTest00446.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-00/BenchmarkTest00449.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-00/BenchmarkTest00451.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-00/BenchmarkTest00608.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-00/BenchmarkTest00611.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-00/BenchmarkTest00613.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-00/BenchmarkTest00616.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-00/BenchmarkTest00618.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-00/BenchmarkTest00686.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-00/BenchmarkTest00688.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-00/BenchmarkTest00691.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-01/BenchmarkTest00693.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-01/BenchmarkTest00854.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-01/BenchmarkTest00856.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-01/BenchmarkTest00859.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-01/BenchmarkTest00942.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-01/BenchmarkTest00943.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-01/BenchmarkTest00944.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-01/BenchmarkTest00945.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-01/BenchmarkTest00946.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-01/BenchmarkTest01227.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-01/BenchmarkTest01230.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-01/BenchmarkTest01317.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-01/BenchmarkTest01320.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-01/BenchmarkTest01322.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-01/BenchmarkTest01325.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-01/BenchmarkTest01480.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-01/BenchmarkTest01483.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-01/BenchmarkTest01485.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-01/BenchmarkTest01488.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-01/BenchmarkTest01563.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-01/BenchmarkTest01565.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-02/BenchmarkTest01738.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-02/BenchmarkTest01740.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-02/BenchmarkTest01822.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-02/BenchmarkTest01823.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-02/BenchmarkTest01824.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-02/BenchmarkTest01825.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-02/BenchmarkTest01826.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-02/BenchmarkTest01827.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-02/BenchmarkTest01828.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-02/BenchmarkTest01829.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-02/BenchmarkTest01830.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-02/BenchmarkTest02102.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-02/BenchmarkTest02190.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-02/BenchmarkTest02192.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-02/BenchmarkTest02195.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-02/BenchmarkTest02371.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-02/BenchmarkTest02374.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-02/BenchmarkTest02459.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-02/BenchmarkTest02461.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-03/BenchmarkTest02659.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/crypto-03/BenchmarkTest02661.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-00/BenchmarkTest00003.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-00/BenchmarkTest00069.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-00/BenchmarkTest00070.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-00/BenchmarkTest00071.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-00/BenchmarkTest00072.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-00/BenchmarkTest00073.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-00/BenchmarkTest00074.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-00/BenchmarkTest00075.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-00/BenchmarkTest00076.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-00/BenchmarkTest00371.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-00/BenchmarkTest00374.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-00/BenchmarkTest00464.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-00/BenchmarkTest00466.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-00/BenchmarkTest00631.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-00/BenchmarkTest00633.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-00/BenchmarkTest00636.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-00/BenchmarkTest00638.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-00/BenchmarkTest00641.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-00/BenchmarkTest00703.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-00/BenchmarkTest00706.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-00/BenchmarkTest00708.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-01/BenchmarkTest00869.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-01/BenchmarkTest00871.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-01/BenchmarkTest00874.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-01/BenchmarkTest00876.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-01/BenchmarkTest00961.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-01/BenchmarkTest00962.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-01/BenchmarkTest00963.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-01/BenchmarkTest00964.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-01/BenchmarkTest00965.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-01/BenchmarkTest00966.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-01/BenchmarkTest00967.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-01/BenchmarkTest01245.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-01/BenchmarkTest01247.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-01/BenchmarkTest01250.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-01/BenchmarkTest01332.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-01/BenchmarkTest01503.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-01/BenchmarkTest01578.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-01/BenchmarkTest01580.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-01/BenchmarkTest01758.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-02/BenchmarkTest01760.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-02/BenchmarkTest01763.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-02/BenchmarkTest01765.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-02/BenchmarkTest01844.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-02/BenchmarkTest01845.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-02/BenchmarkTest01846.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-02/BenchmarkTest01847.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-02/BenchmarkTest01848.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-02/BenchmarkTest01849.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-02/BenchmarkTest02120.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-02/BenchmarkTest02210.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-02/BenchmarkTest02212.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-02/BenchmarkTest02215.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-02/BenchmarkTest02217.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-02/BenchmarkTest02220.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-02/BenchmarkTest02386.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-02/BenchmarkTest02389.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-02/BenchmarkTest02391.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-02/BenchmarkTest02474.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-02/BenchmarkTest02476.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-02/BenchmarkTest02479.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-02/BenchmarkTest02671.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-02/BenchmarkTest02674.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/hash-02/BenchmarkTest02676.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/js/testsuiteutils.js"
                },
                "region": {
                  "endColumn": 59,
                  "endLine": 62,
                  "startColumn": 24,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "RegExp() called with a `find` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
          },
          "ruleId": "CWE-1333"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/js/testsuiteutils.js"
                },
                "region": {
                  "endColumn": 26,
                  "endLine": 151,
                  "startColumn": 5,
                  "startLine": 151
                }
              }
            }
          ],
          "message": {
            "text": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
          },
          "ruleId": "CWE-79"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/ldapi-00/BenchmarkTest00701.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/ldapi-00/BenchmarkTest00861.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/ldapi-00/BenchmarkTest00947.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/ldapi-00/BenchmarkTest00948.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/ldapi-00/BenchmarkTest00959.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/ldapi-00/BenchmarkTest01242.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/ldapi-00/BenchmarkTest01327.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/ldapi-00/BenchmarkTest01490.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/ldapi-00/BenchmarkTest01568.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/ldapi-00/BenchmarkTest01743.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/ldapi-00/BenchmarkTest01753.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/ldapi-00/BenchmarkTest01755.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/ldapi-00/BenchmarkTest01831.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/ldapi-00/BenchmarkTest01832.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/ldapi-00/BenchmarkTest02115.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/ldapi-00/BenchmarkTest02376.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/ldapi-00/BenchmarkTest02384.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00001.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00002.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00028.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00040.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00045.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00060.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00061.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00062.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00063.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00064.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00065.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00359.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00361.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00364.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00366.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00454.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00456.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00459.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00621.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00623.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00626.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00628.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00696.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00698.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-00/BenchmarkTest00864.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-01/BenchmarkTest00866.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-01/BenchmarkTest00949.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-01/BenchmarkTest00950.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-01/BenchmarkTest00951.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-01/BenchmarkTest00952.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-01/BenchmarkTest00953.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-01/BenchmarkTest00954.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-01/BenchmarkTest00955.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-01/BenchmarkTest00956.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-01/BenchmarkTest00957.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-01/BenchmarkTest00958.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-01/BenchmarkTest01232.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-01/BenchmarkTest01235.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-01/BenchmarkTest01237.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-01/BenchmarkTest01240.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-01/BenchmarkTest01330.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-01/BenchmarkTest01493.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-01/BenchmarkTest01495.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-01/BenchmarkTest01498.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-01/BenchmarkTest01500.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-01/BenchmarkTest01570.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-01/BenchmarkTest01573.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest01745.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest01748.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest01750.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest01833.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest01834.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest01835.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest01836.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest01837.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest01838.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest01839.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest01840.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest01841.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest02105.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest02107.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest02110.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest02112.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest02197.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest02200.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest02202.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest02205.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest02207.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest02379.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest02381.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest02464.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-02/BenchmarkTest02466.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-03/BenchmarkTest02469.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-03/BenchmarkTest02471.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-03/BenchmarkTest02664.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-03/BenchmarkTest02666.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/pathtraver-03/BenchmarkTest02669.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/securecookie-00/BenchmarkTest00087.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/securecookie-00/BenchmarkTest00088.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/securecookie-00/BenchmarkTest00089.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/securecookie-00/BenchmarkTest00404.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/securecookie-00/BenchmarkTest00491.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/securecookie-00/BenchmarkTest00736.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/securecookie-00/BenchmarkTest00904.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/securecookie-00/BenchmarkTest00977.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/securecookie-00/BenchmarkTest01280.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/securecookie-00/BenchmarkTest01282.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/securecookie-00/BenchmarkTest01523.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/securecookie-00/BenchmarkTest01605.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/securecookie-00/BenchmarkTest01861.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/securecookie-00/BenchmarkTest01862.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/securecookie-00/BenchmarkTest01863.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/securecookie-00/BenchmarkTest02142.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/securecookie-00/BenchmarkTest02247.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/securecookie-00/BenchmarkTest02709.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/securecookie-00/BenchmarkTest02711.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00025.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00033.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00043.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00100.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00101.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00102.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00103.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00104.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00105.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00106.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00107.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00108.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00109.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00110.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00111.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00112.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00113.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00114.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00115.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00429.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00431.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00434.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00436.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00439.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00441.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-00/BenchmarkTest00509.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-01/BenchmarkTest00511.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-01/BenchmarkTest00514.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-01/BenchmarkTest00516.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-01/BenchmarkTest00519.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-01/BenchmarkTest00673.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-01/BenchmarkTest00676.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-01/BenchmarkTest00678.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-01/BenchmarkTest00681.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-01/BenchmarkTest00761.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-01/BenchmarkTest00763.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-01/BenchmarkTest00766.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-01/BenchmarkTest00768.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-01/BenchmarkTest00771.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-01/BenchmarkTest00773.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-01/BenchmarkTest00924.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-01/BenchmarkTest00926.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-01/BenchmarkTest00929.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-01/BenchmarkTest00931.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-01/BenchmarkTest00934.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest00936.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest00939.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest00996.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest00997.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest00998.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest00999.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest01000.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest01001.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest01002.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest01003.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest01004.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest01005.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest01006.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest01007.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest01008.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest01009.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest01010.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest01011.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest01012.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest01302.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest01305.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest01307.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest01310.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest01312.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest01315.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest01380.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest01382.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest01385.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-02/BenchmarkTest01387.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-03/BenchmarkTest01390.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-03/BenchmarkTest01392.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-03/BenchmarkTest01395.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-03/BenchmarkTest01553.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-03/BenchmarkTest01555.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-03/BenchmarkTest01558.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-03/BenchmarkTest01560.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-03/BenchmarkTest01620.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-03/BenchmarkTest01623.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-03/BenchmarkTest01625.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-03/BenchmarkTest01628.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-03/BenchmarkTest01630.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-03/BenchmarkTest01803.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-03/BenchmarkTest01805.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-03/BenchmarkTest01808.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-03/BenchmarkTest01810.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-03/BenchmarkTest01813.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest01815.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest01818.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest01820.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest01877.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest01878.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest01879.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest01880.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest01881.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest01882.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest01883.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest01884.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest01885.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest01886.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest01887.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest01888.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest01889.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest01890.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest01891.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest02170.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest02172.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest02175.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest02177.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest02180.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest02182.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest02185.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest02187.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest02265.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest02267.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest02270.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest02272.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-04/BenchmarkTest02275.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-05/BenchmarkTest02277.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-05/BenchmarkTest02280.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-05/BenchmarkTest02282.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-05/BenchmarkTest02285.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-05/BenchmarkTest02287.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-05/BenchmarkTest02449.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-05/BenchmarkTest02451.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-05/BenchmarkTest02454.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-05/BenchmarkTest02456.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-05/BenchmarkTest02529.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-05/BenchmarkTest02531.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-05/BenchmarkTest02534.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-05/BenchmarkTest02536.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-05/BenchmarkTest02539.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-05/BenchmarkTest02541.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-05/BenchmarkTest02544.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-05/BenchmarkTest02546.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-06/BenchmarkTest02729.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-06/BenchmarkTest02731.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-06/BenchmarkTest02734.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-06/BenchmarkTest02736.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/sqli-06/BenchmarkTest02739.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-00/BenchmarkTest00004.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-00/BenchmarkTest00097.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-00/BenchmarkTest00098.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-00/BenchmarkTest00099.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-00/BenchmarkTest00424.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-00/BenchmarkTest00426.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-00/BenchmarkTest00668.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-00/BenchmarkTest00671.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-00/BenchmarkTest00756.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-00/BenchmarkTest00758.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-00/BenchmarkTest00991.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-00/BenchmarkTest00992.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-00/BenchmarkTest00993.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-00/BenchmarkTest00994.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-00/BenchmarkTest00995.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-00/BenchmarkTest01300.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-00/BenchmarkTest01375.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-00/BenchmarkTest01377.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-00/BenchmarkTest01548.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-00/BenchmarkTest01550.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-00/BenchmarkTest01615.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-00/BenchmarkTest01618.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-01/BenchmarkTest01872.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-01/BenchmarkTest01873.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-01/BenchmarkTest01874.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-01/BenchmarkTest01875.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-01/BenchmarkTest01876.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-01/BenchmarkTest02165.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-01/BenchmarkTest02167.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-01/BenchmarkTest02262.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-01/BenchmarkTest02446.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-01/BenchmarkTest02524.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-01/BenchmarkTest02526.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-01/BenchmarkTest02724.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/trustbound-01/BenchmarkTest02726.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-00/BenchmarkTest00023.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-00/BenchmarkTest00066.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-00/BenchmarkTest00067.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-00/BenchmarkTest00068.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-00/BenchmarkTest00078.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-00/BenchmarkTest00079.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-00/BenchmarkTest00080.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-00/BenchmarkTest00081.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-00/BenchmarkTest00082.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-00/BenchmarkTest00083.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-00/BenchmarkTest00084.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-00/BenchmarkTest00085.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-00/BenchmarkTest00086.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-00/BenchmarkTest00094.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-00/BenchmarkTest00095.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-00/BenchmarkTest00096.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-00/BenchmarkTest00347.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-00/BenchmarkTest00349.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-00/BenchmarkTest00369.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-00/BenchmarkTest00399.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-00/BenchmarkTest00401.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-01/BenchmarkTest00414.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-01/BenchmarkTest00416.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-01/BenchmarkTest00419.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-01/BenchmarkTest00421.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-01/BenchmarkTest00461.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-01/BenchmarkTest00484.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-01/BenchmarkTest00486.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-01/BenchmarkTest00489.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-01/BenchmarkTest00501.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-01/BenchmarkTest00504.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-01/BenchmarkTest00506.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-01/BenchmarkTest00653.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-01/BenchmarkTest00661.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-01/BenchmarkTest00663.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-01/BenchmarkTest00666.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-01/BenchmarkTest00733.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-01/BenchmarkTest00746.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-01/BenchmarkTest00748.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-01/BenchmarkTest00751.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-01/BenchmarkTest00753.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-01/BenchmarkTest00899.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-01/BenchmarkTest00901.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-02/BenchmarkTest00911.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-02/BenchmarkTest00914.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-02/BenchmarkTest00916.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-02/BenchmarkTest00919.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-02/BenchmarkTest00921.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-02/BenchmarkTest00960.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-02/BenchmarkTest00971.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-02/BenchmarkTest00972.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-02/BenchmarkTest00973.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-02/BenchmarkTest00974.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-02/BenchmarkTest00975.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-02/BenchmarkTest00976.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-02/BenchmarkTest00984.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-02/BenchmarkTest00985.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-02/BenchmarkTest00986.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-02/BenchmarkTest00987.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-02/BenchmarkTest00988.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-02/BenchmarkTest00989.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-02/BenchmarkTest00990.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-02/BenchmarkTest01272.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-02/BenchmarkTest01275.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-02/BenchmarkTest01277.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-02/BenchmarkTest01292.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-02/BenchmarkTest01295.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-03/BenchmarkTest01297.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-03/BenchmarkTest01355.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-03/BenchmarkTest01357.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-03/BenchmarkTest01367.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-03/BenchmarkTest01370.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-03/BenchmarkTest01372.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-03/BenchmarkTest01518.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-03/BenchmarkTest01520.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-03/BenchmarkTest01535.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-03/BenchmarkTest01538.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-03/BenchmarkTest01540.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-03/BenchmarkTest01543.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-03/BenchmarkTest01545.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-03/BenchmarkTest01575.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-03/BenchmarkTest01603.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-03/BenchmarkTest01613.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-03/BenchmarkTest01783.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-03/BenchmarkTest01785.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-04/BenchmarkTest01788.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-04/BenchmarkTest01798.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-04/BenchmarkTest01800.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-04/BenchmarkTest01842.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-04/BenchmarkTest01843.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-04/BenchmarkTest01853.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-04/BenchmarkTest01854.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-04/BenchmarkTest01855.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-04/BenchmarkTest01856.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-04/BenchmarkTest01857.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-04/BenchmarkTest01858.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-04/BenchmarkTest01859.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-04/BenchmarkTest01860.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-04/BenchmarkTest01866.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-04/BenchmarkTest01867.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-04/BenchmarkTest01868.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-04/BenchmarkTest01869.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-04/BenchmarkTest01870.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-04/BenchmarkTest01871.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-04/BenchmarkTest02117.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-04/BenchmarkTest02140.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-04/BenchmarkTest02157.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-05/BenchmarkTest02160.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-05/BenchmarkTest02162.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-05/BenchmarkTest02245.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-05/BenchmarkTest02255.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-05/BenchmarkTest02257.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-05/BenchmarkTest02260.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-05/BenchmarkTest02416.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-05/BenchmarkTest02419.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-05/BenchmarkTest02421.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-05/BenchmarkTest02424.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-05/BenchmarkTest02426.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-05/BenchmarkTest02434.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-05/BenchmarkTest02436.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-05/BenchmarkTest02439.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-05/BenchmarkTest02441.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-05/BenchmarkTest02444.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-05/BenchmarkTest02499.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-05/BenchmarkTest02501.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-05/BenchmarkTest02504.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-05/BenchmarkTest02506.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-05/BenchmarkTest02519.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-05/BenchmarkTest02521.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-05/BenchmarkTest02701.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-06/BenchmarkTest02704.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-06/BenchmarkTest02706.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-06/BenchmarkTest02716.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-06/BenchmarkTest02719.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/weakrand-06/BenchmarkTest02721.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xpathi-00/BenchmarkTest00116.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xpathi-00/BenchmarkTest00117.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xpathi-00/BenchmarkTest00118.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xpathi-00/BenchmarkTest00683.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xpathi-00/BenchmarkTest00941.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xpathi-00/BenchmarkTest01013.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xpathi-00/BenchmarkTest01014.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xpathi-00/BenchmarkTest01397.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xpathi-00/BenchmarkTest01633.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xpathi-00/BenchmarkTest01892.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xpathi-00/BenchmarkTest01893.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xpathi-00/BenchmarkTest01894.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 25,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-00/BenchmarkTest00030.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-00/BenchmarkTest00376.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-00/BenchmarkTest00379.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-00/BenchmarkTest00381.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-00/BenchmarkTest00384.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-00/BenchmarkTest00386.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-00/BenchmarkTest00389.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-00/BenchmarkTest00391.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-00/BenchmarkTest00394.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-00/BenchmarkTest00469.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-00/BenchmarkTest00471.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-00/BenchmarkTest00474.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-00/BenchmarkTest00476.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-00/BenchmarkTest00479.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-01/BenchmarkTest00643.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-01/BenchmarkTest00646.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-01/BenchmarkTest00648.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-01/BenchmarkTest00651.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-01/BenchmarkTest00656.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-01/BenchmarkTest00711.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-01/BenchmarkTest00713.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-01/BenchmarkTest00716.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-01/BenchmarkTest00718.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-01/BenchmarkTest00721.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-01/BenchmarkTest00723.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-01/BenchmarkTest00726.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-01/BenchmarkTest00728.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-01/BenchmarkTest00879.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-01/BenchmarkTest00881.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-01/BenchmarkTest00884.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-01/BenchmarkTest00886.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-01/BenchmarkTest00889.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-01/BenchmarkTest00891.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-01/BenchmarkTest00894.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-02/BenchmarkTest01252.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-02/BenchmarkTest01255.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-02/BenchmarkTest01257.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-02/BenchmarkTest01260.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-02/BenchmarkTest01262.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-02/BenchmarkTest01265.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-02/BenchmarkTest01267.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-02/BenchmarkTest01335.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-02/BenchmarkTest01337.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-02/BenchmarkTest01340.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-02/BenchmarkTest01342.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-02/BenchmarkTest01345.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-02/BenchmarkTest01347.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-02/BenchmarkTest01350.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-02/BenchmarkTest01352.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-02/BenchmarkTest01505.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-02/BenchmarkTest01508.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-03/BenchmarkTest01510.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-03/BenchmarkTest01513.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-03/BenchmarkTest01515.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-03/BenchmarkTest01525.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-03/BenchmarkTest01583.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-03/BenchmarkTest01585.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-03/BenchmarkTest01588.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-03/BenchmarkTest01590.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-03/BenchmarkTest01593.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-03/BenchmarkTest01595.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-03/BenchmarkTest01598.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-03/BenchmarkTest01768.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-03/BenchmarkTest01770.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-03/BenchmarkTest01773.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-03/BenchmarkTest01775.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-03/BenchmarkTest01790.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-03/BenchmarkTest02122.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-04/BenchmarkTest02125.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-04/BenchmarkTest02127.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-04/BenchmarkTest02130.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-04/BenchmarkTest02132.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-04/BenchmarkTest02135.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-04/BenchmarkTest02145.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-04/BenchmarkTest02222.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-04/BenchmarkTest02225.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-04/BenchmarkTest02227.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-04/BenchmarkTest02230.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-04/BenchmarkTest02232.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-04/BenchmarkTest02235.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-04/BenchmarkTest02237.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-04/BenchmarkTest02240.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-04/BenchmarkTest02394.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-04/BenchmarkTest02396.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-04/BenchmarkTest02399.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-04/BenchmarkTest02401.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-04/BenchmarkTest02404.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-04/BenchmarkTest02406.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-04/BenchmarkTest02409.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-04/BenchmarkTest02481.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-04/BenchmarkTest02484.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-04/BenchmarkTest02486.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-05/BenchmarkTest02489.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-05/BenchmarkTest02491.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-05/BenchmarkTest02494.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-05/BenchmarkTest02509.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-05/BenchmarkTest02679.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-05/BenchmarkTest02681.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-05/BenchmarkTest02684.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-05/BenchmarkTest02686.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-05/BenchmarkTest02689.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-05/BenchmarkTest02691.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-05/BenchmarkTest02694.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 32,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/webapp/xss-05/BenchmarkTest02696.html"
                },
                "region": {
                  "endColumn": 12,
                  "endLine": 20,
                  "startColumn": 5,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks"
          },
          "ruleId": "CWE-352"
        }
      ],
      "tool": {
        "driver": {
          "name": "semgrep"
        }
      }
    }
  ],
  "version": "2.1.0"
}