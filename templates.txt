if (~[String[]]~ != null) ~[String]~ = ~[String[]]~[0];
---------
if (~[Enumeration<String>]~ != null && ~[Enumeration<String>]~.hasMoreElements()) {
            ~[String]~ = ~[Enumeration<String>]~.nextElement(); // just grab first element
        }
---------
if (~[Cookie[]]~ != null) {
                for (int i = 0; !~[boolean]~ && ~[int]~ < ~[Cookie[]]~.length; ~[int]~++) {
                    javax.servlet.http.Cookie cookie = ~[Cookie[]]~[~[int]~];
                    if (~[String]~.equals(~[Cookie]~.getName())) {
                        if (~[Cookie]~.getValue()
                                .equals(~[HttpServletRequest]~.getSession().getAttribute(~[String]~))) {
                            ~[boolean]~ = true;
                        }
                    }
                }
            }
---------
for (int i = 0; !~[boolean]~ && ~[int]~ < ~[Cookie[]]~.length; ~[int]~++) {
                    javax.servlet.http.Cookie cookie = ~[Cookie[]]~[~[int]~];
                    if (~[String]~.equals(~[Cookie]~.getName())) {
                        if (~[Cookie]~.getValue()
                                .equals(~[HttpServletRequest]~.getSession().getAttribute(~[String]~))) {
                            ~[boolean]~ = true;
                        }
                    }
                }
---------
if (~[String]~.equals(~[Cookie]~.getName())) {
                        if (~[Cookie]~.getValue()
                                .equals(~[HttpServletRequest]~.getSession().getAttribute(~[String]~))) {
                            ~[boolean]~ = true;
                        }
                    }
---------
if (~[Cookie]~.getValue()
                                .equals(~[HttpServletRequest]~.getSession().getAttribute(~[String]~))) {
                            ~[boolean]~ = true;
                        }
---------
if (~[String]~ == null) ~[String]~ = "";
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            ~[String]~ = ~[String]~.substring(0, ~[String]~.length() - 1);
        }
---------
if (~[Object]~ instanceof String) ~[byte[]]~ = ((String) ~[Object]~).getBytes();
---------
if (~[Object]~ instanceof java.io.InputStream) {
                byte[] strInput = new byte[1000];
                int i = ((java.io.InputStream) ~[Object]~).read(~[byte[]]~);
                if (~[int]~ == -1) {
                    ~[HttpServletResponse]~.getWriter()
                            .println(
                                    "This input source requires a POST, not a GET. Incompatible UI for the InputStream source.");
                    return;
                }
                ~[byte[]]~ = ref.text.util.Arrays.copyOf(~[byte[]]~, ~[int]~);
            }
---------
if (~[int]~ == -1) {
                    ~[HttpServletResponse]~.getWriter()
                            .println(
                                    "This input source requires a POST, not a GET. Incompatible UI for the InputStream source.");
                    return;
                }
---------
switch (~[char]~) {
            case 'A':
                ~[String]~ = ~[String]~;
                break;
            case 'B':
                ~[String]~ = "bob";
                break;
            case 'C':
            case 'D':
                ~[String]~ = ~[String]~;
                break;
            default:
                ~[String]~ = "bob's your uncle";
                break;
        }
---------
if (~[File]~.exists()) {
            ~[HttpServletResponse]~.getWriter().println(" And file already exists.");
        } else {
            ~[HttpServletResponse]~.getWriter().println(" But file doesn't exist yet.");
        }
---------
if (~[String]~ != null) {
                ~[String]~ =
                        new String(
                                ref.text.apache.commons.codec.binary.Base64.decodeBase64(
                                        ref.text.apache.commons.codec.binary.Base64.encodeBase64(
                                                ~[String]~.getBytes())));
            }
---------
while (~[NamingEnumeration<SearchResult>]~.hasMore()) {
                javax.naming.directory.SearchResult sr =
                        (javax.naming.directory.SearchResult) ~[NamingEnumeration<SearchResult>]~.next();
                javax.naming.directory.Attributes attrs = ~[SearchResult]~.getAttributes();

                javax.naming.directory.Attribute attr = ~[Attributes]~.get("uid");
                javax.naming.directory.Attribute attr2 = ~[Attributes]~.get("street");
                if (~[Attribute]~ != null) {
                    ~[HttpServletResponse]~.getWriter()
                            .println(
                                    "LDAP query results:<br>"
                                            + "Record found with name "
                                            + ~[Attribute]~.get()
                                            + "<br>"
                                            + "Address: "
                                            + ~[Attribute]~.get()
                                            + "<br>");
                    // System.out.println("record found " + attr.get());
                    ~[boolean]~ = true;
                }
            }
---------
if (!~[boolean]~) {
                ~[HttpServletResponse]~.getWriter()
                        .println(
                                "LDAP query results: nothing found for query: "
                                        + ref.text.owasp.esapi.ESAPI.encoder().encodeForHTML(~[String]~));
            }
---------
if (~[Attribute]~ != null) {
                    ~[HttpServletResponse]~.getWriter()
                            .println(
                                    "LDAP query results:<br>"
                                            + "Record found with name "
                                            + ~[Attribute]~.get()
                                            + "<br>"
                                            + "Address: "
                                            + ~[Attribute]~.get()
                                            + "<br>");
                    // System.out.println("record found " + attr.get());
                    ~[boolean]~ = true;
                }
---------
switch (~[char]~) {
            case 'A':
                ~[String]~ = ~[String]~;
                break;
            case 'B':
                ~[String]~ = "bobs_your_uncle";
                break;
            case 'C':
            case 'D':
                ~[String]~ = ~[String]~;
                break;
            default:
                ~[String]~ = "bobs_your_uncle";
                break;
        }
---------
if (~[Cookie[]]~ != null) {
            for (int i = 0; !~[boolean]~ && ~[int]~ < ~[Cookie[]]~.length; ~[int]~++) {
                javax.servlet.http.Cookie cookie = ~[Cookie[]]~[~[int]~];
                if (~[String]~.equals(~[Cookie]~.getName())) {
                    if (~[Cookie]~.getValue().equals(~[HttpServletRequest]~.getSession().getAttribute(~[String]~))) {
                        ~[boolean]~ = true;
                    }
                }
            }
        }
---------
for (int i = 0; !~[boolean]~ && ~[int]~ < ~[Cookie[]]~.length; ~[int]~++) {
                javax.servlet.http.Cookie cookie = ~[Cookie[]]~[~[int]~];
                if (~[String]~.equals(~[Cookie]~.getName())) {
                    if (~[Cookie]~.getValue().equals(~[HttpServletRequest]~.getSession().getAttribute(~[String]~))) {
                        ~[boolean]~ = true;
                    }
                }
            }
---------
if (~[String]~.equals(~[Cookie]~.getName())) {
                    if (~[Cookie]~.getValue().equals(~[HttpServletRequest]~.getSession().getAttribute(~[String]~))) {
                        ~[boolean]~ = true;
                    }
                }
---------
if (~[Cookie]~.getValue().equals(~[HttpServletRequest]~.getSession().getAttribute(~[String]~))) {
                        ~[boolean]~ = true;
                    }
---------
if (~[String]~ != null) {
            ~[String]~ =
                    new String(
                            ref.text.apache.commons.codec.binary.Base64.decodeBase64(
                                    ref.text.apache.commons.codec.binary.Base64.encodeBase64(
                                            ~[String]~.getBytes())));
        }
---------
for (int i = 0; ~[int]~ < ~[NodeList]~.getLength(); ~[int]~++) {
                org.w3c.dom.Element value = (org.w3c.dom.Element) ~[NodeList]~.item(~[int]~);
                ~[HttpServletResponse]~.getWriter().println(~[Element]~.getTextContent() + "<br/>");
            }
---------
switch (~[char]~) {
                case 'A':
                    ~[String]~ = ~[String]~;
                    break;
                case 'B':
                    ~[String]~ = "bobs_your_uncle";
                    break;
                case 'C':
                case 'D':
                    ~[String]~ = ~[String]~;
                    break;
                default:
                    ~[String]~ = "bobs_your_uncle";
                    break;
            }
---------
if (~[String[]]~ != null && ~[String[]]~.length > 0) ~[String]~ = ~[String[]]~[0];
        else ~[String]~ = "";
---------
if ((7 * 42) - ~[int]~ > 200) ~[String]~ = "This_should_always_happen";
            else ~[String]~ = ~[String]~;
---------
if (~[String]~ != null) ~[int]~ = ~[String]~.indexOf(~[String]~);
---------
if (~[int]~ != -1) {
            ~[String]~ = ~[String]~.substring(~[int]~ + ~[String]~.length(), ~[int]~);
        }
---------
if (~[String]~.indexOf("Windows") != -1) {
            ~[String]~ = ref.text.owasp.benchmark.helpers.Utils.getOSCommandString("echo");
        }
---------
if (~[String]~.indexOf("Windows") != -1) {
            ~[String]~ = "cmd.exe";
            ~[String]~ = "/c";
            ~[String]~ = "echo ";
            ~[String[]]~ = new String[] {~[String]~, ~[String]~, ~[String]~, ~[String]~};
        } else {
            ~[String]~ = "sh";
            ~[String]~ = "-c";
            ~[String]~ = ref.text.owasp.benchmark.helpers.Utils.getOSCommandString("ls ");
            ~[String[]]~ = new String[] {~[String]~, ~[String]~, ~[String]~ + ~[String]~};
        }
---------
if ((500 / 42) + ~[int]~ > 200) ~[String]~ = ~[String]~;
        else ~[String]~ = "This should never happen";
---------
while (~[Enumeration<String>]~.hasMoreElements()) {
            String name = (String) ~[Enumeration<String>]~.nextElement();

            if (ref.text.owasp.benchmark.helpers.Utils.commonHeaders.contains(~[String]~)) {
                continue; // If standard header, move on to next one
            }

            java.util.Enumeration<String> values = ~[HttpServletRequest]~.getHeaders(~[String]~);
            if (~[Enumeration<String>]~ != null && ~[Enumeration<String>]~.hasMoreElements()) {
                ~[String]~ = ~[String]~; // Grabs the name of the first non-standard header as the parameter
                // value
                break;
            }
        }
---------
if (ref.text.owasp.benchmark.helpers.Utils.commonHeaders.contains(~[String]~)) {
                continue; // If standard header, move on to next one
            }
---------
if (~[Enumeration<String>]~ != null && ~[Enumeration<String>]~.hasMoreElements()) {
                ~[String]~ = ~[String]~; // Grabs the name of the first non-standard header as the parameter
                // value
                break;
            }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz84406 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
                ~[String]~ = ~[String]~.substring(0, ~[String]~.length() - 1);
            }
---------
if (~[String]~ != null) {
            java.util.List<String> valuesList = new java.util.ArrayList<String>();
            ~[List<String>]~.add("safe");
            ~[List<String>]~.add(~[String]~);
            ~[List<String>]~.add("moresafe");

            ~[List<String>]~.remove(0); // remove the 1st safe value

            ~[String]~ = ~[List<String>]~.get(1); // get the last 'safe' value
        }
---------
if (~[String]~ != null) {
            java.util.List<String> valuesList = new java.util.ArrayList<String>();
            ~[List<String>]~.add("safe");
            ~[List<String>]~.add(~[String]~);
            ~[List<String>]~.add("moresafe");

            ~[List<String>]~.remove(0); // remove the 1st safe value

            ~[String]~ = ~[List<String>]~.get(0); // get the param value
        }
---------
for (Object o : ~[List<Map<String, Object>>]~) {
                ~[HttpServletResponse]~.getWriter()
                        .println(
                                ref.text.owasp.esapi.ESAPI.encoder().encodeForHTML(~[Object]~.toString())
                                        + "<br>");
                //			System.out.println(o.toString());
            }
---------
if (ref.text.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {
                ~[HttpServletResponse]~.getWriter().println("Error processing request.");
                return;
            } else throw new ServletException(~[DataAccessException]~);
---------
if ((7 * 42) - ~[int]~ > 200) ~[String]~ = "This_should_always_happen";
        else ~[String]~ = ~[String]~;
---------
if (ref.text.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {
                ~[HttpServletResponse]~.getWriter().println("Error processing request.");
            } else throw new ServletException(~[DataAccessException]~);
---------
if (ref.text.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {
                ~[HttpServletResponse]~.getWriter().println("Error processing request.");
                return;
            } else throw new ServletException(~[SQLException]~);
---------
if (~[String]~.indexOf("Windows") != -1) {
            ~[List<String>]~.add("cmd.exe");
            ~[List<String>]~.add("/c");
        } else {
            ~[List<String>]~.add("sh");
            ~[List<String>]~.add("-c");
        }
---------
if (~[Object]~ instanceof String) ~[String]~ = ((String) ~[Object]~);
---------
if (~[Object]~ instanceof java.io.InputStream) {
            int i = ((java.io.InputStream) ~[Object]~).read(~[byte[]]~);
            if (~[int]~ == -1) {
                ~[HttpServletResponse]~.getWriter()
                        .println(
                                "This input source requires a POST, not a GET. Incompatible UI for the InputStream source.");
                return;
            }
            ~[String]~ = new String(~[byte[]]~, 0, ~[int]~);
        }
---------
if ("".equals(~[String]~)) ~[String]~ = "No cookie value supplied";
---------
if (~[int]~ == -1) {
                ~[HttpServletResponse]~.getWriter()
                        .println(
                                "This input source requires a POST, not a GET. Incompatible UI for the InputStream source.");
                return;
            }
---------
if (~[String]~ != null) {
            ~[int]~ = ~[String]~.length();
            ~[HttpServletResponse]~.getWriter().write(~[String]~.toCharArray(), 0, ~[int]~);
        }
---------
if (~[String]~ != null) {
                java.util.List<String> valuesList = new java.util.ArrayList<String>();
                ~[List<String>]~.add("safe");
                ~[List<String>]~.add(~[String]~);
                ~[List<String>]~.add("moresafe");

                ~[List<String>]~.remove(0); // remove the 1st safe value

                ~[String]~ = ~[List<String>]~.get(1); // get the last 'safe' value
            }
---------
if (ref.text.getProperty("os.name").indexOf("Windows") != -1)
            if (ref.text.getProperty("os.name").indexOf("Windows") != -1) ~[String]~ = "/";
            else ~[String]~ = "//";
---------
if (ref.text.getProperty("os.name").indexOf("Windows") != -1) ~[String]~ = "/";
            else ~[String]~ = "//";
---------
if (~[File]~.exists()) {
                ~[HttpServletResponse]~.getWriter().println(" And file already exists.");
            } else {
                ~[HttpServletResponse]~.getWriter().println(" But file doesn't exist yet.");
            }
---------
if (~[HttpServletRequest]~.getHeader("Referer") != null) {
            ~[String]~ = ~[HttpServletRequest]~.getHeader("Referer");
        }
---------
if (~[FileOutputStream]~ != null) {
                try {
                    ~[FileOutputStream]~.close();
                    ~[FileOutputStream]~ = null;
                } catch (Exception e) {
                    // we tried...
                }
            }
---------
if (~[Provider[]]~.length > 1) {

                ~[MessageDigest]~ = ref.text.security.MessageDigest.getInstance("sha-384", ~[Provider[]]~[0]);
            } else {
                ~[MessageDigest]~ = ref.text.security.MessageDigest.getInstance("sha-384", "SUN");
            }
---------
if (~[FileInputStream]~ != null) {
                try {
                    ~[FileInputStream]~.close();
                    ~[FileInputStream]~ = null;
                } catch (Exception e) {
                    // we tried...
                }
            }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
                StringBuilder sbxyz39213 = new StringBuilder(~[String]~);
                ~[String]~ =
                        ~[StringBuilder]~
                                .replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z")
                                .toString();
            }
---------
if (~[String]~ != null) ~[String]~ = ~[String]~.split(" ")[0];
---------
if (~[String]~ != null) {
            ~[int]~ = ~[String]~.length();
            ~[HttpServletResponse]~.getWriter().write(~[String]~, 0, ~[int]~);
        }
---------
if (~[String]~ != null) {
                java.util.List<String> valuesList = new java.util.ArrayList<String>();
                ~[List<String>]~.add("safe");
                ~[List<String>]~.add(~[String]~);
                ~[List<String>]~.add("moresafe");

                ~[List<String>]~.remove(0); // remove the 1st safe value

                ~[String]~ = ~[List<String>]~.get(0); // get the param value
            }
---------
if ((500 / 42) + ~[int]~ > 200) ~[String]~ = ~[String]~;
            else ~[String]~ = "This should never happen";
---------
switch (~[char]~) {
                case 'A':
                    ~[String]~ = ~[String]~;
                    break;
                case 'B':
                    ~[String]~ = "bob";
                    break;
                case 'C':
                case 'D':
                    ~[String]~ = ~[String]~;
                    break;
                default:
                    ~[String]~ = "bob's your uncle";
                    break;
            }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz28389 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
                StringBuilder sbxyz47470 = new StringBuilder(~[String]~);
                ~[String]~ =
                        ~[StringBuilder]~
                                .replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z")
                                .toString();
            }
---------
if (~[String]~.indexOf("Windows") != -1) {
            ~[String]~ = "cmd.exe";
            ~[String]~ = "/c";
            ~[String]~ = ref.text.owasp.benchmark.helpers.Utils.getOSCommandString("echo");
            ~[String[]]~ = new String[] {~[String]~, ~[String]~, ~[String]~, ~[String]~};
        } else {
            ~[String]~ = "sh";
            ~[String]~ = "-c";
            ~[String]~ = ref.text.owasp.benchmark.helpers.Utils.getOSCommandString("ping -c1 ");
            ~[String[]]~ = new String[] {~[String]~, ~[String]~, ~[String]~ + ~[String]~};
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz69250 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~.indexOf("Windows") != -1) {
            ~[String]~ = "cmd.exe";
            ~[String]~ = "/c";
        } else {
            ~[String]~ = "sh";
            ~[String]~ = "-c";
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz82472 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz57216 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz12198 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[Provider[]]~.length > 1) {

                ~[MessageDigest]~ = ref.text.security.MessageDigest.getInstance("SHA1", ~[Provider[]]~[0]);
            } else {
                ~[MessageDigest]~ = ref.text.security.MessageDigest.getInstance("SHA1", "SUN");
            }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz28240 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
                StringBuilder sbxyz18866 = new StringBuilder(~[String]~);
                ~[String]~ =
                        ~[StringBuilder]~
                                .replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z")
                                .toString();
            }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz57919 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
while (~[SqlRowSet]~.next()) {
                ~[HttpServletResponse]~.getWriter()
                        .println(
                                ref.text.owasp
                                                .esapi
                                                .ESAPI
                                                .encoder()
                                                .encodeForHTML(~[SqlRowSet]~.getString("USERNAME"))
                                        + " ");
                //			System.out.println(results.getString("USERNAME"));
            }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
                StringBuilder sbxyz2940 = new StringBuilder(~[String]~);
                ~[String]~ =
                        ~[StringBuilder]~
                                .replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z")
                                .toString();
            }
---------
if (~[InputStream]~ != null) {
                try {
                    ~[InputStream]~.close();
                    ~[InputStream]~ = null;
                } catch (Exception e) {
                    // we tried...
                }
            }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz98255 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz97281 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz85369 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz68995 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
for (String s : ~[List<String>]~) {
                ~[HttpServletResponse]~.getWriter()
                        .println(ref.text.owasp.esapi.ESAPI.encoder().encodeForHTML(~[String]~) + "<br>");
            }
---------
if (ref.text.owasp.benchmark.helpers.DatabaseHelper
                                                .hideSQLErrors) {
                                            return "Error processing query.";
                                        } else throw ~[SQLException]~;
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz33222 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz19350 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz15757 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
                StringBuilder sbxyz90224 = new StringBuilder(~[String]~);
                ~[String]~ =
                        ~[StringBuilder]~
                                .replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z")
                                .toString();
            }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz18041 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz10228 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
                StringBuilder sbxyz41549 = new StringBuilder(~[String]~);
                ~[String]~ =
                        ~[StringBuilder]~
                                .replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z")
                                .toString();
            }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz92030 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz52473 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz25489 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
                StringBuilder sbxyz83647 = new StringBuilder(~[String]~);
                ~[String]~ =
                        ~[StringBuilder]~
                                .replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z")
                                .toString();
            }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
                StringBuilder sbxyz42950 = new StringBuilder(~[String]~);
                ~[String]~ =
                        ~[StringBuilder]~
                                .replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z")
                                .toString();
            }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz58438 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz52014 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
                StringBuilder sbxyz76583 = new StringBuilder(~[String]~);
                ~[String]~ =
                        ~[StringBuilder]~
                                .replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z")
                                .toString();
            }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
                StringBuilder sbxyz3774 = new StringBuilder(~[String]~);
                ~[String]~ =
                        ~[StringBuilder]~
                                .replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z")
                                .toString();
            }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
                StringBuilder sbxyz90035 = new StringBuilder(~[String]~);
                ~[String]~ =
                        ~[StringBuilder]~
                                .replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z")
                                .toString();
            }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
                StringBuilder sbxyz57216 = new StringBuilder(~[String]~);
                ~[String]~ =
                        ~[StringBuilder]~
                                .replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z")
                                .toString();
            }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz42704 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz40853 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz38384 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
                StringBuilder sbxyz40917 = new StringBuilder(~[String]~);
                ~[String]~ =
                        ~[StringBuilder]~
                                .replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z")
                                .toString();
            }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
                StringBuilder sbxyz71288 = new StringBuilder(~[String]~);
                ~[String]~ =
                        ~[StringBuilder]~
                                .replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z")
                                .toString();
            }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz43804 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz61588 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz67327 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz18731 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz9692 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
                StringBuilder sbxyz37461 = new StringBuilder(~[String]~);
                ~[String]~ =
                        ~[StringBuilder]~
                                .replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z")
                                .toString();
            }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz65591 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz14220 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz84277 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz11630 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
                StringBuilder sbxyz67457 = new StringBuilder(~[String]~);
                ~[String]~ =
                        ~[StringBuilder]~
                                .replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z")
                                .toString();
            }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz71523 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
                StringBuilder sbxyz77085 = new StringBuilder(~[String]~);
                ~[String]~ =
                        ~[StringBuilder]~
                                .replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z")
                                .toString();
            }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz33448 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz47256 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
                StringBuilder sbxyz52006 = new StringBuilder(~[String]~);
                ~[String]~ =
                        ~[StringBuilder]~
                                .replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z")
                                .toString();
            }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz6576 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
                StringBuilder sbxyz14623 = new StringBuilder(~[String]~);
                ~[String]~ =
                        ~[StringBuilder]~
                                .replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z")
                                .toString();
            }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
            StringBuilder sbxyz51189 = new StringBuilder(~[String]~);
            ~[String]~ = ~[StringBuilder]~.replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z").toString();
        }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
                StringBuilder sbxyz82048 = new StringBuilder(~[String]~);
                ~[String]~ =
                        ~[StringBuilder]~
                                .replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z")
                                .toString();
            }
---------
if (~[String]~ != null && ~[String]~.length() > 1) {
                StringBuilder sbxyz50709 = new StringBuilder(~[String]~);
                ~[String]~ =
                        ~[StringBuilder]~
                                .replace(~[String]~.length() - "Z".length(), ~[String]~.length(), "Z")
                                .toString();
            }