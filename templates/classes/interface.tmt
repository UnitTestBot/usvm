~class org.owasp.benchmark.helpers._Fuzz_Interface start~
package org.owasp.benchmark.helpers;

public interface _Fuzz_Interface<T> {
   public T Call(T l, T r);
}

~class org.owasp.benchmark.helpers._Fuzz_Interface end~

~class org.owasp.benchmark.helpers._Fuzz_Class1 start~
package org.owasp.benchmark.helpers;
import org.owasp.benchmark.helpers._Fuzz_Interface;

public class _Fuzz_Class1<T> implements _Fuzz_Interface<T> {
   @Override
   public T Call(T l, T r) {
      return l;
   }
}

~class org.owasp.benchmark.helpers._Fuzz_Class1 end~

~class org.owasp.benchmark.helpers._Fuzz_Class2 start~
package org.owasp.benchmark.helpers;
import org.owasp.benchmark.helpers._Fuzz_Interface;

public class _Fuzz_Class2<T> implements _Fuzz_Interface<T> {
   @Override
   public T Call(T l, T r) {
       return r;
   }
}

~class org.owasp.benchmark.helpers._Fuzz_Class2 end~

~main class start~
~import org.owasp.benchmark.helpers._Fuzz_Interface;~
~import org.owasp.benchmark.helpers._Fuzz_Class1;~
~import org.owasp.benchmark.helpers._Fuzz_Class2;~
~import java.util.*;~

~template start~
_Fuzz_Interface<~[TYPE@1]~> dc = new _Fuzz_Class1<~[TYPE@1]~>();
~[VAR_TYPE@1]~ = dc.Call(~[EXPR_TYPE@1]~, ~[EXPR_TYPE@1]~);
~template end~

~template start~
_Fuzz_Interface<~[TYPE@1]~> dc = new _Fuzz_Class2<~[TYPE@1]~>();
~[VAR_TYPE@1]~ = dc.Call(~[EXPR_TYPE@1]~, ~[EXPR_TYPE@1]~);
~template end~

~template start~
_Fuzz_Interface<~[TYPE@1]~> dc = null;
if (~[EXPR_Boolean]~) {
  dc = new _Fuzz_Class2<~[TYPE@1]~>();
} else {
  dc = new _Fuzz_Class1<~[TYPE@1]~>();
}
~[VAR_TYPE@1]~ = dc.Call(~[EXPR_TYPE@1]~, ~[EXPR_TYPE@1]~);
~template end~

~main class end~

