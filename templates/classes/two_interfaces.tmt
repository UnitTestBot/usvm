~class org.owasp.benchmark.helpers._Fuzz_LeftInterface start~
package org.owasp.benchmark.helpers;

public interface _Fuzz_LeftInterface<T> {
   default T InterfaceCall(T l, T r) {
      return l;
   }
}

~class org.owasp.benchmark.helpers._Fuzz_LeftInterface end~

~class org.owasp.benchmark.helpers._Fuzz_RightInterface start~
package org.owasp.benchmark.helpers;

public interface _Fuzz_RightInterface<T> {
   default T InterfaceCall(T l, T r) {
      return r;
   }
}

~class org.owasp.benchmark.helpers._Fuzz_RightInterface end~

~class org.owasp.benchmark.helpers._Fuzz_ImplementBoth start~
package org.owasp.benchmark.helpers;

public class _Fuzz_ImplementBoth<T> implements _Fuzz_LeftInterface<T>, _Fuzz_RightInterface<T> {
   public T InterfaceCall(T l, T r) {
      return null;
   }
}

~class org.owasp.benchmark.helpers._Fuzz_ImplementBoth end~

~main class start~
~import org.owasp.benchmark.helpers._Fuzz_LeftInterface;~
~import org.owasp.benchmark.helpers._Fuzz_RightInterface;~
~import org.owasp.benchmark.helpers._Fuzz_ImplementBoth;~
~import java.util.*;~

~template start~
_Fuzz_ImplementBoth<~[TYPE@1]~> i = new _Fuzz_ImplementBoth<~[TYPE@1]~>();
~[VAR_TYPE@1]~ = i.InterfaceCall(~[EXPR_TYPE@1]~, ~[EXPR_TYPE@1]~);
~template end~

~template start~
_Fuzz_LeftInterface<~[TYPE@1]~> i = new _Fuzz_ImplementBoth<~[TYPE@1]~>();
~[VAR_TYPE@1]~ = i.InterfaceCall(~[EXPR_TYPE@1]~, ~[EXPR_TYPE@1]~);
~template end~

~template start~
_Fuzz_RightInterface<~[TYPE@1]~> i = new _Fuzz_ImplementBoth<~[TYPE@1]~>();
~[VAR_TYPE@1]~ = i.InterfaceCall(~[EXPR_TYPE@1]~, ~[EXPR_TYPE@1]~);
~template end~

~main class end~
