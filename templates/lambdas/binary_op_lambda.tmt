~class org.owasp.benchmark.helpers._Fuzz_BinaryOpInterface start~
package org.owasp.benchmark.helpers;


public interface _Fuzz_BinaryOpInterface<T> {
   public T VirtualCall(T a, T b);
}

~class org.owasp.benchmark.helpers._Fuzz_BinaryOpInterface end~


~main class start~
~import org.owasp.benchmark.helpers._Fuzz_BinaryOpInterface;~
~import java.util.*;~

~template start~
_Fuzz_BinaryOpInterface<Integer> lambda = (a, b) -> { return a + b };
~[VAR_Integer]~ = lambda.VirtualCall(~[EXPR_Integer]~, ~[EXPR_Integer]~);
~template end~

~template start~
_Fuzz_BinaryOpInterface<Integer> lambda = (a, b) -> { return a - b };
~[VAR_Integer]~ = lambda.VirtualCall(~[EXPR_Integer]~, ~[EXPR_Integer]~);
~template end~

~template start~
_Fuzz_BinaryOpInterface<Integer> lambda = (a, b) -> { return a * b };
~[VAR_Integer]~ = lambda.VirtualCall(~[EXPR_Integer]~, ~[EXPR_Integer]~);
~template end~

~template start~
_Fuzz_BinaryOpInterface<Integer> lambda = (a, b) -> { return a / b };
~[VAR_Integer]~ = lambda.VirtualCall(~[EXPR_Integer]~, ~[EXPR_Integer]~);
~template end~

~template start~
_Fuzz_BinaryOpInterface<Integer> lambda = (a, b) -> {
  Integer result = 1;
  for (Integer i = 0; i < b; i = i + 1) {
    result *= a;
  }
  return result;
};
~[VAR_Integer]~ = lambda.VirtualCall(~[EXPR_Integer]~, ~[EXPR_Integer]~);
~template end~

~template start~
_Fuzz_BinaryOpInterface<String> lambda = (a, b) -> { return a + b; };
~[VAR_String]~ = lambda.VirtualCall(~[EXPR_String]~, ~[EXPR_String]~);
~template end~

~template start~
_Fuzz_BinaryOpInterface<String> lambda = (a, b) -> {
  if (a.length() > b.length()) {
    return a;
  } else {
    return b;
  }
};
~[VAR_String]~ = lambda.VirtualCall(~[EXPR_String]~, ~[EXPR_String]~);
~template end~

~template start~
_Fuzz_BinaryOpInterface<String> lambda = (a, b) -> {
  if (a.length() < b.length()) {
    return a;
  } else {
    return b;
  }
};
~[VAR_String]~ = lambda.VirtualCall(~[EXPR_String]~, ~[EXPR_String]~);
~template end~

~template start~
_Fuzz_BinaryOpInterface<String> lambda = (a, b) -> {
  return "";
};
~[VAR_String]~ = lambda.VirtualCall(~[EXPR_String]~, ~[EXPR_String]~);
~template end~

~main class end~
